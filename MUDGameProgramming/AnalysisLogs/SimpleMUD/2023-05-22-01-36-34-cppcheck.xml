<?xml version="1.0" encoding="UTF-8"?>
<results version="2">
    <cppcheck version="2.7"/>
    <errors>
Checking SimpleMUD/SimpleMUD.cpp ...
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;matchentityfull&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;matchentityfull&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="SimpleMUD/SimpleMUD.cpp">
            <location file="SimpleMUD/SimpleMUD/Entity.h" line="99" column="3"/>
            <symbol>matchentityfull</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;matchentity&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;matchentity&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="SimpleMUD/SimpleMUD.cpp">
            <location file="SimpleMUD/SimpleMUD/Entity.h" line="112" column="3"/>
            <symbol>matchentity</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;playersend&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;playersend&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="SimpleMUD/SimpleMUD.cpp">
            <location file="SimpleMUD/SimpleMUD/Player.h" line="216" column="3"/>
            <symbol>playersend</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Logon&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Logon&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="SimpleMUD/SimpleMUD.cpp">
            <location file="SimpleMUD/SimpleMUD/Logon.h" line="41" column="3"/>
            <symbol>Logon</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;iterator&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="SimpleMUD/SimpleMUD.cpp">
            <location file="SimpleMUD/SimpleMUD/EntityDatabase.h" line="36" column="5"/>
            <symbol>iterator</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;p_str&apos; should be passed by const reference." verbose="Parameter &apos;p_str&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="SimpleMUD/SimpleMUD.cpp">
            <location file="SimpleMUD/SimpleMUD/Attributes.h" line="78" column="38"/>
            <symbol>p_str</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;p_str&apos; should be passed by const reference." verbose="Parameter &apos;p_str&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="SimpleMUD/SimpleMUD.cpp">
            <location file="SimpleMUD/SimpleMUD/Attributes.h" line="120" column="36"/>
            <symbol>p_str</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;p_str&apos; should be passed by const reference." verbose="Parameter &apos;p_str&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="SimpleMUD/SimpleMUD.cpp">
            <location file="SimpleMUD/SimpleMUD/Attributes.h" line="142" column="34"/>
            <symbol>p_str</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;p_str&apos; should be passed by const reference." verbose="Parameter &apos;p_str&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="SimpleMUD/SimpleMUD.cpp">
            <location file="SimpleMUD/SimpleMUD/Attributes.h" line="164" column="36"/>
            <symbol>p_str</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;p_str&apos; should be passed by const reference." verbose="Parameter &apos;p_str&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="SimpleMUD/SimpleMUD.cpp">
            <location file="SimpleMUD/SimpleMUD/Attributes.h" line="188" column="38"/>
            <symbol>p_str</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;p_name&apos; should be passed by const reference." verbose="Parameter &apos;p_name&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="SimpleMUD/SimpleMUD.cpp">
            <location file="SimpleMUD/SimpleMUD/EntityDatabase.h" line="100" column="35"/>
            <symbol>p_name</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;p_name&apos; should be passed by const reference." verbose="Parameter &apos;p_name&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="SimpleMUD/SimpleMUD.cpp">
            <location file="SimpleMUD/SimpleMUD/EntityDatabase.h" line="102" column="31"/>
            <symbol>p_name</symbol>
        </error>
        <error id="derefInvalidIterator" severity="error" msg="Dereference of an invalid iterator: m_map.rend()" verbose="Dereference of an invalid iterator: m_map.rend()" cwe="825" file0="SimpleMUD/SimpleMUD.cpp">
            <location file="SimpleMUD/SimpleMUD/EntityDatabase.h" line="110" column="35" info="Dereference of an invalid iterator"/>
            <symbol>m_map.rend()</symbol>
        </error>
1/15 files checked 1% done
Checking SimpleMUD/SimpleMUD/DatabasePointer.cpp ...
2/15 files checked 4% done
Checking SimpleMUD/SimpleMUD/Enemy.cpp ...
3/15 files checked 8% done
Checking SimpleMUD/SimpleMUD/EnemyDatabase.cpp ...
4/15 files checked 11% done
Checking SimpleMUD/SimpleMUD/Game.cpp ...
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;p_str&apos; should be passed by const reference." verbose="Parameter &apos;p_str&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="SimpleMUD/SimpleMUD/Game.cpp">
            <location file="SimpleMUD/SimpleMUD/Game.cpp" line="400" column="32"/>
            <symbol>p_str</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;p_player&apos; should be passed by const reference." verbose="Parameter &apos;p_player&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="SimpleMUD/SimpleMUD/Game.cpp">
            <location file="SimpleMUD/SimpleMUD/Game.cpp" line="400" column="51"/>
            <symbol>p_player</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;p_text&apos; should be passed by const reference." verbose="Parameter &apos;p_text&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="SimpleMUD/SimpleMUD/Game.cpp">
            <location file="SimpleMUD/SimpleMUD/Game.cpp" line="776" column="28"/>
            <symbol>p_text</symbol>
        </error>
5/15 files checked 59% done
Checking SimpleMUD/SimpleMUD/GameLoop.cpp ...
6/15 files checked 63% done
Checking SimpleMUD/SimpleMUD/ItemDatabase.cpp ...
7/15 files checked 64% done
Checking SimpleMUD/SimpleMUD/Logon.cpp ...
8/15 files checked 73% done
Checking SimpleMUD/SimpleMUD/Player.cpp ...
9/15 files checked 84% done
Checking SimpleMUD/SimpleMUD/PlayerDatabase.cpp ...
10/15 files checked 88% done
Checking SimpleMUD/SimpleMUD/Room.cpp ...
11/15 files checked 92% done
Checking SimpleMUD/SimpleMUD/RoomDatabase.cpp ...
12/15 files checked 94% done
Checking SimpleMUD/SimpleMUD/SimpleMUDLogs.cpp ...
13/15 files checked 95% done
Checking SimpleMUD/SimpleMUD/StoreDatabase.cpp ...
14/15 files checked 96% done
Checking SimpleMUD/SimpleMUD/Train.cpp ...
15/15 files checked 100% done
        <error id="unusedFunction" severity="style" msg="The function &apos;Flooded&apos; is never used." verbose="The function &apos;Flooded&apos; is never used." cwe="561">
            <location file="SimpleMUD/SimpleMUD/Game.cpp" line="356" column="0"/>
            <symbol>Flooded</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;Handle&apos; is never used." verbose="The function &apos;Handle&apos; is never used." cwe="561">
            <location file="SimpleMUD/SimpleMUD/Train.cpp" line="20" column="0"/>
            <symbol>Handle</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;SetBaseAttr&apos; is never used." verbose="The function &apos;SetBaseAttr&apos; is never used." cwe="561">
            <location file="SimpleMUD/SimpleMUD/Player.cpp" line="81" column="0"/>
            <symbol>SetBaseAttr</symbol>
        </error>
        <error id="missingInclude" severity="information" msg="Cppcheck cannot find all the include files (use --check-config for details)" verbose="Cppcheck cannot find all the include files. Cppcheck can check the code without the include files found. But the results will probably be more accurate if all the include files are found. Please check your project&apos;s include directories and add all of them as include directories for Cppcheck. To see what files Cppcheck cannot find use --check-config."/>
    </errors>
</results>
