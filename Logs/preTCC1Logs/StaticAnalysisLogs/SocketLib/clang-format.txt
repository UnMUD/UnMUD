./Libraries/SocketLib/SocketLibErrors.cpp:5:16: warning: code should be clang-formatted [-Wclang-format-violations]
// definitions.
               ^
./Libraries/SocketLib/SocketLibErrors.cpp:8:29: warning: code should be clang-formatted [-Wclang-format-violations]
#include "SocketLibErrors.h"
                            ^
./Libraries/SocketLib/SocketLibErrors.cpp:12:20: warning: code should be clang-formatted [-Wclang-format-violations]
namespace SocketLib
                   ^
./Libraries/SocketLib/SocketLibErrors.cpp:13:2: warning: code should be clang-formatted [-Wclang-format-violations]
{
 ^
./Libraries/SocketLib/SocketLibErrors.cpp:16:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibErrors.cpp:17:74: warning: code should be clang-formatted [-Wclang-format-violations]
    // Description: This function acts as a simple wrapper for retrieving
                                                                         ^
./Libraries/SocketLib/SocketLibErrors.cpp:18:65: warning: code should be clang-formatted [-Wclang-format-violations]
    //              socket library errors from errno or h_errno.
                                                                ^
./Libraries/SocketLib/SocketLibErrors.cpp:19:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibErrors.cpp:20:20: warning: code should be clang-formatted [-Wclang-format-violations]
    Error GetError( bool p_errno )
                   ^
./Libraries/SocketLib/SocketLibErrors.cpp:20:33: warning: code should be clang-formatted [-Wclang-format-violations]
    Error GetError( bool p_errno )
                                ^
./Libraries/SocketLib/SocketLibErrors.cpp:20:35: warning: code should be clang-formatted [-Wclang-format-violations]
    Error GetError( bool p_errno )
                                  ^
./Libraries/SocketLib/SocketLibErrors.cpp:21:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/SocketLibErrors.cpp:22:21: warning: code should be clang-formatted [-Wclang-format-violations]
        #ifdef WIN32
                    ^
./Libraries/SocketLib/SocketLibErrors.cpp:23:35: warning: code should be clang-formatted [-Wclang-format-violations]
            return TranslateError( WSAGetLastError(), p_errno );
                                  ^
./Libraries/SocketLib/SocketLibErrors.cpp:23:62: warning: code should be clang-formatted [-Wclang-format-violations]
            return TranslateError( WSAGetLastError(), p_errno );
                                                             ^
./Libraries/SocketLib/SocketLibErrors.cpp:23:65: warning: code should be clang-formatted [-Wclang-format-violations]
            return TranslateError( WSAGetLastError(), p_errno );
                                                                ^
./Libraries/SocketLib/SocketLibErrors.cpp:24:14: warning: code should be clang-formatted [-Wclang-format-violations]
        #else
             ^
./Libraries/SocketLib/SocketLibErrors.cpp:25:15: warning: code should be clang-formatted [-Wclang-format-violations]
            if( p_errno == true )
              ^
./Libraries/SocketLib/SocketLibErrors.cpp:25:16: warning: code should be clang-formatted [-Wclang-format-violations]
            if( p_errno == true )
               ^
./Libraries/SocketLib/SocketLibErrors.cpp:25:32: warning: code should be clang-formatted [-Wclang-format-violations]
            if( p_errno == true )
                               ^
./Libraries/SocketLib/SocketLibErrors.cpp:25:34: warning: code should be clang-formatted [-Wclang-format-violations]
            if( p_errno == true )
                                 ^
./Libraries/SocketLib/SocketLibErrors.cpp:26:39: warning: code should be clang-formatted [-Wclang-format-violations]
                return TranslateError( errno, p_errno );
                                      ^
./Libraries/SocketLib/SocketLibErrors.cpp:26:54: warning: code should be clang-formatted [-Wclang-format-violations]
                return TranslateError( errno, p_errno );
                                                     ^
./Libraries/SocketLib/SocketLibErrors.cpp:26:57: warning: code should be clang-formatted [-Wclang-format-violations]
                return TranslateError( errno, p_errno );
                                                        ^
./Libraries/SocketLib/SocketLibErrors.cpp:27:17: warning: code should be clang-formatted [-Wclang-format-violations]
            else
                ^
./Libraries/SocketLib/SocketLibErrors.cpp:28:39: warning: code should be clang-formatted [-Wclang-format-violations]
                return TranslateError( h_errno, p_errno );
                                      ^
./Libraries/SocketLib/SocketLibErrors.cpp:28:56: warning: code should be clang-formatted [-Wclang-format-violations]
                return TranslateError( h_errno, p_errno );
                                                       ^
./Libraries/SocketLib/SocketLibErrors.cpp:28:59: warning: code should be clang-formatted [-Wclang-format-violations]
                return TranslateError( h_errno, p_errno );
                                                          ^
./Libraries/SocketLib/SocketLibErrors.cpp:29:15: warning: code should be clang-formatted [-Wclang-format-violations]
        #endif
              ^
./Libraries/SocketLib/SocketLibErrors.cpp:31:30: warning: code should be clang-formatted [-Wclang-format-violations]
        return ESeriousError;
                             ^
./Libraries/SocketLib/SocketLibErrors.cpp:32:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }
     ^
./Libraries/SocketLib/SocketLibErrors.cpp:35:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibErrors.cpp:36:74: warning: code should be clang-formatted [-Wclang-format-violations]
    // Description: This translates error codes from the native platoform
                                                                         ^
./Libraries/SocketLib/SocketLibErrors.cpp:37:53: warning: code should be clang-formatted [-Wclang-format-violations]
    //              format into the SocketLib format
                                                    ^
./Libraries/SocketLib/SocketLibErrors.cpp:38:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibErrors.cpp:39:17: warning: code should be clang-formatted [-Wclang-format-violations]
    #ifdef WIN32
                ^
./Libraries/SocketLib/SocketLibErrors.cpp:40:30: warning: code should be clang-formatted [-Wclang-format-violations]
        Error TranslateError( int p_error, bool p_errno )
                             ^
./Libraries/SocketLib/SocketLibErrors.cpp:40:56: warning: code should be clang-formatted [-Wclang-format-violations]
        Error TranslateError( int p_error, bool p_errno )
                                                       ^
./Libraries/SocketLib/SocketLibErrors.cpp:40:58: warning: code should be clang-formatted [-Wclang-format-violations]
        Error TranslateError( int p_error, bool p_errno )
                                                         ^
./Libraries/SocketLib/SocketLibErrors.cpp:41:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/SocketLibErrors.cpp:42:19: warning: code should be clang-formatted [-Wclang-format-violations]
            switch( p_error )
                  ^
./Libraries/SocketLib/SocketLibErrors.cpp:42:20: warning: code should be clang-formatted [-Wclang-format-violations]
            switch( p_error )
                   ^
./Libraries/SocketLib/SocketLibErrors.cpp:42:28: warning: code should be clang-formatted [-Wclang-format-violations]
            switch( p_error )
                           ^
./Libraries/SocketLib/SocketLibErrors.cpp:42:30: warning: code should be clang-formatted [-Wclang-format-violations]
            switch( p_error )
                             ^
./Libraries/SocketLib/SocketLibErrors.cpp:43:14: warning: code should be clang-formatted [-Wclang-format-violations]
            {
             ^
./Libraries/SocketLib/SocketLibErrors.cpp:44:27: warning: code should be clang-formatted [-Wclang-format-violations]
            case WSAEINTR:
                          ^
./Libraries/SocketLib/SocketLibErrors.cpp:45:37: warning: code should be clang-formatted [-Wclang-format-violations]
                return EInterrupted;
                                    ^
./Libraries/SocketLib/SocketLibErrors.cpp:46:28: warning: code should be clang-formatted [-Wclang-format-violations]
            case WSAEACCES:
                           ^
./Libraries/SocketLib/SocketLibErrors.cpp:47:38: warning: code should be clang-formatted [-Wclang-format-violations]
                return EAccessDenied;
                                     ^
./Libraries/SocketLib/SocketLibErrors.cpp:48:28: warning: code should be clang-formatted [-Wclang-format-violations]
            case WSAEFAULT:
                           ^
./Libraries/SocketLib/SocketLibErrors.cpp:49:28: warning: code should be clang-formatted [-Wclang-format-violations]
            case WSAEINVAL:
                           ^
./Libraries/SocketLib/SocketLibErrors.cpp:50:42: warning: code should be clang-formatted [-Wclang-format-violations]
                return EInvalidParameter;
                                         ^
./Libraries/SocketLib/SocketLibErrors.cpp:51:28: warning: code should be clang-formatted [-Wclang-format-violations]
            case WSAEMFILE:
                           ^
./Libraries/SocketLib/SocketLibErrors.cpp:52:44: warning: code should be clang-formatted [-Wclang-format-violations]
                return ENoSocketsAvailable;
                                           ^
./Libraries/SocketLib/SocketLibErrors.cpp:53:33: warning: code should be clang-formatted [-Wclang-format-violations]
            case WSAEWOULDBLOCK:
                                ^
./Libraries/SocketLib/SocketLibErrors.cpp:54:45: warning: code should be clang-formatted [-Wclang-format-violations]
                return EOperationWouldBlock;
                                            ^
./Libraries/SocketLib/SocketLibErrors.cpp:55:33: warning: code should be clang-formatted [-Wclang-format-violations]
            case WSAEINPROGRESS:
                                ^
./Libraries/SocketLib/SocketLibErrors.cpp:56:30: warning: code should be clang-formatted [-Wclang-format-violations]
            case WSAEALREADY:
                             ^
./Libraries/SocketLib/SocketLibErrors.cpp:57:36: warning: code should be clang-formatted [-Wclang-format-violations]
                return EInProgress;
                                   ^
./Libraries/SocketLib/SocketLibErrors.cpp:58:30: warning: code should be clang-formatted [-Wclang-format-violations]
            case WSAENOTSOCK:
                             ^
./Libraries/SocketLib/SocketLibErrors.cpp:59:39: warning: code should be clang-formatted [-Wclang-format-violations]
                return EInvalidSocket;
                                      ^
./Libraries/SocketLib/SocketLibErrors.cpp:60:34: warning: code should be clang-formatted [-Wclang-format-violations]
            case WSAEDESTADDRREQ:
                                 ^
./Libraries/SocketLib/SocketLibErrors.cpp:61:41: warning: code should be clang-formatted [-Wclang-format-violations]
                return EAddressRequired;
                                        ^
./Libraries/SocketLib/SocketLibErrors.cpp:62:30: warning: code should be clang-formatted [-Wclang-format-violations]
            case WSAEMSGSIZE:
                             ^
./Libraries/SocketLib/SocketLibErrors.cpp:63:40: warning: code should be clang-formatted [-Wclang-format-violations]
                return EMessageTooLong;
                                       ^
./Libraries/SocketLib/SocketLibErrors.cpp:64:32: warning: code should be clang-formatted [-Wclang-format-violations]
            case WSAEPROTOTYPE:
                               ^
./Libraries/SocketLib/SocketLibErrors.cpp:65:54: warning: code should be clang-formatted [-Wclang-format-violations]
                return EProtocolNotSupportedBySocket;
                                                     ^
./Libraries/SocketLib/SocketLibErrors.cpp:66:33: warning: code should be clang-formatted [-Wclang-format-violations]
            case WSAENOPROTOOPT:
                                ^
./Libraries/SocketLib/SocketLibErrors.cpp:67:43: warning: code should be clang-formatted [-Wclang-format-violations]
                return EBadProtocolOption;
                                          ^
./Libraries/SocketLib/SocketLibErrors.cpp:68:37: warning: code should be clang-formatted [-Wclang-format-violations]
            case WSAEPROTONOSUPPORT:
                                    ^
./Libraries/SocketLib/SocketLibErrors.cpp:69:46: warning: code should be clang-formatted [-Wclang-format-violations]
                return EProtocolNotSupported;
                                             ^
./Libraries/SocketLib/SocketLibErrors.cpp:70:37: warning: code should be clang-formatted [-Wclang-format-violations]
            case WSAESOCKTNOSUPPORT:
                                    ^
./Libraries/SocketLib/SocketLibErrors.cpp:71:43: warning: code should be clang-formatted [-Wclang-format-violations]
                return EInvalidSocketType;
                                          ^
./Libraries/SocketLib/SocketLibErrors.cpp:72:32: warning: code should be clang-formatted [-Wclang-format-violations]
            case WSAEOPNOTSUPP:
                               ^
./Libraries/SocketLib/SocketLibErrors.cpp:73:47: warning: code should be clang-formatted [-Wclang-format-violations]
                return EOperationNotSupported;
                                              ^
./Libraries/SocketLib/SocketLibErrors.cpp:74:34: warning: code should be clang-formatted [-Wclang-format-violations]
            case WSAEPFNOSUPPORT:
                                 ^
./Libraries/SocketLib/SocketLibErrors.cpp:75:52: warning: code should be clang-formatted [-Wclang-format-violations]
                return EProtocolFamilyNotSupported;
                                                   ^
./Libraries/SocketLib/SocketLibErrors.cpp:76:34: warning: code should be clang-formatted [-Wclang-format-violations]
            case WSAEAFNOSUPPORT:
                                 ^
./Libraries/SocketLib/SocketLibErrors.cpp:77:51: warning: code should be clang-formatted [-Wclang-format-violations]
                return EAddressFamilyNotSupported;
                                                  ^
./Libraries/SocketLib/SocketLibErrors.cpp:78:32: warning: code should be clang-formatted [-Wclang-format-violations]
            case WSAEADDRINUSE:
                               ^
./Libraries/SocketLib/SocketLibErrors.cpp:79:38: warning: code should be clang-formatted [-Wclang-format-violations]
                return EAddressInUse;
                                     ^
./Libraries/SocketLib/SocketLibErrors.cpp:80:35: warning: code should be clang-formatted [-Wclang-format-violations]
            case WSAEADDRNOTAVAIL:
                                  ^
./Libraries/SocketLib/SocketLibErrors.cpp:81:45: warning: code should be clang-formatted [-Wclang-format-violations]
                return EAddressNotAvailable;
                                            ^
./Libraries/SocketLib/SocketLibErrors.cpp:82:30: warning: code should be clang-formatted [-Wclang-format-violations]
            case WSAENETDOWN:
                             ^
./Libraries/SocketLib/SocketLibErrors.cpp:83:37: warning: code should be clang-formatted [-Wclang-format-violations]
                return ENetworkDown;
                                    ^
./Libraries/SocketLib/SocketLibErrors.cpp:84:33: warning: code should be clang-formatted [-Wclang-format-violations]
            case WSAENETUNREACH:
                                ^
./Libraries/SocketLib/SocketLibErrors.cpp:85:44: warning: code should be clang-formatted [-Wclang-format-violations]
                return ENetworkUnreachable;
                                           ^
./Libraries/SocketLib/SocketLibErrors.cpp:86:31: warning: code should be clang-formatted [-Wclang-format-violations]
            case WSAENETRESET:
                              ^
./Libraries/SocketLib/SocketLibErrors.cpp:87:38: warning: code should be clang-formatted [-Wclang-format-violations]
                return ENetworkReset;
                                     ^
./Libraries/SocketLib/SocketLibErrors.cpp:88:34: warning: code should be clang-formatted [-Wclang-format-violations]
            case WSAECONNABORTED:
                                 ^
./Libraries/SocketLib/SocketLibErrors.cpp:89:43: warning: code should be clang-formatted [-Wclang-format-violations]
                return EConnectionAborted;
                                          ^
./Libraries/SocketLib/SocketLibErrors.cpp:90:32: warning: code should be clang-formatted [-Wclang-format-violations]
            case WSAECONNRESET:
                               ^
./Libraries/SocketLib/SocketLibErrors.cpp:91:41: warning: code should be clang-formatted [-Wclang-format-violations]
                return EConnectionReset;
                                        ^
./Libraries/SocketLib/SocketLibErrors.cpp:92:29: warning: code should be clang-formatted [-Wclang-format-violations]
            case WSAENOBUFS:
                            ^
./Libraries/SocketLib/SocketLibErrors.cpp:93:34: warning: code should be clang-formatted [-Wclang-format-violations]
                return ENoMemory;
                                 ^
./Libraries/SocketLib/SocketLibErrors.cpp:94:29: warning: code should be clang-formatted [-Wclang-format-violations]
            case WSAEISCONN:
                            ^
./Libraries/SocketLib/SocketLibErrors.cpp:95:42: warning: code should be clang-formatted [-Wclang-format-violations]
                return EAlreadyConnected;
                                         ^
./Libraries/SocketLib/SocketLibErrors.cpp:96:30: warning: code should be clang-formatted [-Wclang-format-violations]
            case WSAENOTCONN:
                             ^
./Libraries/SocketLib/SocketLibErrors.cpp:97:38: warning: code should be clang-formatted [-Wclang-format-violations]
                return ENotConnected;
                                     ^
./Libraries/SocketLib/SocketLibErrors.cpp:98:31: warning: code should be clang-formatted [-Wclang-format-violations]
            case WSAESHUTDOWN:
                              ^
./Libraries/SocketLib/SocketLibErrors.cpp:99:34: warning: code should be clang-formatted [-Wclang-format-violations]
                return EShutDown;
                                 ^
./Libraries/SocketLib/SocketLibErrors.cpp:100:31: warning: code should be clang-formatted [-Wclang-format-violations]
            case WSAETIMEDOUT:
                              ^
./Libraries/SocketLib/SocketLibErrors.cpp:101:34: warning: code should be clang-formatted [-Wclang-format-violations]
                return ETimedOut;
                                 ^
./Libraries/SocketLib/SocketLibErrors.cpp:102:34: warning: code should be clang-formatted [-Wclang-format-violations]
            case WSAECONNREFUSED:
                                 ^
./Libraries/SocketLib/SocketLibErrors.cpp:103:43: warning: code should be clang-formatted [-Wclang-format-violations]
                return EConnectionRefused;
                                          ^
./Libraries/SocketLib/SocketLibErrors.cpp:104:31: warning: code should be clang-formatted [-Wclang-format-violations]
            case WSAEHOSTDOWN:
                              ^
./Libraries/SocketLib/SocketLibErrors.cpp:105:34: warning: code should be clang-formatted [-Wclang-format-violations]
                return EHostDown;
                                 ^
./Libraries/SocketLib/SocketLibErrors.cpp:106:34: warning: code should be clang-formatted [-Wclang-format-violations]
            case WSAEHOSTUNREACH:
                                 ^
./Libraries/SocketLib/SocketLibErrors.cpp:107:41: warning: code should be clang-formatted [-Wclang-format-violations]
                return EHostUnreachable;
                                        ^
./Libraries/SocketLib/SocketLibErrors.cpp:108:36: warning: code should be clang-formatted [-Wclang-format-violations]
            case WSAHOST_NOT_FOUND:
                                   ^
./Libraries/SocketLib/SocketLibErrors.cpp:109:37: warning: code should be clang-formatted [-Wclang-format-violations]
                return EDNSNotFound;
                                    ^
./Libraries/SocketLib/SocketLibErrors.cpp:110:31: warning: code should be clang-formatted [-Wclang-format-violations]
            case WSATRY_AGAIN:
                              ^
./Libraries/SocketLib/SocketLibErrors.cpp:111:34: warning: code should be clang-formatted [-Wclang-format-violations]
                return EDNSError;
                                 ^
./Libraries/SocketLib/SocketLibErrors.cpp:112:29: warning: code should be clang-formatted [-Wclang-format-violations]
            case WSANO_DATA:
                            ^
./Libraries/SocketLib/SocketLibErrors.cpp:113:35: warning: code should be clang-formatted [-Wclang-format-violations]
                return ENoDNSData;
                                  ^
./Libraries/SocketLib/SocketLibErrors.cpp:114:21: warning: code should be clang-formatted [-Wclang-format-violations]
            default:
                    ^
./Libraries/SocketLib/SocketLibErrors.cpp:115:38: warning: code should be clang-formatted [-Wclang-format-violations]
                return ESeriousError;
                                     ^
./Libraries/SocketLib/SocketLibErrors.cpp:116:14: warning: code should be clang-formatted [-Wclang-format-violations]
            }
             ^
./Libraries/SocketLib/SocketLibErrors.cpp:117:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/SocketLibErrors.cpp:118:10: warning: code should be clang-formatted [-Wclang-format-violations]
    #else
         ^
./Libraries/SocketLib/SocketLibErrors.cpp:119:30: warning: code should be clang-formatted [-Wclang-format-violations]
        Error TranslateError( int p_error, bool p_errno )
                             ^
./Libraries/SocketLib/SocketLibErrors.cpp:119:56: warning: code should be clang-formatted [-Wclang-format-violations]
        Error TranslateError( int p_error, bool p_errno )
                                                       ^
./Libraries/SocketLib/SocketLibErrors.cpp:119:58: warning: code should be clang-formatted [-Wclang-format-violations]
        Error TranslateError( int p_error, bool p_errno )
                                                         ^
./Libraries/SocketLib/SocketLibErrors.cpp:120:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/SocketLibErrors.cpp:121:76: warning: code should be clang-formatted [-Wclang-format-violations]
            // for the linux version, we need to check if we're using errno
                                                                           ^
./Libraries/SocketLib/SocketLibErrors.cpp:122:73: warning: code should be clang-formatted [-Wclang-format-violations]
            // or h_errno. Lucky for us, both error reporting mechanisms
                                                                        ^
./Libraries/SocketLib/SocketLibErrors.cpp:123:71: warning: code should be clang-formatted [-Wclang-format-violations]
            // return the same values for different errors (d'oh). So,
                                                                      ^
./Libraries/SocketLib/SocketLibErrors.cpp:124:72: warning: code should be clang-formatted [-Wclang-format-violations]
            // the code checks the errno and the h_errno error codes in
                                                                       ^
./Libraries/SocketLib/SocketLibErrors.cpp:125:44: warning: code should be clang-formatted [-Wclang-format-violations]
            // different switch statements.
                                           ^
./Libraries/SocketLib/SocketLibErrors.cpp:126:15: warning: code should be clang-formatted [-Wclang-format-violations]
            if( p_errno == true )
              ^
./Libraries/SocketLib/SocketLibErrors.cpp:126:16: warning: code should be clang-formatted [-Wclang-format-violations]
            if( p_errno == true )
               ^
./Libraries/SocketLib/SocketLibErrors.cpp:126:32: warning: code should be clang-formatted [-Wclang-format-violations]
            if( p_errno == true )
                               ^
./Libraries/SocketLib/SocketLibErrors.cpp:126:34: warning: code should be clang-formatted [-Wclang-format-violations]
            if( p_errno == true )
                                 ^
./Libraries/SocketLib/SocketLibErrors.cpp:127:14: warning: code should be clang-formatted [-Wclang-format-violations]
            {
             ^
./Libraries/SocketLib/SocketLibErrors.cpp:128:23: warning: code should be clang-formatted [-Wclang-format-violations]
                switch( p_error )
                      ^
./Libraries/SocketLib/SocketLibErrors.cpp:128:24: warning: code should be clang-formatted [-Wclang-format-violations]
                switch( p_error )
                       ^
./Libraries/SocketLib/SocketLibErrors.cpp:128:32: warning: code should be clang-formatted [-Wclang-format-violations]
                switch( p_error )
                               ^
./Libraries/SocketLib/SocketLibErrors.cpp:128:34: warning: code should be clang-formatted [-Wclang-format-violations]
                switch( p_error )
                                 ^
./Libraries/SocketLib/SocketLibErrors.cpp:129:18: warning: code should be clang-formatted [-Wclang-format-violations]
                {
                 ^
./Libraries/SocketLib/SocketLibErrors.cpp:130:28: warning: code should be clang-formatted [-Wclang-format-violations]
                case EINTR:
                           ^
./Libraries/SocketLib/SocketLibErrors.cpp:131:41: warning: code should be clang-formatted [-Wclang-format-violations]
                    return EInterrupted;
                                        ^
./Libraries/SocketLib/SocketLibErrors.cpp:132:29: warning: code should be clang-formatted [-Wclang-format-violations]
                case EACCES:
                            ^
./Libraries/SocketLib/SocketLibErrors.cpp:133:42: warning: code should be clang-formatted [-Wclang-format-violations]
                    return EAccessDenied;
                                         ^
./Libraries/SocketLib/SocketLibErrors.cpp:134:29: warning: code should be clang-formatted [-Wclang-format-violations]
                case EFAULT:
                            ^
./Libraries/SocketLib/SocketLibErrors.cpp:135:29: warning: code should be clang-formatted [-Wclang-format-violations]
                case EINVAL:
                            ^
./Libraries/SocketLib/SocketLibErrors.cpp:136:46: warning: code should be clang-formatted [-Wclang-format-violations]
                    return EInvalidParameter;
                                             ^
./Libraries/SocketLib/SocketLibErrors.cpp:137:29: warning: code should be clang-formatted [-Wclang-format-violations]
                case EMFILE:
                            ^
./Libraries/SocketLib/SocketLibErrors.cpp:138:48: warning: code should be clang-formatted [-Wclang-format-violations]
                    return ENoSocketsAvailable;
                                               ^
./Libraries/SocketLib/SocketLibErrors.cpp:139:34: warning: code should be clang-formatted [-Wclang-format-violations]
                case EWOULDBLOCK:
                                 ^
./Libraries/SocketLib/SocketLibErrors.cpp:140:49: warning: code should be clang-formatted [-Wclang-format-violations]
                    return EOperationWouldBlock;
                                                ^
./Libraries/SocketLib/SocketLibErrors.cpp:141:34: warning: code should be clang-formatted [-Wclang-format-violations]
                case EINPROGRESS:
                                 ^
./Libraries/SocketLib/SocketLibErrors.cpp:142:31: warning: code should be clang-formatted [-Wclang-format-violations]
                case EALREADY:
                              ^
./Libraries/SocketLib/SocketLibErrors.cpp:143:40: warning: code should be clang-formatted [-Wclang-format-violations]
                    return EInProgress;
                                       ^
./Libraries/SocketLib/SocketLibErrors.cpp:144:31: warning: code should be clang-formatted [-Wclang-format-violations]
                case ENOTSOCK:
                              ^
./Libraries/SocketLib/SocketLibErrors.cpp:145:43: warning: code should be clang-formatted [-Wclang-format-violations]
                    return EInvalidSocket;
                                          ^
./Libraries/SocketLib/SocketLibErrors.cpp:146:35: warning: code should be clang-formatted [-Wclang-format-violations]
                case EDESTADDRREQ:
                                  ^
./Libraries/SocketLib/SocketLibErrors.cpp:147:45: warning: code should be clang-formatted [-Wclang-format-violations]
                    return EAddressRequired;
                                            ^
./Libraries/SocketLib/SocketLibErrors.cpp:148:31: warning: code should be clang-formatted [-Wclang-format-violations]
                case EMSGSIZE:
                              ^
./Libraries/SocketLib/SocketLibErrors.cpp:149:44: warning: code should be clang-formatted [-Wclang-format-violations]
                    return EMessageTooLong;
                                           ^
./Libraries/SocketLib/SocketLibErrors.cpp:150:33: warning: code should be clang-formatted [-Wclang-format-violations]
                case EPROTOTYPE:
                                ^
./Libraries/SocketLib/SocketLibErrors.cpp:151:58: warning: code should be clang-formatted [-Wclang-format-violations]
                    return EProtocolNotSupportedBySocket;
                                                         ^
./Libraries/SocketLib/SocketLibErrors.cpp:152:34: warning: code should be clang-formatted [-Wclang-format-violations]
                case ENOPROTOOPT:
                                 ^
./Libraries/SocketLib/SocketLibErrors.cpp:153:47: warning: code should be clang-formatted [-Wclang-format-violations]
                    return EBadProtocolOption;
                                              ^
./Libraries/SocketLib/SocketLibErrors.cpp:154:38: warning: code should be clang-formatted [-Wclang-format-violations]
                case EPROTONOSUPPORT:
                                     ^
./Libraries/SocketLib/SocketLibErrors.cpp:155:50: warning: code should be clang-formatted [-Wclang-format-violations]
                    return EProtocolNotSupported;
                                                 ^
./Libraries/SocketLib/SocketLibErrors.cpp:156:38: warning: code should be clang-formatted [-Wclang-format-violations]
                case ESOCKTNOSUPPORT:
                                     ^
./Libraries/SocketLib/SocketLibErrors.cpp:157:47: warning: code should be clang-formatted [-Wclang-format-violations]
                    return EInvalidSocketType;
                                              ^
./Libraries/SocketLib/SocketLibErrors.cpp:158:33: warning: code should be clang-formatted [-Wclang-format-violations]
                case EOPNOTSUPP:
                                ^
./Libraries/SocketLib/SocketLibErrors.cpp:159:51: warning: code should be clang-formatted [-Wclang-format-violations]
                    return EOperationNotSupported;
                                                  ^
./Libraries/SocketLib/SocketLibErrors.cpp:160:35: warning: code should be clang-formatted [-Wclang-format-violations]
                case EPFNOSUPPORT:
                                  ^
./Libraries/SocketLib/SocketLibErrors.cpp:161:56: warning: code should be clang-formatted [-Wclang-format-violations]
                    return EProtocolFamilyNotSupported;
                                                       ^
./Libraries/SocketLib/SocketLibErrors.cpp:162:35: warning: code should be clang-formatted [-Wclang-format-violations]
                case EAFNOSUPPORT:
                                  ^
./Libraries/SocketLib/SocketLibErrors.cpp:163:55: warning: code should be clang-formatted [-Wclang-format-violations]
                    return EAddressFamilyNotSupported;
                                                      ^
./Libraries/SocketLib/SocketLibErrors.cpp:164:33: warning: code should be clang-formatted [-Wclang-format-violations]
                case EADDRINUSE:
                                ^
./Libraries/SocketLib/SocketLibErrors.cpp:165:42: warning: code should be clang-formatted [-Wclang-format-violations]
                    return EAddressInUse;
                                         ^
./Libraries/SocketLib/SocketLibErrors.cpp:166:36: warning: code should be clang-formatted [-Wclang-format-violations]
                case EADDRNOTAVAIL:
                                   ^
./Libraries/SocketLib/SocketLibErrors.cpp:167:49: warning: code should be clang-formatted [-Wclang-format-violations]
                    return EAddressNotAvailable;
                                                ^
./Libraries/SocketLib/SocketLibErrors.cpp:168:31: warning: code should be clang-formatted [-Wclang-format-violations]
                case ENETDOWN:
                              ^
./Libraries/SocketLib/SocketLibErrors.cpp:169:41: warning: code should be clang-formatted [-Wclang-format-violations]
                    return ENetworkDown;
                                        ^
./Libraries/SocketLib/SocketLibErrors.cpp:170:34: warning: code should be clang-formatted [-Wclang-format-violations]
                case ENETUNREACH:
                                 ^
./Libraries/SocketLib/SocketLibErrors.cpp:171:48: warning: code should be clang-formatted [-Wclang-format-violations]
                    return ENetworkUnreachable;
                                               ^
./Libraries/SocketLib/SocketLibErrors.cpp:172:32: warning: code should be clang-formatted [-Wclang-format-violations]
                case ENETRESET:
                               ^
./Libraries/SocketLib/SocketLibErrors.cpp:173:42: warning: code should be clang-formatted [-Wclang-format-violations]
                    return ENetworkReset;
                                         ^
./Libraries/SocketLib/SocketLibErrors.cpp:174:35: warning: code should be clang-formatted [-Wclang-format-violations]
                case ECONNABORTED:
                                  ^
./Libraries/SocketLib/SocketLibErrors.cpp:175:47: warning: code should be clang-formatted [-Wclang-format-violations]
                    return EConnectionAborted;
                                              ^
./Libraries/SocketLib/SocketLibErrors.cpp:176:33: warning: code should be clang-formatted [-Wclang-format-violations]
                case ECONNRESET:
                                ^
./Libraries/SocketLib/SocketLibErrors.cpp:177:45: warning: code should be clang-formatted [-Wclang-format-violations]
                    return EConnectionReset;
                                            ^
./Libraries/SocketLib/SocketLibErrors.cpp:178:30: warning: code should be clang-formatted [-Wclang-format-violations]
                case ENOBUFS:
                             ^
./Libraries/SocketLib/SocketLibErrors.cpp:179:38: warning: code should be clang-formatted [-Wclang-format-violations]
                    return ENoMemory;
                                     ^
./Libraries/SocketLib/SocketLibErrors.cpp:180:30: warning: code should be clang-formatted [-Wclang-format-violations]
                case EISCONN:
                             ^
./Libraries/SocketLib/SocketLibErrors.cpp:181:46: warning: code should be clang-formatted [-Wclang-format-violations]
                    return EAlreadyConnected;
                                             ^
./Libraries/SocketLib/SocketLibErrors.cpp:182:31: warning: code should be clang-formatted [-Wclang-format-violations]
                case ENOTCONN:
                              ^
./Libraries/SocketLib/SocketLibErrors.cpp:183:42: warning: code should be clang-formatted [-Wclang-format-violations]
                    return ENotConnected;
                                         ^
./Libraries/SocketLib/SocketLibErrors.cpp:184:32: warning: code should be clang-formatted [-Wclang-format-violations]
                case ESHUTDOWN:
                               ^
./Libraries/SocketLib/SocketLibErrors.cpp:185:38: warning: code should be clang-formatted [-Wclang-format-violations]
                    return EShutDown;
                                     ^
./Libraries/SocketLib/SocketLibErrors.cpp:186:32: warning: code should be clang-formatted [-Wclang-format-violations]
                case ETIMEDOUT:
                               ^
./Libraries/SocketLib/SocketLibErrors.cpp:187:38: warning: code should be clang-formatted [-Wclang-format-violations]
                    return ETimedOut;
                                     ^
./Libraries/SocketLib/SocketLibErrors.cpp:188:35: warning: code should be clang-formatted [-Wclang-format-violations]
                case ECONNREFUSED:
                                  ^
./Libraries/SocketLib/SocketLibErrors.cpp:189:47: warning: code should be clang-formatted [-Wclang-format-violations]
                    return EConnectionRefused;
                                              ^
./Libraries/SocketLib/SocketLibErrors.cpp:190:32: warning: code should be clang-formatted [-Wclang-format-violations]
                case EHOSTDOWN:
                               ^
./Libraries/SocketLib/SocketLibErrors.cpp:191:38: warning: code should be clang-formatted [-Wclang-format-violations]
                    return EHostDown;
                                     ^
./Libraries/SocketLib/SocketLibErrors.cpp:192:35: warning: code should be clang-formatted [-Wclang-format-violations]
                case EHOSTUNREACH:
                                  ^
./Libraries/SocketLib/SocketLibErrors.cpp:193:45: warning: code should be clang-formatted [-Wclang-format-violations]
                    return EHostUnreachable;
                                            ^
./Libraries/SocketLib/SocketLibErrors.cpp:194:25: warning: code should be clang-formatted [-Wclang-format-violations]
                default:
                        ^
./Libraries/SocketLib/SocketLibErrors.cpp:195:42: warning: code should be clang-formatted [-Wclang-format-violations]
                    return ESeriousError;
                                         ^
./Libraries/SocketLib/SocketLibErrors.cpp:196:18: warning: code should be clang-formatted [-Wclang-format-violations]
                }
                 ^
./Libraries/SocketLib/SocketLibErrors.cpp:197:14: warning: code should be clang-formatted [-Wclang-format-violations]
            }
             ^
./Libraries/SocketLib/SocketLibErrors.cpp:198:17: warning: code should be clang-formatted [-Wclang-format-violations]
            else
                ^
./Libraries/SocketLib/SocketLibErrors.cpp:199:14: warning: code should be clang-formatted [-Wclang-format-violations]
            {
             ^
./Libraries/SocketLib/SocketLibErrors.cpp:200:23: warning: code should be clang-formatted [-Wclang-format-violations]
                switch( p_error )
                      ^
./Libraries/SocketLib/SocketLibErrors.cpp:200:24: warning: code should be clang-formatted [-Wclang-format-violations]
                switch( p_error )
                       ^
./Libraries/SocketLib/SocketLibErrors.cpp:200:32: warning: code should be clang-formatted [-Wclang-format-violations]
                switch( p_error )
                               ^
./Libraries/SocketLib/SocketLibErrors.cpp:200:34: warning: code should be clang-formatted [-Wclang-format-violations]
                switch( p_error )
                                 ^
./Libraries/SocketLib/SocketLibErrors.cpp:201:18: warning: code should be clang-formatted [-Wclang-format-violations]
                {
                 ^
./Libraries/SocketLib/SocketLibErrors.cpp:202:37: warning: code should be clang-formatted [-Wclang-format-violations]
                case HOST_NOT_FOUND:
                                    ^
./Libraries/SocketLib/SocketLibErrors.cpp:203:41: warning: code should be clang-formatted [-Wclang-format-violations]
                    return EDNSNotFound;
                                        ^
./Libraries/SocketLib/SocketLibErrors.cpp:204:32: warning: code should be clang-formatted [-Wclang-format-violations]
                case TRY_AGAIN:
                               ^
./Libraries/SocketLib/SocketLibErrors.cpp:205:38: warning: code should be clang-formatted [-Wclang-format-violations]
                    return EDNSError;
                                     ^
./Libraries/SocketLib/SocketLibErrors.cpp:206:30: warning: code should be clang-formatted [-Wclang-format-violations]
                case NO_DATA:
                             ^
./Libraries/SocketLib/SocketLibErrors.cpp:207:39: warning: code should be clang-formatted [-Wclang-format-violations]
                    return ENoDNSData;
                                      ^
./Libraries/SocketLib/SocketLibErrors.cpp:208:25: warning: code should be clang-formatted [-Wclang-format-violations]
                default:
                        ^
./Libraries/SocketLib/SocketLibErrors.cpp:209:42: warning: code should be clang-formatted [-Wclang-format-violations]
                    return ESeriousError;
                                         ^
./Libraries/SocketLib/SocketLibErrors.cpp:210:18: warning: code should be clang-formatted [-Wclang-format-violations]
                }
                 ^
./Libraries/SocketLib/SocketLibErrors.cpp:211:14: warning: code should be clang-formatted [-Wclang-format-violations]
            }
             ^
./Libraries/SocketLib/SocketLibErrors.cpp:212:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/SocketLibErrors.cpp:213:11: warning: code should be clang-formatted [-Wclang-format-violations]
    #endif
          ^
./Libraries/SocketLib/SocketLibErrors.cpp:215:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/SocketLibErrors.cpp:216:30: warning: code should be clang-formatted [-Wclang-format-violations]
    // Function:    Exception
                             ^
./Libraries/SocketLib/SocketLibErrors.cpp:217:71: warning: code should be clang-formatted [-Wclang-format-violations]
    // Purpose:     To initialize the socket exception with a specific
                                                                      ^
./Libraries/SocketLib/SocketLibErrors.cpp:218:32: warning: code should be clang-formatted [-Wclang-format-violations]
    //              error code.
                               ^
./Libraries/SocketLib/SocketLibErrors.cpp:219:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/SocketLibErrors.cpp:220:26: warning: code should be clang-formatted [-Wclang-format-violations]
    Exception::Exception( Error p_code )
                         ^
./Libraries/SocketLib/SocketLibErrors.cpp:220:39: warning: code should be clang-formatted [-Wclang-format-violations]
    Exception::Exception( Error p_code )
                                      ^
./Libraries/SocketLib/SocketLibErrors.cpp:220:41: warning: code should be clang-formatted [-Wclang-format-violations]
    Exception::Exception( Error p_code )
                                        ^
./Libraries/SocketLib/SocketLibErrors.cpp:221:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/SocketLibErrors.cpp:222:25: warning: code should be clang-formatted [-Wclang-format-violations]
        m_code = p_code;
                        ^
./Libraries/SocketLib/SocketLibErrors.cpp:224:11: warning: code should be clang-formatted [-Wclang-format-violations]
        if( p_code == ENotAvailable )
          ^
./Libraries/SocketLib/SocketLibErrors.cpp:224:12: warning: code should be clang-formatted [-Wclang-format-violations]
        if( p_code == ENotAvailable )
           ^
./Libraries/SocketLib/SocketLibErrors.cpp:224:36: warning: code should be clang-formatted [-Wclang-format-violations]
        if( p_code == ENotAvailable )
                                   ^
./Libraries/SocketLib/SocketLibErrors.cpp:224:38: warning: code should be clang-formatted [-Wclang-format-violations]
        if( p_code == ENotAvailable )
                                     ^
./Libraries/SocketLib/SocketLibErrors.cpp:225:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/SocketLibErrors.cpp:226:29: warning: code should be clang-formatted [-Wclang-format-violations]
            p_code = p_code;
                            ^
./Libraries/SocketLib/SocketLibErrors.cpp:227:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/SocketLibErrors.cpp:228:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }
     ^
./Libraries/SocketLib/SocketLibErrors.cpp:230:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/SocketLibErrors.cpp:231:26: warning: code should be clang-formatted [-Wclang-format-violations]
    // Function:    Error
                         ^
./Libraries/SocketLib/SocketLibErrors.cpp:232:62: warning: code should be clang-formatted [-Wclang-format-violations]
    // Purpose:     To retrieve the error code of the socket.
                                                             ^
./Libraries/SocketLib/SocketLibErrors.cpp:233:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/SocketLibErrors.cpp:234:33: warning: code should be clang-formatted [-Wclang-format-violations]
    Error Exception::ErrorCode()
                                ^
./Libraries/SocketLib/SocketLibErrors.cpp:235:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/SocketLibErrors.cpp:236:23: warning: code should be clang-formatted [-Wclang-format-violations]
        return m_code;
                      ^
./Libraries/SocketLib/SocketLibErrors.cpp:237:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }
     ^
./Libraries/SocketLib/SocketLibErrors.cpp:239:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/SocketLibErrors.cpp:240:31: warning: code should be clang-formatted [-Wclang-format-violations]
    // Function:    PrintError
                              ^
./Libraries/SocketLib/SocketLibErrors.cpp:241:56: warning: code should be clang-formatted [-Wclang-format-violations]
    // Purpose:     Print the error message to a string
                                                       ^
./Libraries/SocketLib/SocketLibErrors.cpp:242:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/SocketLibErrors.cpp:243:40: warning: code should be clang-formatted [-Wclang-format-violations]
    std::string Exception::PrintError()
                                       ^
./Libraries/SocketLib/SocketLibErrors.cpp:244:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/SocketLibErrors.cpp:245:15: warning: code should be clang-formatted [-Wclang-format-violations]
        switch( m_code )
              ^
./Libraries/SocketLib/SocketLibErrors.cpp:245:16: warning: code should be clang-formatted [-Wclang-format-violations]
        switch( m_code )
               ^
./Libraries/SocketLib/SocketLibErrors.cpp:245:23: warning: code should be clang-formatted [-Wclang-format-violations]
        switch( m_code )
                      ^
./Libraries/SocketLib/SocketLibErrors.cpp:245:25: warning: code should be clang-formatted [-Wclang-format-violations]
        switch( m_code )
                        ^
./Libraries/SocketLib/SocketLibErrors.cpp:246:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/SocketLibErrors.cpp:247:35: warning: code should be clang-formatted [-Wclang-format-violations]
        case EOperationWouldBlock:
                                  ^
./Libraries/SocketLib/SocketLibErrors.cpp:248:70: warning: code should be clang-formatted [-Wclang-format-violations]
            return "Nonblocking socket operation would have blocked";
                                                                     ^
./Libraries/SocketLib/SocketLibErrors.cpp:249:26: warning: code should be clang-formatted [-Wclang-format-violations]
        case EInProgress:
                         ^
./Libraries/SocketLib/SocketLibErrors.cpp:250:60: warning: code should be clang-formatted [-Wclang-format-violations]
            return "This operation is already in progress";
                                                           ^
./Libraries/SocketLib/SocketLibErrors.cpp:251:29: warning: code should be clang-formatted [-Wclang-format-violations]
        case EInvalidSocket:
                            ^
./Libraries/SocketLib/SocketLibErrors.cpp:252:47: warning: code should be clang-formatted [-Wclang-format-violations]
            return "The socket was not valid";
                                              ^
./Libraries/SocketLib/SocketLibErrors.cpp:253:31: warning: code should be clang-formatted [-Wclang-format-violations]
        case EAddressRequired:
                              ^
./Libraries/SocketLib/SocketLibErrors.cpp:254:56: warning: code should be clang-formatted [-Wclang-format-violations]
            return "A destination address is required";
                                                       ^
./Libraries/SocketLib/SocketLibErrors.cpp:255:30: warning: code should be clang-formatted [-Wclang-format-violations]
        case EMessageTooLong:
                             ^
./Libraries/SocketLib/SocketLibErrors.cpp:256:47: warning: code should be clang-formatted [-Wclang-format-violations]
            return "The message was too long";
                                              ^
./Libraries/SocketLib/SocketLibErrors.cpp:257:40: warning: code should be clang-formatted [-Wclang-format-violations]
            case EProtocolNotSupported:
                                       ^
./Libraries/SocketLib/SocketLibErrors.cpp:258:52: warning: code should be clang-formatted [-Wclang-format-violations]
            return "The protocol is not supported";
                                                   ^
./Libraries/SocketLib/SocketLibErrors.cpp:259:44: warning: code should be clang-formatted [-Wclang-format-violations]
        case EProtocolNotSupportedBySocket:
                                           ^
./Libraries/SocketLib/SocketLibErrors.cpp:260:55: warning: code should be clang-formatted [-Wclang-format-violations]
            return "The socket type is not supported";
                                                      ^
./Libraries/SocketLib/SocketLibErrors.cpp:261:37: warning: code should be clang-formatted [-Wclang-format-violations]
        case EOperationNotSupported:
                                    ^
./Libraries/SocketLib/SocketLibErrors.cpp:262:53: warning: code should be clang-formatted [-Wclang-format-violations]
            return "The operation is not supported";
                                                    ^
./Libraries/SocketLib/SocketLibErrors.cpp:263:42: warning: code should be clang-formatted [-Wclang-format-violations]
        case EProtocolFamilyNotSupported:
                                         ^
./Libraries/SocketLib/SocketLibErrors.cpp:264:59: warning: code should be clang-formatted [-Wclang-format-violations]
            return "The protocol family is not supported";
                                                          ^
./Libraries/SocketLib/SocketLibErrors.cpp:265:41: warning: code should be clang-formatted [-Wclang-format-violations]
        case EAddressFamilyNotSupported:
                                        ^
./Libraries/SocketLib/SocketLibErrors.cpp:266:75: warning: code should be clang-formatted [-Wclang-format-violations]
            return "The operation is not supported by the address family";
                                                                          ^
./Libraries/SocketLib/SocketLibErrors.cpp:267:28: warning: code should be clang-formatted [-Wclang-format-violations]
        case EAddressInUse:
                           ^
./Libraries/SocketLib/SocketLibErrors.cpp:268:52: warning: code should be clang-formatted [-Wclang-format-violations]
            return "The address is already in use";
                                                   ^
./Libraries/SocketLib/SocketLibErrors.cpp:269:35: warning: code should be clang-formatted [-Wclang-format-violations]
        case EAddressNotAvailable:
                                  ^
./Libraries/SocketLib/SocketLibErrors.cpp:270:58: warning: code should be clang-formatted [-Wclang-format-violations]
            return "The address is not available to use";
                                                         ^
./Libraries/SocketLib/SocketLibErrors.cpp:271:27: warning: code should be clang-formatted [-Wclang-format-violations]
        case ENetworkDown:
                          ^
./Libraries/SocketLib/SocketLibErrors.cpp:272:42: warning: code should be clang-formatted [-Wclang-format-violations]
            return "The network is down";
                                         ^
./Libraries/SocketLib/SocketLibErrors.cpp:273:34: warning: code should be clang-formatted [-Wclang-format-violations]
        case ENetworkUnreachable:
                                 ^
./Libraries/SocketLib/SocketLibErrors.cpp:274:61: warning: code should be clang-formatted [-Wclang-format-violations]
            return "The destination network is unreachable";
                                                            ^
./Libraries/SocketLib/SocketLibErrors.cpp:275:28: warning: code should be clang-formatted [-Wclang-format-violations]
        case ENetworkReset:
                           ^
./Libraries/SocketLib/SocketLibErrors.cpp:276:60: warning: code should be clang-formatted [-Wclang-format-violations]
            return "The network connection has been reset";
                                                           ^
./Libraries/SocketLib/SocketLibErrors.cpp:277:33: warning: code should be clang-formatted [-Wclang-format-violations]
        case EConnectionAborted:
                                ^
./Libraries/SocketLib/SocketLibErrors.cpp:278:84: warning: code should be clang-formatted [-Wclang-format-violations]
            return "The network connection has been aborted due to software error";
                                                                                   ^
./Libraries/SocketLib/SocketLibErrors.cpp:279:31: warning: code should be clang-formatted [-Wclang-format-violations]
        case EConnectionReset:
                              ^
./Libraries/SocketLib/SocketLibErrors.cpp:280:67: warning: code should be clang-formatted [-Wclang-format-violations]
            return "Connection has been closed by the other side";
                                                                  ^
./Libraries/SocketLib/SocketLibErrors.cpp:281:24: warning: code should be clang-formatted [-Wclang-format-violations]
        case ENoMemory:
                       ^
./Libraries/SocketLib/SocketLibErrors.cpp:282:85: warning: code should be clang-formatted [-Wclang-format-violations]
            return "There was insufficient system memory to complete the operation";
                                                                                    ^
./Libraries/SocketLib/SocketLibErrors.cpp:283:32: warning: code should be clang-formatted [-Wclang-format-violations]
        case EAlreadyConnected:
                               ^
./Libraries/SocketLib/SocketLibErrors.cpp:284:54: warning: code should be clang-formatted [-Wclang-format-violations]
            return "The socket is already connected";
                                                     ^
./Libraries/SocketLib/SocketLibErrors.cpp:285:28: warning: code should be clang-formatted [-Wclang-format-violations]
        case ENotConnected:
                           ^
./Libraries/SocketLib/SocketLibErrors.cpp:286:50: warning: code should be clang-formatted [-Wclang-format-violations]
            return "The socket is not connected";
                                                 ^
./Libraries/SocketLib/SocketLibErrors.cpp:287:24: warning: code should be clang-formatted [-Wclang-format-violations]
        case EShutDown:
                       ^
./Libraries/SocketLib/SocketLibErrors.cpp:288:60: warning: code should be clang-formatted [-Wclang-format-violations]
            return "The socket has already been shut down";
                                                           ^
./Libraries/SocketLib/SocketLibErrors.cpp:289:24: warning: code should be clang-formatted [-Wclang-format-violations]
        case ETimedOut:
                       ^
./Libraries/SocketLib/SocketLibErrors.cpp:290:47: warning: code should be clang-formatted [-Wclang-format-violations]
            return "The connection timed out";
                                              ^
./Libraries/SocketLib/SocketLibErrors.cpp:291:33: warning: code should be clang-formatted [-Wclang-format-violations]
        case EConnectionRefused:
                                ^
./Libraries/SocketLib/SocketLibErrors.cpp:292:49: warning: code should be clang-formatted [-Wclang-format-violations]
            return "The connection was refused";
                                                ^
./Libraries/SocketLib/SocketLibErrors.cpp:293:24: warning: code should be clang-formatted [-Wclang-format-violations]
        case EHostDown:
                       ^
./Libraries/SocketLib/SocketLibErrors.cpp:294:39: warning: code should be clang-formatted [-Wclang-format-violations]
            return "The host is down";
                                      ^
./Libraries/SocketLib/SocketLibErrors.cpp:295:31: warning: code should be clang-formatted [-Wclang-format-violations]
        case EHostUnreachable:
                              ^
./Libraries/SocketLib/SocketLibErrors.cpp:296:46: warning: code should be clang-formatted [-Wclang-format-violations]
            return "The host is unreachable";
                                             ^
./Libraries/SocketLib/SocketLibErrors.cpp:297:27: warning: code should be clang-formatted [-Wclang-format-violations]
        case EDNSNotFound:
                          ^
./Libraries/SocketLib/SocketLibErrors.cpp:298:46: warning: code should be clang-formatted [-Wclang-format-violations]
            return "DNS lookup is not found";
                                             ^
./Libraries/SocketLib/SocketLibErrors.cpp:299:24: warning: code should be clang-formatted [-Wclang-format-violations]
        case EDNSError:
                       ^
./Libraries/SocketLib/SocketLibErrors.cpp:300:61: warning: code should be clang-formatted [-Wclang-format-violations]
            return "Host not found due to error; try again";
                                                            ^
./Libraries/SocketLib/SocketLibErrors.cpp:301:25: warning: code should be clang-formatted [-Wclang-format-violations]
        case ENoDNSData:
                        ^
./Libraries/SocketLib/SocketLibErrors.cpp:302:59: warning: code should be clang-formatted [-Wclang-format-violations]
            return "Address found, but has no valid data";
                                                          ^
./Libraries/SocketLib/SocketLibErrors.cpp:303:27: warning: code should be clang-formatted [-Wclang-format-violations]
        case EInterrupted:
                          ^
./Libraries/SocketLib/SocketLibErrors.cpp:304:48: warning: code should be clang-formatted [-Wclang-format-violations]
            return "Operation was interrupted";
                                               ^
./Libraries/SocketLib/SocketLibErrors.cpp:305:34: warning: code should be clang-formatted [-Wclang-format-violations]
        case ENoSocketsAvailable:
                                 ^
./Libraries/SocketLib/SocketLibErrors.cpp:306:48: warning: code should be clang-formatted [-Wclang-format-violations]
            return "No more sockets available";
                                               ^
./Libraries/SocketLib/SocketLibErrors.cpp:307:32: warning: code should be clang-formatted [-Wclang-format-violations]
        case EInvalidParameter:
                               ^
./Libraries/SocketLib/SocketLibErrors.cpp:308:57: warning: code should be clang-formatted [-Wclang-format-violations]
            return "Operation has an invalid parameter";
                                                        ^
./Libraries/SocketLib/SocketLibErrors.cpp:309:33: warning: code should be clang-formatted [-Wclang-format-violations]
        case EInvalidSocketType:
                                ^
./Libraries/SocketLib/SocketLibErrors.cpp:310:45: warning: code should be clang-formatted [-Wclang-format-violations]
            return "Socket type is invalid";
                                            ^
./Libraries/SocketLib/SocketLibErrors.cpp:311:28: warning: code should be clang-formatted [-Wclang-format-violations]
        case EAccessDenied:
                           ^
./Libraries/SocketLib/SocketLibErrors.cpp:312:58: warning: code should be clang-formatted [-Wclang-format-violations]
            return "Access to this operation was denied";
                                                         ^
./Libraries/SocketLib/SocketLibErrors.cpp:313:34: warning: code should be clang-formatted [-Wclang-format-violations]
        case ESocketLimitReached:
                                 ^
./Libraries/SocketLib/SocketLibErrors.cpp:314:76: warning: code should be clang-formatted [-Wclang-format-violations]
            return "The manager has reached its maximum number of sockets";
                                                                           ^
./Libraries/SocketLib/SocketLibErrors.cpp:315:17: warning: code should be clang-formatted [-Wclang-format-violations]
        default:
                ^
./Libraries/SocketLib/SocketLibErrors.cpp:316:49: warning: code should be clang-formatted [-Wclang-format-violations]
            return "undefined or serious error";
                                                ^
./Libraries/SocketLib/SocketLibErrors.cpp:317:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/SocketLibErrors.cpp:318:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }
     ^
./Libraries/SocketLib/SocketLibSocket.cpp:5:47: warning: code should be clang-formatted [-Wclang-format-violations]
// socket classes: Basic, Data, and Listening.
                                              ^
./Libraries/SocketLib/SocketLibSocket.cpp:10:20: warning: code should be clang-formatted [-Wclang-format-violations]
namespace SocketLib
                   ^
./Libraries/SocketLib/SocketLibSocket.cpp:11:2: warning: code should be clang-formatted [-Wclang-format-violations]
{
 ^
./Libraries/SocketLib/SocketLibSocket.cpp:13:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:14:26: warning: code should be clang-formatted [-Wclang-format-violations]
    // Function:    Close
                         ^
./Libraries/SocketLib/SocketLibSocket.cpp:15:39: warning: code should be clang-formatted [-Wclang-format-violations]
    // Purpose:     closes the socket.
                                      ^
./Libraries/SocketLib/SocketLibSocket.cpp:16:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:17:25: warning: code should be clang-formatted [-Wclang-format-violations]
    void Socket::Close()
                        ^
./Libraries/SocketLib/SocketLibSocket.cpp:18:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/SocketLibSocket.cpp:20:74: warning: code should be clang-formatted [-Wclang-format-violations]
        // WinSock uses "closesocket" instead of "close", since it treats
                                                                         ^
./Libraries/SocketLib/SocketLibSocket.cpp:21:73: warning: code should be clang-formatted [-Wclang-format-violations]
        // sockets as completely separate objects to files, whereas unix
                                                                        ^
./Libraries/SocketLib/SocketLibSocket.cpp:22:54: warning: code should be clang-formatted [-Wclang-format-violations]
        // treats files and sockets exactly the same.
                                                     ^
./Libraries/SocketLib/SocketLibSocket.cpp:23:17: warning: code should be clang-formatted [-Wclang-format-violations]
    #ifdef WIN32
                ^
./Libraries/SocketLib/SocketLibSocket.cpp:24:21: warning: code should be clang-formatted [-Wclang-format-violations]
        closesocket( m_sock );
                    ^
./Libraries/SocketLib/SocketLibSocket.cpp:24:28: warning: code should be clang-formatted [-Wclang-format-violations]
        closesocket( m_sock );
                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:24:31: warning: code should be clang-formatted [-Wclang-format-violations]
        closesocket( m_sock );
                              ^
./Libraries/SocketLib/SocketLibSocket.cpp:25:10: warning: code should be clang-formatted [-Wclang-format-violations]
    #else
         ^
./Libraries/SocketLib/SocketLibSocket.cpp:26:15: warning: code should be clang-formatted [-Wclang-format-violations]
        close( m_sock );
              ^
./Libraries/SocketLib/SocketLibSocket.cpp:26:22: warning: code should be clang-formatted [-Wclang-format-violations]
        close( m_sock );
                     ^
./Libraries/SocketLib/SocketLibSocket.cpp:26:25: warning: code should be clang-formatted [-Wclang-format-violations]
        close( m_sock );
                        ^
./Libraries/SocketLib/SocketLibSocket.cpp:27:11: warning: code should be clang-formatted [-Wclang-format-violations]
    #endif
          ^
./Libraries/SocketLib/SocketLibSocket.cpp:29:33: warning: code should be clang-formatted [-Wclang-format-violations]
        // invalidate the socket
                                ^
./Libraries/SocketLib/SocketLibSocket.cpp:30:21: warning: code should be clang-formatted [-Wclang-format-violations]
        m_sock = -1;
                    ^
./Libraries/SocketLib/SocketLibSocket.cpp:31:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }
     ^
./Libraries/SocketLib/SocketLibSocket.cpp:33:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:34:32: warning: code should be clang-formatted [-Wclang-format-violations]
    // Function:    SetBlocking
                               ^
./Libraries/SocketLib/SocketLibSocket.cpp:35:64: warning: code should be clang-formatted [-Wclang-format-violations]
    // Purpose:     sets whether the socket is blocking or not.
                                                               ^
./Libraries/SocketLib/SocketLibSocket.cpp:36:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:37:30: warning: code should be clang-formatted [-Wclang-format-violations]
    void Socket::SetBlocking( bool p_blockmode )
                             ^
./Libraries/SocketLib/SocketLibSocket.cpp:37:47: warning: code should be clang-formatted [-Wclang-format-violations]
    void Socket::SetBlocking( bool p_blockmode )
                                              ^
./Libraries/SocketLib/SocketLibSocket.cpp:37:49: warning: code should be clang-formatted [-Wclang-format-violations]
    void Socket::SetBlocking( bool p_blockmode )
                                                ^
./Libraries/SocketLib/SocketLibSocket.cpp:38:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/SocketLibSocket.cpp:39:17: warning: code should be clang-formatted [-Wclang-format-violations]
        int err;
                ^
./Libraries/SocketLib/SocketLibSocket.cpp:41:21: warning: code should be clang-formatted [-Wclang-format-violations]
        #ifdef WIN32
                    ^
./Libraries/SocketLib/SocketLibSocket.cpp:42:47: warning: code should be clang-formatted [-Wclang-format-violations]
            unsigned long mode = !p_blockmode;
                                              ^
./Libraries/SocketLib/SocketLibSocket.cpp:43:31: warning: code should be clang-formatted [-Wclang-format-violations]
            err = ioctlsocket( m_sock, FIONBIO, &mode );
                              ^
./Libraries/SocketLib/SocketLibSocket.cpp:43:54: warning: code should be clang-formatted [-Wclang-format-violations]
            err = ioctlsocket( m_sock, FIONBIO, &mode );
                                                     ^
./Libraries/SocketLib/SocketLibSocket.cpp:43:57: warning: code should be clang-formatted [-Wclang-format-violations]
            err = ioctlsocket( m_sock, FIONBIO, &mode );
                                                        ^
./Libraries/SocketLib/SocketLibSocket.cpp:44:14: warning: code should be clang-formatted [-Wclang-format-violations]
        #else
             ^
./Libraries/SocketLib/SocketLibSocket.cpp:45:29: warning: code should be clang-formatted [-Wclang-format-violations]
            // get the flags
                            ^
./Libraries/SocketLib/SocketLibSocket.cpp:46:31: warning: code should be clang-formatted [-Wclang-format-violations]
            int flags = fcntl( m_sock, F_GETFL, 0 );
                              ^
./Libraries/SocketLib/SocketLibSocket.cpp:46:50: warning: code should be clang-formatted [-Wclang-format-violations]
            int flags = fcntl( m_sock, F_GETFL, 0 );
                                                 ^
./Libraries/SocketLib/SocketLibSocket.cpp:46:53: warning: code should be clang-formatted [-Wclang-format-violations]
            int flags = fcntl( m_sock, F_GETFL, 0 );
                                                    ^
./Libraries/SocketLib/SocketLibSocket.cpp:48:50: warning: code should be clang-formatted [-Wclang-format-violations]
            // set or clear the non-blocking flag
                                                 ^
./Libraries/SocketLib/SocketLibSocket.cpp:49:15: warning: code should be clang-formatted [-Wclang-format-violations]
            if( p_blockmode == false )
              ^
./Libraries/SocketLib/SocketLibSocket.cpp:49:16: warning: code should be clang-formatted [-Wclang-format-violations]
            if( p_blockmode == false )
               ^
./Libraries/SocketLib/SocketLibSocket.cpp:49:37: warning: code should be clang-formatted [-Wclang-format-violations]
            if( p_blockmode == false )
                                    ^
./Libraries/SocketLib/SocketLibSocket.cpp:49:39: warning: code should be clang-formatted [-Wclang-format-violations]
            if( p_blockmode == false )
                                      ^
./Libraries/SocketLib/SocketLibSocket.cpp:50:14: warning: code should be clang-formatted [-Wclang-format-violations]
            {
             ^
./Libraries/SocketLib/SocketLibSocket.cpp:51:37: warning: code should be clang-formatted [-Wclang-format-violations]
                flags |= O_NONBLOCK;
                                    ^
./Libraries/SocketLib/SocketLibSocket.cpp:52:14: warning: code should be clang-formatted [-Wclang-format-violations]
            }
             ^
./Libraries/SocketLib/SocketLibSocket.cpp:53:17: warning: code should be clang-formatted [-Wclang-format-violations]
            else
                ^
./Libraries/SocketLib/SocketLibSocket.cpp:54:14: warning: code should be clang-formatted [-Wclang-format-violations]
            {
             ^
./Libraries/SocketLib/SocketLibSocket.cpp:55:38: warning: code should be clang-formatted [-Wclang-format-violations]
                flags &= ~O_NONBLOCK;
                                     ^
./Libraries/SocketLib/SocketLibSocket.cpp:56:14: warning: code should be clang-formatted [-Wclang-format-violations]
            }
             ^
./Libraries/SocketLib/SocketLibSocket.cpp:57:25: warning: code should be clang-formatted [-Wclang-format-violations]
            err = fcntl( m_sock, F_SETFL, flags );
                        ^
./Libraries/SocketLib/SocketLibSocket.cpp:57:48: warning: code should be clang-formatted [-Wclang-format-violations]
            err = fcntl( m_sock, F_SETFL, flags );
                                               ^
./Libraries/SocketLib/SocketLibSocket.cpp:57:51: warning: code should be clang-formatted [-Wclang-format-violations]
            err = fcntl( m_sock, F_SETFL, flags );
                                                  ^
./Libraries/SocketLib/SocketLibSocket.cpp:58:15: warning: code should be clang-formatted [-Wclang-format-violations]
        #endif
              ^
./Libraries/SocketLib/SocketLibSocket.cpp:60:11: warning: code should be clang-formatted [-Wclang-format-violations]
        if( err == -1 )
          ^
./Libraries/SocketLib/SocketLibSocket.cpp:60:12: warning: code should be clang-formatted [-Wclang-format-violations]
        if( err == -1 )
           ^
./Libraries/SocketLib/SocketLibSocket.cpp:60:22: warning: code should be clang-formatted [-Wclang-format-violations]
        if( err == -1 )
                     ^
./Libraries/SocketLib/SocketLibSocket.cpp:60:24: warning: code should be clang-formatted [-Wclang-format-violations]
        if( err == -1 )
                       ^
./Libraries/SocketLib/SocketLibSocket.cpp:61:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/SocketLibSocket.cpp:62:19: warning: code should be clang-formatted [-Wclang-format-violations]
            throw( Exception( GetError() ) );
                  ^
./Libraries/SocketLib/SocketLibSocket.cpp:62:30: warning: code should be clang-formatted [-Wclang-format-violations]
            throw( Exception( GetError() ) );
                             ^
./Libraries/SocketLib/SocketLibSocket.cpp:62:41: warning: code should be clang-formatted [-Wclang-format-violations]
            throw( Exception( GetError() ) );
                                        ^
./Libraries/SocketLib/SocketLibSocket.cpp:62:43: warning: code should be clang-formatted [-Wclang-format-violations]
            throw( Exception( GetError() ) );
                                          ^
./Libraries/SocketLib/SocketLibSocket.cpp:62:46: warning: code should be clang-formatted [-Wclang-format-violations]
            throw( Exception( GetError() ) );
                                             ^
./Libraries/SocketLib/SocketLibSocket.cpp:63:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/SocketLibSocket.cpp:65:36: warning: code should be clang-formatted [-Wclang-format-violations]
        m_isblocking = p_blockmode;
                                   ^
./Libraries/SocketLib/SocketLibSocket.cpp:66:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }
     ^
./Libraries/SocketLib/SocketLibSocket.cpp:69:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:70:32: warning: code should be clang-formatted [-Wclang-format-violations]
    // Function:    BasicSocket
                               ^
./Libraries/SocketLib/SocketLibSocket.cpp:71:69: warning: code should be clang-formatted [-Wclang-format-violations]
    // Purpose:     hidden constructor, meant to prevent people from
                                                                    ^
./Libraries/SocketLib/SocketLibSocket.cpp:72:73: warning: code should be clang-formatted [-Wclang-format-violations]
    //              instantiating this class. You should be using direct
                                                                        ^
./Libraries/SocketLib/SocketLibSocket.cpp:73:67: warning: code should be clang-formatted [-Wclang-format-violations]
    //              implementations of this class instead, such as 
                                                                  ^
./Libraries/SocketLib/SocketLibSocket.cpp:74:52: warning: code should be clang-formatted [-Wclang-format-violations]
    //              ListeningSocket and DataSocket.
                                                   ^
./Libraries/SocketLib/SocketLibSocket.cpp:75:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:76:20: warning: code should be clang-formatted [-Wclang-format-violations]
    Socket::Socket( sock p_socket )
                   ^
./Libraries/SocketLib/SocketLibSocket.cpp:76:34: warning: code should be clang-formatted [-Wclang-format-violations]
    Socket::Socket( sock p_socket )
                                 ^
./Libraries/SocketLib/SocketLibSocket.cpp:76:36: warning: code should be clang-formatted [-Wclang-format-violations]
    Socket::Socket( sock p_socket )
                                   ^
./Libraries/SocketLib/SocketLibSocket.cpp:77:14: warning: code should be clang-formatted [-Wclang-format-violations]
    : m_sock( p_socket )
             ^
./Libraries/SocketLib/SocketLibSocket.cpp:77:23: warning: code should be clang-formatted [-Wclang-format-violations]
    : m_sock( p_socket )
                      ^
./Libraries/SocketLib/SocketLibSocket.cpp:77:25: warning: code should be clang-formatted [-Wclang-format-violations]
    : m_sock( p_socket )
                        ^
./Libraries/SocketLib/SocketLibSocket.cpp:78:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/SocketLibSocket.cpp:79:11: warning: code should be clang-formatted [-Wclang-format-violations]
        if( p_socket != -1 )
          ^
./Libraries/SocketLib/SocketLibSocket.cpp:79:12: warning: code should be clang-formatted [-Wclang-format-violations]
        if( p_socket != -1 )
           ^
./Libraries/SocketLib/SocketLibSocket.cpp:79:27: warning: code should be clang-formatted [-Wclang-format-violations]
        if( p_socket != -1 )
                          ^
./Libraries/SocketLib/SocketLibSocket.cpp:79:29: warning: code should be clang-formatted [-Wclang-format-violations]
        if( p_socket != -1 )
                            ^
./Libraries/SocketLib/SocketLibSocket.cpp:80:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/SocketLibSocket.cpp:81:47: warning: code should be clang-formatted [-Wclang-format-violations]
            socklen_t s = sizeof(m_localinfo);
                                              ^
./Libraries/SocketLib/SocketLibSocket.cpp:82:25: warning: code should be clang-formatted [-Wclang-format-violations]
            getsockname( p_socket, (sockaddr*)(&m_localinfo), &s );
                        ^
./Libraries/SocketLib/SocketLibSocket.cpp:82:45: warning: code should be clang-formatted [-Wclang-format-violations]
            getsockname( p_socket, (sockaddr*)(&m_localinfo), &s );
                                            ^
./Libraries/SocketLib/SocketLibSocket.cpp:82:65: warning: code should be clang-formatted [-Wclang-format-violations]
            getsockname( p_socket, (sockaddr*)(&m_localinfo), &s );
                                                                ^
./Libraries/SocketLib/SocketLibSocket.cpp:82:68: warning: code should be clang-formatted [-Wclang-format-violations]
            getsockname( p_socket, (sockaddr*)(&m_localinfo), &s );
                                                                   ^
./Libraries/SocketLib/SocketLibSocket.cpp:83:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/SocketLibSocket.cpp:85:45: warning: code should be clang-formatted [-Wclang-format-violations]
        // the socket is blocking by default
                                            ^
./Libraries/SocketLib/SocketLibSocket.cpp:86:29: warning: code should be clang-formatted [-Wclang-format-violations]
        m_isblocking = true;
                            ^
./Libraries/SocketLib/SocketLibSocket.cpp:87:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }
     ^
./Libraries/SocketLib/SocketLibSocket.cpp:91:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:92:31: warning: code should be clang-formatted [-Wclang-format-violations]
    // Function:    DataSocket
                              ^
./Libraries/SocketLib/SocketLibSocket.cpp:93:68: warning: code should be clang-formatted [-Wclang-format-violations]
    // Purpose:     Constructs the data socket with optional values
                                                                   ^
./Libraries/SocketLib/SocketLibSocket.cpp:94:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:95:28: warning: code should be clang-formatted [-Wclang-format-violations]
    DataSocket::DataSocket( sock p_socket )
                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:95:42: warning: code should be clang-formatted [-Wclang-format-violations]
    DataSocket::DataSocket( sock p_socket )
                                         ^
./Libraries/SocketLib/SocketLibSocket.cpp:95:44: warning: code should be clang-formatted [-Wclang-format-violations]
    DataSocket::DataSocket( sock p_socket )
                                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:96:14: warning: code should be clang-formatted [-Wclang-format-violations]
    : Socket( p_socket ),
             ^
./Libraries/SocketLib/SocketLibSocket.cpp:96:23: warning: code should be clang-formatted [-Wclang-format-violations]
    : Socket( p_socket ),
                      ^
./Libraries/SocketLib/SocketLibSocket.cpp:96:26: warning: code should be clang-formatted [-Wclang-format-violations]
    : Socket( p_socket ),
                         ^
./Libraries/SocketLib/SocketLibSocket.cpp:97:17: warning: code should be clang-formatted [-Wclang-format-violations]
    m_connected( false )
                ^
./Libraries/SocketLib/SocketLibSocket.cpp:97:23: warning: code should be clang-formatted [-Wclang-format-violations]
    m_connected( false )
                      ^
./Libraries/SocketLib/SocketLibSocket.cpp:97:25: warning: code should be clang-formatted [-Wclang-format-violations]
    m_connected( false )
                        ^
./Libraries/SocketLib/SocketLibSocket.cpp:98:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/SocketLibSocket.cpp:99:11: warning: code should be clang-formatted [-Wclang-format-violations]
        if( p_socket != -1 )
          ^
./Libraries/SocketLib/SocketLibSocket.cpp:99:12: warning: code should be clang-formatted [-Wclang-format-violations]
        if( p_socket != -1 )
           ^
./Libraries/SocketLib/SocketLibSocket.cpp:99:27: warning: code should be clang-formatted [-Wclang-format-violations]
        if( p_socket != -1 )
                          ^
./Libraries/SocketLib/SocketLibSocket.cpp:99:29: warning: code should be clang-formatted [-Wclang-format-violations]
        if( p_socket != -1 )
                            ^
./Libraries/SocketLib/SocketLibSocket.cpp:100:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/SocketLibSocket.cpp:101:48: warning: code should be clang-formatted [-Wclang-format-violations]
            socklen_t s = sizeof(m_remoteinfo);
                                               ^
./Libraries/SocketLib/SocketLibSocket.cpp:102:25: warning: code should be clang-formatted [-Wclang-format-violations]
            getpeername( p_socket, (sockaddr*)(&m_remoteinfo), &s );
                        ^
./Libraries/SocketLib/SocketLibSocket.cpp:102:45: warning: code should be clang-formatted [-Wclang-format-violations]
            getpeername( p_socket, (sockaddr*)(&m_remoteinfo), &s );
                                            ^
./Libraries/SocketLib/SocketLibSocket.cpp:102:66: warning: code should be clang-formatted [-Wclang-format-violations]
            getpeername( p_socket, (sockaddr*)(&m_remoteinfo), &s );
                                                                 ^
./Libraries/SocketLib/SocketLibSocket.cpp:102:69: warning: code should be clang-formatted [-Wclang-format-violations]
            getpeername( p_socket, (sockaddr*)(&m_remoteinfo), &s );
                                                                    ^
./Libraries/SocketLib/SocketLibSocket.cpp:103:32: warning: code should be clang-formatted [-Wclang-format-violations]
            m_connected = true;
                               ^
./Libraries/SocketLib/SocketLibSocket.cpp:104:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/SocketLibSocket.cpp:105:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }
     ^
./Libraries/SocketLib/SocketLibSocket.cpp:108:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:109:28: warning: code should be clang-formatted [-Wclang-format-violations]
    // Function:    Connect
                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:110:75: warning: code should be clang-formatted [-Wclang-format-violations]
    // Purpose:     Connects this socket to another socket. This will fail
                                                                          ^
./Libraries/SocketLib/SocketLibSocket.cpp:111:70: warning: code should be clang-formatted [-Wclang-format-violations]
    //              if the socket is already connected, or the server
                                                                     ^
./Libraries/SocketLib/SocketLibSocket.cpp:112:44: warning: code should be clang-formatted [-Wclang-format-violations]
    //              rejects the connection.
                                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:113:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:114:30: warning: code should be clang-formatted [-Wclang-format-violations]
    void DataSocket::Connect( ipaddress p_addr, port p_port )
                             ^
./Libraries/SocketLib/SocketLibSocket.cpp:114:60: warning: code should be clang-formatted [-Wclang-format-violations]
    void DataSocket::Connect( ipaddress p_addr, port p_port )
                                                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:114:62: warning: code should be clang-formatted [-Wclang-format-violations]
    void DataSocket::Connect( ipaddress p_addr, port p_port )
                                                             ^
./Libraries/SocketLib/SocketLibSocket.cpp:115:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/SocketLibSocket.cpp:116:17: warning: code should be clang-formatted [-Wclang-format-violations]
        int err;
                ^
./Libraries/SocketLib/SocketLibSocket.cpp:118:49: warning: code should be clang-formatted [-Wclang-format-violations]
        // if the socket is already connected...
                                                ^
./Libraries/SocketLib/SocketLibSocket.cpp:119:11: warning: code should be clang-formatted [-Wclang-format-violations]
        if( m_connected == true )
          ^
./Libraries/SocketLib/SocketLibSocket.cpp:119:12: warning: code should be clang-formatted [-Wclang-format-violations]
        if( m_connected == true )
           ^
./Libraries/SocketLib/SocketLibSocket.cpp:119:32: warning: code should be clang-formatted [-Wclang-format-violations]
        if( m_connected == true )
                               ^
./Libraries/SocketLib/SocketLibSocket.cpp:119:34: warning: code should be clang-formatted [-Wclang-format-violations]
        if( m_connected == true )
                                 ^
./Libraries/SocketLib/SocketLibSocket.cpp:120:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/SocketLibSocket.cpp:121:29: warning: code should be clang-formatted [-Wclang-format-violations]
            throw Exception( EAlreadyConnected );
                            ^
./Libraries/SocketLib/SocketLibSocket.cpp:121:47: warning: code should be clang-formatted [-Wclang-format-violations]
            throw Exception( EAlreadyConnected );
                                              ^
./Libraries/SocketLib/SocketLibSocket.cpp:121:50: warning: code should be clang-formatted [-Wclang-format-violations]
            throw Exception( EAlreadyConnected );
                                                 ^
./Libraries/SocketLib/SocketLibSocket.cpp:122:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/SocketLibSocket.cpp:124:67: warning: code should be clang-formatted [-Wclang-format-violations]
        // first try to obtain a socket descriptor from the OS, if
                                                                  ^
./Libraries/SocketLib/SocketLibSocket.cpp:125:36: warning: code should be clang-formatted [-Wclang-format-violations]
        // there isn't already one.
                                   ^
./Libraries/SocketLib/SocketLibSocket.cpp:126:11: warning: code should be clang-formatted [-Wclang-format-violations]
        if( m_sock == -1 )
          ^
./Libraries/SocketLib/SocketLibSocket.cpp:126:12: warning: code should be clang-formatted [-Wclang-format-violations]
        if( m_sock == -1 )
           ^
./Libraries/SocketLib/SocketLibSocket.cpp:126:25: warning: code should be clang-formatted [-Wclang-format-violations]
        if( m_sock == -1 )
                        ^
./Libraries/SocketLib/SocketLibSocket.cpp:126:27: warning: code should be clang-formatted [-Wclang-format-violations]
        if( m_sock == -1 )
                          ^
./Libraries/SocketLib/SocketLibSocket.cpp:127:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/SocketLibSocket.cpp:128:29: warning: code should be clang-formatted [-Wclang-format-violations]
            m_sock = socket( AF_INET, SOCK_STREAM, IPPROTO_TCP );
                            ^
./Libraries/SocketLib/SocketLibSocket.cpp:128:63: warning: code should be clang-formatted [-Wclang-format-violations]
            m_sock = socket( AF_INET, SOCK_STREAM, IPPROTO_TCP );
                                                              ^
./Libraries/SocketLib/SocketLibSocket.cpp:128:66: warning: code should be clang-formatted [-Wclang-format-violations]
            m_sock = socket( AF_INET, SOCK_STREAM, IPPROTO_TCP );
                                                                 ^
./Libraries/SocketLib/SocketLibSocket.cpp:130:69: warning: code should be clang-formatted [-Wclang-format-violations]
            // throw an exception if the socket could not be created
                                                                    ^
./Libraries/SocketLib/SocketLibSocket.cpp:131:15: warning: code should be clang-formatted [-Wclang-format-violations]
            if( m_sock == -1 )
              ^
./Libraries/SocketLib/SocketLibSocket.cpp:131:16: warning: code should be clang-formatted [-Wclang-format-violations]
            if( m_sock == -1 )
               ^
./Libraries/SocketLib/SocketLibSocket.cpp:131:29: warning: code should be clang-formatted [-Wclang-format-violations]
            if( m_sock == -1 )
                            ^
./Libraries/SocketLib/SocketLibSocket.cpp:131:31: warning: code should be clang-formatted [-Wclang-format-violations]
            if( m_sock == -1 )
                              ^
./Libraries/SocketLib/SocketLibSocket.cpp:132:14: warning: code should be clang-formatted [-Wclang-format-violations]
            {
             ^
./Libraries/SocketLib/SocketLibSocket.cpp:133:33: warning: code should be clang-formatted [-Wclang-format-violations]
                throw Exception( GetError() );
                                ^
./Libraries/SocketLib/SocketLibSocket.cpp:133:44: warning: code should be clang-formatted [-Wclang-format-violations]
                throw Exception( GetError() );
                                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:133:47: warning: code should be clang-formatted [-Wclang-format-violations]
                throw Exception( GetError() );
                                              ^
./Libraries/SocketLib/SocketLibSocket.cpp:134:14: warning: code should be clang-formatted [-Wclang-format-violations]
            }
             ^
./Libraries/SocketLib/SocketLibSocket.cpp:135:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/SocketLibSocket.cpp:137:47: warning: code should be clang-formatted [-Wclang-format-violations]
        // set up the socket address structure
                                              ^
./Libraries/SocketLib/SocketLibSocket.cpp:138:43: warning: code should be clang-formatted [-Wclang-format-violations]
        m_remoteinfo.sin_family = AF_INET;
                                          ^
./Libraries/SocketLib/SocketLibSocket.cpp:139:39: warning: code should be clang-formatted [-Wclang-format-violations]
        m_remoteinfo.sin_port = htons( p_port );
                                      ^
./Libraries/SocketLib/SocketLibSocket.cpp:139:46: warning: code should be clang-formatted [-Wclang-format-violations]
        m_remoteinfo.sin_port = htons( p_port );
                                             ^
./Libraries/SocketLib/SocketLibSocket.cpp:139:49: warning: code should be clang-formatted [-Wclang-format-violations]
        m_remoteinfo.sin_port = htons( p_port );
                                                ^
./Libraries/SocketLib/SocketLibSocket.cpp:140:47: warning: code should be clang-formatted [-Wclang-format-violations]
        m_remoteinfo.sin_addr.s_addr = p_addr;
                                              ^
./Libraries/SocketLib/SocketLibSocket.cpp:141:16: warning: code should be clang-formatted [-Wclang-format-violations]
        memset( &(m_remoteinfo.sin_zero), 0, 8 );
               ^
./Libraries/SocketLib/SocketLibSocket.cpp:141:47: warning: code should be clang-formatted [-Wclang-format-violations]
        memset( &(m_remoteinfo.sin_zero), 0, 8 );
                                              ^
./Libraries/SocketLib/SocketLibSocket.cpp:141:50: warning: code should be clang-formatted [-Wclang-format-violations]
        memset( &(m_remoteinfo.sin_zero), 0, 8 );
                                                 ^
./Libraries/SocketLib/SocketLibSocket.cpp:143:53: warning: code should be clang-formatted [-Wclang-format-violations]
        // now the socket is created, so connect it.
                                                    ^
./Libraries/SocketLib/SocketLibSocket.cpp:144:47: warning: code should be clang-formatted [-Wclang-format-violations]
        socklen_t s = sizeof(struct sockaddr);
                                              ^
./Libraries/SocketLib/SocketLibSocket.cpp:145:23: warning: code should be clang-formatted [-Wclang-format-violations]
        err = connect( m_sock, (struct sockaddr*)(&m_remoteinfo), s );
                      ^
./Libraries/SocketLib/SocketLibSocket.cpp:145:48: warning: code should be clang-formatted [-Wclang-format-violations]
        err = connect( m_sock, (struct sockaddr*)(&m_remoteinfo), s );
                                               ^
./Libraries/SocketLib/SocketLibSocket.cpp:145:68: warning: code should be clang-formatted [-Wclang-format-violations]
        err = connect( m_sock, (struct sockaddr*)(&m_remoteinfo), s );
                                                                   ^
./Libraries/SocketLib/SocketLibSocket.cpp:145:71: warning: code should be clang-formatted [-Wclang-format-violations]
        err = connect( m_sock, (struct sockaddr*)(&m_remoteinfo), s );
                                                                      ^
./Libraries/SocketLib/SocketLibSocket.cpp:146:11: warning: code should be clang-formatted [-Wclang-format-violations]
        if( err == -1 )
          ^
./Libraries/SocketLib/SocketLibSocket.cpp:146:12: warning: code should be clang-formatted [-Wclang-format-violations]
        if( err == -1 )
           ^
./Libraries/SocketLib/SocketLibSocket.cpp:146:22: warning: code should be clang-formatted [-Wclang-format-violations]
        if( err == -1 )
                     ^
./Libraries/SocketLib/SocketLibSocket.cpp:146:24: warning: code should be clang-formatted [-Wclang-format-violations]
        if( err == -1 )
                       ^
./Libraries/SocketLib/SocketLibSocket.cpp:147:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/SocketLibSocket.cpp:148:29: warning: code should be clang-formatted [-Wclang-format-violations]
            throw Exception( GetError() );
                            ^
./Libraries/SocketLib/SocketLibSocket.cpp:148:40: warning: code should be clang-formatted [-Wclang-format-violations]
            throw Exception( GetError() );
                                       ^
./Libraries/SocketLib/SocketLibSocket.cpp:148:43: warning: code should be clang-formatted [-Wclang-format-violations]
            throw Exception( GetError() );
                                          ^
./Libraries/SocketLib/SocketLibSocket.cpp:149:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/SocketLibSocket.cpp:151:28: warning: code should be clang-formatted [-Wclang-format-violations]
        m_connected = true;
                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:153:68: warning: code should be clang-formatted [-Wclang-format-violations]
        // to get the local port, you need to do a little more work
                                                                   ^
./Libraries/SocketLib/SocketLibSocket.cpp:154:27: warning: code should be clang-formatted [-Wclang-format-violations]
        err = getsockname( m_sock, (struct sockaddr*)(&m_localinfo), &s );
                          ^
./Libraries/SocketLib/SocketLibSocket.cpp:154:52: warning: code should be clang-formatted [-Wclang-format-violations]
        err = getsockname( m_sock, (struct sockaddr*)(&m_localinfo), &s );
                                                   ^
./Libraries/SocketLib/SocketLibSocket.cpp:154:72: warning: code should be clang-formatted [-Wclang-format-violations]
        err = getsockname( m_sock, (struct sockaddr*)(&m_localinfo), &s );
                                                                       ^
./Libraries/SocketLib/SocketLibSocket.cpp:154:75: warning: code should be clang-formatted [-Wclang-format-violations]
        err = getsockname( m_sock, (struct sockaddr*)(&m_localinfo), &s );
                                                                          ^
./Libraries/SocketLib/SocketLibSocket.cpp:155:11: warning: code should be clang-formatted [-Wclang-format-violations]
        if( err != 0 )
          ^
./Libraries/SocketLib/SocketLibSocket.cpp:155:12: warning: code should be clang-formatted [-Wclang-format-violations]
        if( err != 0 )
           ^
./Libraries/SocketLib/SocketLibSocket.cpp:155:21: warning: code should be clang-formatted [-Wclang-format-violations]
        if( err != 0 )
                    ^
./Libraries/SocketLib/SocketLibSocket.cpp:155:23: warning: code should be clang-formatted [-Wclang-format-violations]
        if( err != 0 )
                      ^
./Libraries/SocketLib/SocketLibSocket.cpp:156:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/SocketLibSocket.cpp:157:29: warning: code should be clang-formatted [-Wclang-format-violations]
            throw Exception( GetError() );
                            ^
./Libraries/SocketLib/SocketLibSocket.cpp:157:40: warning: code should be clang-formatted [-Wclang-format-violations]
            throw Exception( GetError() );
                                       ^
./Libraries/SocketLib/SocketLibSocket.cpp:157:43: warning: code should be clang-formatted [-Wclang-format-violations]
            throw Exception( GetError() );
                                          ^
./Libraries/SocketLib/SocketLibSocket.cpp:158:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/SocketLibSocket.cpp:159:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }
     ^
./Libraries/SocketLib/SocketLibSocket.cpp:161:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:162:25: warning: code should be clang-formatted [-Wclang-format-violations]
    // Function:    Send
                        ^
./Libraries/SocketLib/SocketLibSocket.cpp:163:69: warning: code should be clang-formatted [-Wclang-format-violations]
    // Purpose:     Attempts to send data, and returns the number of
                                                                    ^
./Libraries/SocketLib/SocketLibSocket.cpp:164:34: warning: code should be clang-formatted [-Wclang-format-violations]
    //              of bytes sent
                                 ^
./Libraries/SocketLib/SocketLibSocket.cpp:165:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:166:26: warning: code should be clang-formatted [-Wclang-format-violations]
    int DataSocket::Send( const char* p_buffer, int p_size )
                         ^
./Libraries/SocketLib/SocketLibSocket.cpp:166:37: warning: code should be clang-formatted [-Wclang-format-violations]
    int DataSocket::Send( const char* p_buffer, int p_size )
                                    ^
./Libraries/SocketLib/SocketLibSocket.cpp:166:38: warning: code should be clang-formatted [-Wclang-format-violations]
    int DataSocket::Send( const char* p_buffer, int p_size )
                                     ^
./Libraries/SocketLib/SocketLibSocket.cpp:166:59: warning: code should be clang-formatted [-Wclang-format-violations]
    int DataSocket::Send( const char* p_buffer, int p_size )
                                                          ^
./Libraries/SocketLib/SocketLibSocket.cpp:166:61: warning: code should be clang-formatted [-Wclang-format-violations]
    int DataSocket::Send( const char* p_buffer, int p_size )
                                                            ^
./Libraries/SocketLib/SocketLibSocket.cpp:167:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/SocketLibSocket.cpp:168:17: warning: code should be clang-formatted [-Wclang-format-violations]
        int err;
                ^
./Libraries/SocketLib/SocketLibSocket.cpp:170:52: warning: code should be clang-formatted [-Wclang-format-violations]
        // make sure the socket is connected first.
                                                   ^
./Libraries/SocketLib/SocketLibSocket.cpp:171:11: warning: code should be clang-formatted [-Wclang-format-violations]
        if( m_connected == false )
          ^
./Libraries/SocketLib/SocketLibSocket.cpp:171:12: warning: code should be clang-formatted [-Wclang-format-violations]
        if( m_connected == false )
           ^
./Libraries/SocketLib/SocketLibSocket.cpp:171:33: warning: code should be clang-formatted [-Wclang-format-violations]
        if( m_connected == false )
                                ^
./Libraries/SocketLib/SocketLibSocket.cpp:171:35: warning: code should be clang-formatted [-Wclang-format-violations]
        if( m_connected == false )
                                  ^
./Libraries/SocketLib/SocketLibSocket.cpp:172:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/SocketLibSocket.cpp:173:29: warning: code should be clang-formatted [-Wclang-format-violations]
            throw Exception( ENotConnected );
                            ^
./Libraries/SocketLib/SocketLibSocket.cpp:173:43: warning: code should be clang-formatted [-Wclang-format-violations]
            throw Exception( ENotConnected );
                                          ^
./Libraries/SocketLib/SocketLibSocket.cpp:173:46: warning: code should be clang-formatted [-Wclang-format-violations]
            throw Exception( ENotConnected );
                                             ^
./Libraries/SocketLib/SocketLibSocket.cpp:174:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/SocketLibSocket.cpp:176:36: warning: code should be clang-formatted [-Wclang-format-violations]
        // attempt to send the data
                                   ^
./Libraries/SocketLib/SocketLibSocket.cpp:177:20: warning: code should be clang-formatted [-Wclang-format-violations]
        err = send( m_sock, p_buffer, p_size, 0 );
                   ^
./Libraries/SocketLib/SocketLibSocket.cpp:177:48: warning: code should be clang-formatted [-Wclang-format-violations]
        err = send( m_sock, p_buffer, p_size, 0 );
                                               ^
./Libraries/SocketLib/SocketLibSocket.cpp:177:51: warning: code should be clang-formatted [-Wclang-format-violations]
        err = send( m_sock, p_buffer, p_size, 0 );
                                                  ^
./Libraries/SocketLib/SocketLibSocket.cpp:178:11: warning: code should be clang-formatted [-Wclang-format-violations]
        if( err == -1 )
          ^
./Libraries/SocketLib/SocketLibSocket.cpp:178:12: warning: code should be clang-formatted [-Wclang-format-violations]
        if( err == -1 )
           ^
./Libraries/SocketLib/SocketLibSocket.cpp:178:22: warning: code should be clang-formatted [-Wclang-format-violations]
        if( err == -1 )
                     ^
./Libraries/SocketLib/SocketLibSocket.cpp:178:24: warning: code should be clang-formatted [-Wclang-format-violations]
        if( err == -1 )
                       ^
./Libraries/SocketLib/SocketLibSocket.cpp:179:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/SocketLibSocket.cpp:180:34: warning: code should be clang-formatted [-Wclang-format-violations]
            Error e = GetError();
                                 ^
./Libraries/SocketLib/SocketLibSocket.cpp:181:15: warning: code should be clang-formatted [-Wclang-format-violations]
            if( e != EOperationWouldBlock )
              ^
./Libraries/SocketLib/SocketLibSocket.cpp:181:16: warning: code should be clang-formatted [-Wclang-format-violations]
            if( e != EOperationWouldBlock )
               ^
./Libraries/SocketLib/SocketLibSocket.cpp:181:42: warning: code should be clang-formatted [-Wclang-format-violations]
            if( e != EOperationWouldBlock )
                                         ^
./Libraries/SocketLib/SocketLibSocket.cpp:181:44: warning: code should be clang-formatted [-Wclang-format-violations]
            if( e != EOperationWouldBlock )
                                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:182:14: warning: code should be clang-formatted [-Wclang-format-violations]
            {
             ^
./Libraries/SocketLib/SocketLibSocket.cpp:183:33: warning: code should be clang-formatted [-Wclang-format-violations]
                throw Exception( e );
                                ^
./Libraries/SocketLib/SocketLibSocket.cpp:183:35: warning: code should be clang-formatted [-Wclang-format-violations]
                throw Exception( e );
                                  ^
./Libraries/SocketLib/SocketLibSocket.cpp:183:38: warning: code should be clang-formatted [-Wclang-format-violations]
                throw Exception( e );
                                     ^
./Libraries/SocketLib/SocketLibSocket.cpp:184:14: warning: code should be clang-formatted [-Wclang-format-violations]
            }
             ^
./Libraries/SocketLib/SocketLibSocket.cpp:186:78: warning: code should be clang-formatted [-Wclang-format-violations]
            // if the socket is nonblocking, we don't want to send a terminal
                                                                             ^
./Libraries/SocketLib/SocketLibSocket.cpp:187:74: warning: code should be clang-formatted [-Wclang-format-violations]
            // error, so just set the number of bytes sent to 0, assuming
                                                                         ^
./Libraries/SocketLib/SocketLibSocket.cpp:188:60: warning: code should be clang-formatted [-Wclang-format-violations]
            // that the client will be able to handle that.
                                                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:189:21: warning: code should be clang-formatted [-Wclang-format-violations]
            err = 0;
                    ^
./Libraries/SocketLib/SocketLibSocket.cpp:190:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/SocketLibSocket.cpp:192:56: warning: code should be clang-formatted [-Wclang-format-violations]
        // return the number of bytes successfully sent
                                                       ^
./Libraries/SocketLib/SocketLibSocket.cpp:193:20: warning: code should be clang-formatted [-Wclang-format-violations]
        return err;
                   ^
./Libraries/SocketLib/SocketLibSocket.cpp:194:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }
     ^
./Libraries/SocketLib/SocketLibSocket.cpp:196:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:197:28: warning: code should be clang-formatted [-Wclang-format-violations]
    // Function:    Receive
                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:198:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // Purpose:     Attempts to recieve data from a socket, and returns the
                                                                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:199:45: warning: code should be clang-formatted [-Wclang-format-violations]
    //              amount of data received.
                                            ^
./Libraries/SocketLib/SocketLibSocket.cpp:200:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:201:29: warning: code should be clang-formatted [-Wclang-format-violations]
    int DataSocket::Receive( char* p_buffer, int p_size )
                            ^
./Libraries/SocketLib/SocketLibSocket.cpp:201:34: warning: code should be clang-formatted [-Wclang-format-violations]
    int DataSocket::Receive( char* p_buffer, int p_size )
                                 ^
./Libraries/SocketLib/SocketLibSocket.cpp:201:35: warning: code should be clang-formatted [-Wclang-format-violations]
    int DataSocket::Receive( char* p_buffer, int p_size )
                                  ^
./Libraries/SocketLib/SocketLibSocket.cpp:201:56: warning: code should be clang-formatted [-Wclang-format-violations]
    int DataSocket::Receive( char* p_buffer, int p_size )
                                                       ^
./Libraries/SocketLib/SocketLibSocket.cpp:201:58: warning: code should be clang-formatted [-Wclang-format-violations]
    int DataSocket::Receive( char* p_buffer, int p_size )
                                                         ^
./Libraries/SocketLib/SocketLibSocket.cpp:202:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/SocketLibSocket.cpp:203:17: warning: code should be clang-formatted [-Wclang-format-violations]
        int err;
                ^
./Libraries/SocketLib/SocketLibSocket.cpp:205:52: warning: code should be clang-formatted [-Wclang-format-violations]
        // make sure the socket is connected first.
                                                   ^
./Libraries/SocketLib/SocketLibSocket.cpp:206:11: warning: code should be clang-formatted [-Wclang-format-violations]
        if( m_connected == false )
          ^
./Libraries/SocketLib/SocketLibSocket.cpp:206:12: warning: code should be clang-formatted [-Wclang-format-violations]
        if( m_connected == false )
           ^
./Libraries/SocketLib/SocketLibSocket.cpp:206:33: warning: code should be clang-formatted [-Wclang-format-violations]
        if( m_connected == false )
                                ^
./Libraries/SocketLib/SocketLibSocket.cpp:206:35: warning: code should be clang-formatted [-Wclang-format-violations]
        if( m_connected == false )
                                  ^
./Libraries/SocketLib/SocketLibSocket.cpp:207:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/SocketLibSocket.cpp:208:29: warning: code should be clang-formatted [-Wclang-format-violations]
            throw Exception( ENotConnected );
                            ^
./Libraries/SocketLib/SocketLibSocket.cpp:208:43: warning: code should be clang-formatted [-Wclang-format-violations]
            throw Exception( ENotConnected );
                                          ^
./Libraries/SocketLib/SocketLibSocket.cpp:208:46: warning: code should be clang-formatted [-Wclang-format-violations]
            throw Exception( ENotConnected );
                                             ^
./Libraries/SocketLib/SocketLibSocket.cpp:209:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/SocketLibSocket.cpp:211:39: warning: code should be clang-formatted [-Wclang-format-violations]
        // attempt to recieve the data
                                      ^
./Libraries/SocketLib/SocketLibSocket.cpp:212:20: warning: code should be clang-formatted [-Wclang-format-violations]
        err = recv( m_sock, p_buffer, p_size, 0 );
                   ^
./Libraries/SocketLib/SocketLibSocket.cpp:212:48: warning: code should be clang-formatted [-Wclang-format-violations]
        err = recv( m_sock, p_buffer, p_size, 0 );
                                               ^
./Libraries/SocketLib/SocketLibSocket.cpp:212:51: warning: code should be clang-formatted [-Wclang-format-violations]
        err = recv( m_sock, p_buffer, p_size, 0 );
                                                  ^
./Libraries/SocketLib/SocketLibSocket.cpp:213:11: warning: code should be clang-formatted [-Wclang-format-violations]
        if( err == 0 )
          ^
./Libraries/SocketLib/SocketLibSocket.cpp:213:12: warning: code should be clang-formatted [-Wclang-format-violations]
        if( err == 0 )
           ^
./Libraries/SocketLib/SocketLibSocket.cpp:213:21: warning: code should be clang-formatted [-Wclang-format-violations]
        if( err == 0 )
                    ^
./Libraries/SocketLib/SocketLibSocket.cpp:213:23: warning: code should be clang-formatted [-Wclang-format-violations]
        if( err == 0 )
                      ^
./Libraries/SocketLib/SocketLibSocket.cpp:214:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/SocketLibSocket.cpp:215:29: warning: code should be clang-formatted [-Wclang-format-violations]
            throw Exception( EConnectionClosed );
                            ^
./Libraries/SocketLib/SocketLibSocket.cpp:215:47: warning: code should be clang-formatted [-Wclang-format-violations]
            throw Exception( EConnectionClosed );
                                              ^
./Libraries/SocketLib/SocketLibSocket.cpp:215:50: warning: code should be clang-formatted [-Wclang-format-violations]
            throw Exception( EConnectionClosed );
                                                 ^
./Libraries/SocketLib/SocketLibSocket.cpp:216:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/SocketLibSocket.cpp:217:11: warning: code should be clang-formatted [-Wclang-format-violations]
        if( err == -1 )
          ^
./Libraries/SocketLib/SocketLibSocket.cpp:217:12: warning: code should be clang-formatted [-Wclang-format-violations]
        if( err == -1 )
           ^
./Libraries/SocketLib/SocketLibSocket.cpp:217:22: warning: code should be clang-formatted [-Wclang-format-violations]
        if( err == -1 )
                     ^
./Libraries/SocketLib/SocketLibSocket.cpp:217:24: warning: code should be clang-formatted [-Wclang-format-violations]
        if( err == -1 )
                       ^
./Libraries/SocketLib/SocketLibSocket.cpp:218:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/SocketLibSocket.cpp:219:29: warning: code should be clang-formatted [-Wclang-format-violations]
            throw Exception( GetError() );
                            ^
./Libraries/SocketLib/SocketLibSocket.cpp:219:40: warning: code should be clang-formatted [-Wclang-format-violations]
            throw Exception( GetError() );
                                       ^
./Libraries/SocketLib/SocketLibSocket.cpp:219:43: warning: code should be clang-formatted [-Wclang-format-violations]
            throw Exception( GetError() );
                                          ^
./Libraries/SocketLib/SocketLibSocket.cpp:220:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/SocketLibSocket.cpp:222:60: warning: code should be clang-formatted [-Wclang-format-violations]
        // return the number of bytes successfully recieved
                                                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:223:20: warning: code should be clang-formatted [-Wclang-format-violations]
        return err;
                   ^
./Libraries/SocketLib/SocketLibSocket.cpp:224:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }
     ^
./Libraries/SocketLib/SocketLibSocket.cpp:226:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:227:26: warning: code should be clang-formatted [-Wclang-format-violations]
    // Function:    Close
                         ^
./Libraries/SocketLib/SocketLibSocket.cpp:228:39: warning: code should be clang-formatted [-Wclang-format-violations]
    // Purpose:     closes the socket.
                                      ^
./Libraries/SocketLib/SocketLibSocket.cpp:229:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:230:29: warning: code should be clang-formatted [-Wclang-format-violations]
    void DataSocket::Close()
                            ^
./Libraries/SocketLib/SocketLibSocket.cpp:231:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/SocketLibSocket.cpp:232:11: warning: code should be clang-formatted [-Wclang-format-violations]
        if( m_connected == true )
          ^
./Libraries/SocketLib/SocketLibSocket.cpp:232:12: warning: code should be clang-formatted [-Wclang-format-violations]
        if( m_connected == true )
           ^
./Libraries/SocketLib/SocketLibSocket.cpp:232:32: warning: code should be clang-formatted [-Wclang-format-violations]
        if( m_connected == true )
                               ^
./Libraries/SocketLib/SocketLibSocket.cpp:232:34: warning: code should be clang-formatted [-Wclang-format-violations]
        if( m_connected == true )
                                 ^
./Libraries/SocketLib/SocketLibSocket.cpp:233:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/SocketLibSocket.cpp:234:22: warning: code should be clang-formatted [-Wclang-format-violations]
            shutdown( m_sock, 2 );
                     ^
./Libraries/SocketLib/SocketLibSocket.cpp:234:32: warning: code should be clang-formatted [-Wclang-format-violations]
            shutdown( m_sock, 2 );
                               ^
./Libraries/SocketLib/SocketLibSocket.cpp:234:35: warning: code should be clang-formatted [-Wclang-format-violations]
            shutdown( m_sock, 2 );
                                  ^
./Libraries/SocketLib/SocketLibSocket.cpp:235:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/SocketLibSocket.cpp:237:28: warning: code should be clang-formatted [-Wclang-format-violations]
        // close the socket
                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:238:25: warning: code should be clang-formatted [-Wclang-format-violations]
        Socket::Close();
                        ^
./Libraries/SocketLib/SocketLibSocket.cpp:240:29: warning: code should be clang-formatted [-Wclang-format-violations]
        m_connected = false;
                            ^
./Libraries/SocketLib/SocketLibSocket.cpp:241:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }
     ^
./Libraries/SocketLib/SocketLibSocket.cpp:243:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:244:36: warning: code should be clang-formatted [-Wclang-format-violations]
    // Function:    ListeningSocket
                                   ^
./Libraries/SocketLib/SocketLibSocket.cpp:245:75: warning: code should be clang-formatted [-Wclang-format-violations]
    // Purpose:     Constructor. Constructs the socket with initial values
                                                                          ^
./Libraries/SocketLib/SocketLibSocket.cpp:246:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:247:39: warning: code should be clang-formatted [-Wclang-format-violations]
    ListeningSocket::ListeningSocket()
                                      ^
./Libraries/SocketLib/SocketLibSocket.cpp:248:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/SocketLibSocket.cpp:249:29: warning: code should be clang-formatted [-Wclang-format-violations]
        m_listening = false;
                            ^
./Libraries/SocketLib/SocketLibSocket.cpp:250:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }
     ^
./Libraries/SocketLib/SocketLibSocket.cpp:252:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:253:27: warning: code should be clang-formatted [-Wclang-format-violations]
    // Function:    Listen
                          ^
./Libraries/SocketLib/SocketLibSocket.cpp:254:70: warning: code should be clang-formatted [-Wclang-format-violations]
    // Purpose:     this function will tell the socket to listen on a 
                                                                     ^
./Libraries/SocketLib/SocketLibSocket.cpp:255:33: warning: code should be clang-formatted [-Wclang-format-violations]
    //              certain port 
                                ^
./Libraries/SocketLib/SocketLibSocket.cpp:256:69: warning: code should be clang-formatted [-Wclang-format-violations]
    // p_port:      This is the port that the socket will listen on.
                                                                    ^
./Libraries/SocketLib/SocketLibSocket.cpp:257:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:258:34: warning: code should be clang-formatted [-Wclang-format-violations]
    void ListeningSocket::Listen( port p_port )
                                 ^
./Libraries/SocketLib/SocketLibSocket.cpp:258:46: warning: code should be clang-formatted [-Wclang-format-violations]
    void ListeningSocket::Listen( port p_port )
                                             ^
./Libraries/SocketLib/SocketLibSocket.cpp:258:48: warning: code should be clang-formatted [-Wclang-format-violations]
    void ListeningSocket::Listen( port p_port )
                                               ^
./Libraries/SocketLib/SocketLibSocket.cpp:259:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/SocketLibSocket.cpp:260:17: warning: code should be clang-formatted [-Wclang-format-violations]
        int err;
                ^
./Libraries/SocketLib/SocketLibSocket.cpp:262:67: warning: code should be clang-formatted [-Wclang-format-violations]
        // first try to obtain a socket descriptor from the OS, if
                                                                  ^
./Libraries/SocketLib/SocketLibSocket.cpp:263:36: warning: code should be clang-formatted [-Wclang-format-violations]
        // there isn't already one.
                                   ^
./Libraries/SocketLib/SocketLibSocket.cpp:264:11: warning: code should be clang-formatted [-Wclang-format-violations]
        if( m_sock == -1 )
          ^
./Libraries/SocketLib/SocketLibSocket.cpp:264:12: warning: code should be clang-formatted [-Wclang-format-violations]
        if( m_sock == -1 )
           ^
./Libraries/SocketLib/SocketLibSocket.cpp:264:25: warning: code should be clang-formatted [-Wclang-format-violations]
        if( m_sock == -1 )
                        ^
./Libraries/SocketLib/SocketLibSocket.cpp:264:27: warning: code should be clang-formatted [-Wclang-format-violations]
        if( m_sock == -1 )
                          ^
./Libraries/SocketLib/SocketLibSocket.cpp:265:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/SocketLibSocket.cpp:266:29: warning: code should be clang-formatted [-Wclang-format-violations]
            m_sock = socket( AF_INET, SOCK_STREAM, IPPROTO_TCP );
                            ^
./Libraries/SocketLib/SocketLibSocket.cpp:266:63: warning: code should be clang-formatted [-Wclang-format-violations]
            m_sock = socket( AF_INET, SOCK_STREAM, IPPROTO_TCP );
                                                              ^
./Libraries/SocketLib/SocketLibSocket.cpp:266:66: warning: code should be clang-formatted [-Wclang-format-violations]
            m_sock = socket( AF_INET, SOCK_STREAM, IPPROTO_TCP );
                                                                 ^
./Libraries/SocketLib/SocketLibSocket.cpp:268:69: warning: code should be clang-formatted [-Wclang-format-violations]
            // throw an exception if the socket could not be created
                                                                    ^
./Libraries/SocketLib/SocketLibSocket.cpp:269:15: warning: code should be clang-formatted [-Wclang-format-violations]
            if( m_sock == -1 )
              ^
./Libraries/SocketLib/SocketLibSocket.cpp:269:16: warning: code should be clang-formatted [-Wclang-format-violations]
            if( m_sock == -1 )
               ^
./Libraries/SocketLib/SocketLibSocket.cpp:269:29: warning: code should be clang-formatted [-Wclang-format-violations]
            if( m_sock == -1 )
                            ^
./Libraries/SocketLib/SocketLibSocket.cpp:269:31: warning: code should be clang-formatted [-Wclang-format-violations]
            if( m_sock == -1 )
                              ^
./Libraries/SocketLib/SocketLibSocket.cpp:270:14: warning: code should be clang-formatted [-Wclang-format-violations]
            {
             ^
./Libraries/SocketLib/SocketLibSocket.cpp:271:33: warning: code should be clang-formatted [-Wclang-format-violations]
                throw Exception( GetError() );
                                ^
./Libraries/SocketLib/SocketLibSocket.cpp:271:44: warning: code should be clang-formatted [-Wclang-format-violations]
                throw Exception( GetError() );
                                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:271:47: warning: code should be clang-formatted [-Wclang-format-violations]
                throw Exception( GetError() );
                                              ^
./Libraries/SocketLib/SocketLibSocket.cpp:272:14: warning: code should be clang-formatted [-Wclang-format-violations]
            }
             ^
./Libraries/SocketLib/SocketLibSocket.cpp:273:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/SocketLibSocket.cpp:275:73: warning: code should be clang-formatted [-Wclang-format-violations]
        // set the SO_REUSEADDR option on the socket, so that it doesn't
                                                                        ^
./Libraries/SocketLib/SocketLibSocket.cpp:276:41: warning: code should be clang-formatted [-Wclang-format-violations]
        // hog the port after it closes.
                                        ^
./Libraries/SocketLib/SocketLibSocket.cpp:277:23: warning: code should be clang-formatted [-Wclang-format-violations]
        int reuse = 1;
                      ^
./Libraries/SocketLib/SocketLibSocket.cpp:278:26: warning: code should be clang-formatted [-Wclang-format-violations]
        err = setsockopt( m_sock, SOL_SOCKET, SO_REUSEADDR, 
                         ^
./Libraries/SocketLib/SocketLibSocket.cpp:278:60: warning: code should be clang-formatted [-Wclang-format-violations]
        err = setsockopt( m_sock, SOL_SOCKET, SO_REUSEADDR, 
                                                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:279:32: warning: code should be clang-formatted [-Wclang-format-violations]
                          (char*)(&reuse), sizeof( reuse ) );
                               ^
./Libraries/SocketLib/SocketLibSocket.cpp:279:43: warning: code should be clang-formatted [-Wclang-format-violations]
                          (char*)(&reuse), sizeof( reuse ) );
                                          ^
./Libraries/SocketLib/SocketLibSocket.cpp:279:51: warning: code should be clang-formatted [-Wclang-format-violations]
                          (char*)(&reuse), sizeof( reuse ) );
                                                  ^
./Libraries/SocketLib/SocketLibSocket.cpp:279:57: warning: code should be clang-formatted [-Wclang-format-violations]
                          (char*)(&reuse), sizeof( reuse ) );
                                                        ^
./Libraries/SocketLib/SocketLibSocket.cpp:279:59: warning: code should be clang-formatted [-Wclang-format-violations]
                          (char*)(&reuse), sizeof( reuse ) );
                                                          ^
./Libraries/SocketLib/SocketLibSocket.cpp:279:62: warning: code should be clang-formatted [-Wclang-format-violations]
                          (char*)(&reuse), sizeof( reuse ) );
                                                             ^
./Libraries/SocketLib/SocketLibSocket.cpp:280:11: warning: code should be clang-formatted [-Wclang-format-violations]
        if( err != 0 )
          ^
./Libraries/SocketLib/SocketLibSocket.cpp:280:12: warning: code should be clang-formatted [-Wclang-format-violations]
        if( err != 0 )
           ^
./Libraries/SocketLib/SocketLibSocket.cpp:280:21: warning: code should be clang-formatted [-Wclang-format-violations]
        if( err != 0 )
                    ^
./Libraries/SocketLib/SocketLibSocket.cpp:280:23: warning: code should be clang-formatted [-Wclang-format-violations]
        if( err != 0 )
                      ^
./Libraries/SocketLib/SocketLibSocket.cpp:281:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/SocketLibSocket.cpp:282:29: warning: code should be clang-formatted [-Wclang-format-violations]
            throw Exception( GetError() );
                            ^
./Libraries/SocketLib/SocketLibSocket.cpp:282:40: warning: code should be clang-formatted [-Wclang-format-violations]
            throw Exception( GetError() );
                                       ^
./Libraries/SocketLib/SocketLibSocket.cpp:282:43: warning: code should be clang-formatted [-Wclang-format-violations]
            throw Exception( GetError() );
                                          ^
./Libraries/SocketLib/SocketLibSocket.cpp:283:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/SocketLibSocket.cpp:285:47: warning: code should be clang-formatted [-Wclang-format-violations]
        // set up the socket address structure
                                              ^
./Libraries/SocketLib/SocketLibSocket.cpp:286:42: warning: code should be clang-formatted [-Wclang-format-violations]
        m_localinfo.sin_family = AF_INET;
                                         ^
./Libraries/SocketLib/SocketLibSocket.cpp:287:38: warning: code should be clang-formatted [-Wclang-format-violations]
        m_localinfo.sin_port = htons( p_port );
                                     ^
./Libraries/SocketLib/SocketLibSocket.cpp:287:45: warning: code should be clang-formatted [-Wclang-format-violations]
        m_localinfo.sin_port = htons( p_port );
                                            ^
./Libraries/SocketLib/SocketLibSocket.cpp:287:48: warning: code should be clang-formatted [-Wclang-format-violations]
        m_localinfo.sin_port = htons( p_port );
                                               ^
./Libraries/SocketLib/SocketLibSocket.cpp:288:45: warning: code should be clang-formatted [-Wclang-format-violations]
        m_localinfo.sin_addr.s_addr = htonl( INADDR_ANY );
                                            ^
./Libraries/SocketLib/SocketLibSocket.cpp:288:56: warning: code should be clang-formatted [-Wclang-format-violations]
        m_localinfo.sin_addr.s_addr = htonl( INADDR_ANY );
                                                       ^
./Libraries/SocketLib/SocketLibSocket.cpp:288:59: warning: code should be clang-formatted [-Wclang-format-violations]
        m_localinfo.sin_addr.s_addr = htonl( INADDR_ANY );
                                                          ^
./Libraries/SocketLib/SocketLibSocket.cpp:289:16: warning: code should be clang-formatted [-Wclang-format-violations]
        memset( &(m_localinfo.sin_zero), 0, 8 );
               ^
./Libraries/SocketLib/SocketLibSocket.cpp:289:46: warning: code should be clang-formatted [-Wclang-format-violations]
        memset( &(m_localinfo.sin_zero), 0, 8 );
                                             ^
./Libraries/SocketLib/SocketLibSocket.cpp:289:49: warning: code should be clang-formatted [-Wclang-format-violations]
        memset( &(m_localinfo.sin_zero), 0, 8 );
                                                ^
./Libraries/SocketLib/SocketLibSocket.cpp:291:27: warning: code should be clang-formatted [-Wclang-format-violations]
        // bind the socket
                          ^
./Libraries/SocketLib/SocketLibSocket.cpp:292:20: warning: code should be clang-formatted [-Wclang-format-violations]
        err = bind( m_sock, (struct sockaddr*)&m_localinfo, 
                   ^
./Libraries/SocketLib/SocketLibSocket.cpp:292:45: warning: code should be clang-formatted [-Wclang-format-violations]
        err = bind( m_sock, (struct sockaddr*)&m_localinfo, 
                                            ^
./Libraries/SocketLib/SocketLibSocket.cpp:292:60: warning: code should be clang-formatted [-Wclang-format-violations]
        err = bind( m_sock, (struct sockaddr*)&m_localinfo, 
                                                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:293:38: warning: code should be clang-formatted [-Wclang-format-violations]
            sizeof(struct sockaddr));
                                     ^
./Libraries/SocketLib/SocketLibSocket.cpp:294:11: warning: code should be clang-formatted [-Wclang-format-violations]
        if( err == -1 )
          ^
./Libraries/SocketLib/SocketLibSocket.cpp:294:12: warning: code should be clang-formatted [-Wclang-format-violations]
        if( err == -1 )
           ^
./Libraries/SocketLib/SocketLibSocket.cpp:294:22: warning: code should be clang-formatted [-Wclang-format-violations]
        if( err == -1 )
                     ^
./Libraries/SocketLib/SocketLibSocket.cpp:294:24: warning: code should be clang-formatted [-Wclang-format-violations]
        if( err == -1 )
                       ^
./Libraries/SocketLib/SocketLibSocket.cpp:295:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/SocketLibSocket.cpp:296:29: warning: code should be clang-formatted [-Wclang-format-violations]
            throw Exception( GetError() );
                            ^
./Libraries/SocketLib/SocketLibSocket.cpp:296:40: warning: code should be clang-formatted [-Wclang-format-violations]
            throw Exception( GetError() );
                                       ^
./Libraries/SocketLib/SocketLibSocket.cpp:296:43: warning: code should be clang-formatted [-Wclang-format-violations]
            throw Exception( GetError() );
                                          ^
./Libraries/SocketLib/SocketLibSocket.cpp:297:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/SocketLibSocket.cpp:299:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // now listen on the socket. There is a very high chance that this will
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.cpp:300:78: warning: code should be clang-formatted [-Wclang-format-violations]
        // be successful if it got to this point, but always check for errors
                                                                             ^
./Libraries/SocketLib/SocketLibSocket.cpp:301:60: warning: code should be clang-formatted [-Wclang-format-violations]
        // anyway. Set the queue to 8; a reasonable number.
                                                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:302:22: warning: code should be clang-formatted [-Wclang-format-violations]
        err = listen( m_sock, 8 );
                     ^
./Libraries/SocketLib/SocketLibSocket.cpp:302:32: warning: code should be clang-formatted [-Wclang-format-violations]
        err = listen( m_sock, 8 );
                               ^
./Libraries/SocketLib/SocketLibSocket.cpp:302:35: warning: code should be clang-formatted [-Wclang-format-violations]
        err = listen( m_sock, 8 );
                                  ^
./Libraries/SocketLib/SocketLibSocket.cpp:303:11: warning: code should be clang-formatted [-Wclang-format-violations]
        if( err == -1 )
          ^
./Libraries/SocketLib/SocketLibSocket.cpp:303:12: warning: code should be clang-formatted [-Wclang-format-violations]
        if( err == -1 )
           ^
./Libraries/SocketLib/SocketLibSocket.cpp:303:22: warning: code should be clang-formatted [-Wclang-format-violations]
        if( err == -1 )
                     ^
./Libraries/SocketLib/SocketLibSocket.cpp:303:24: warning: code should be clang-formatted [-Wclang-format-violations]
        if( err == -1 )
                       ^
./Libraries/SocketLib/SocketLibSocket.cpp:304:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/SocketLibSocket.cpp:305:29: warning: code should be clang-formatted [-Wclang-format-violations]
            throw Exception( GetError() );
                            ^
./Libraries/SocketLib/SocketLibSocket.cpp:305:40: warning: code should be clang-formatted [-Wclang-format-violations]
            throw Exception( GetError() );
                                       ^
./Libraries/SocketLib/SocketLibSocket.cpp:305:43: warning: code should be clang-formatted [-Wclang-format-violations]
            throw Exception( GetError() );
                                          ^
./Libraries/SocketLib/SocketLibSocket.cpp:306:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/SocketLibSocket.cpp:308:28: warning: code should be clang-formatted [-Wclang-format-violations]
        m_listening = true;
                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:309:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }
     ^
./Libraries/SocketLib/SocketLibSocket.cpp:312:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:313:27: warning: code should be clang-formatted [-Wclang-format-violations]
    // Function:    Accept
                          ^
./Libraries/SocketLib/SocketLibSocket.cpp:314:68: warning: code should be clang-formatted [-Wclang-format-violations]
    // Purpose:     This is a blocking function that will accept an 
                                                                   ^
./Libraries/SocketLib/SocketLibSocket.cpp:315:76: warning: code should be clang-formatted [-Wclang-format-violations]
    //              incomming connection and return a data socket with info
                                                                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:316:46: warning: code should be clang-formatted [-Wclang-format-violations]
    //              about the new connection.
                                             ^
./Libraries/SocketLib/SocketLibSocket.cpp:317:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:318:41: warning: code should be clang-formatted [-Wclang-format-violations]
    DataSocket ListeningSocket::Accept()
                                        ^
./Libraries/SocketLib/SocketLibSocket.cpp:319:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/SocketLibSocket.cpp:320:16: warning: code should be clang-formatted [-Wclang-format-violations]
        sock s;
               ^
./Libraries/SocketLib/SocketLibSocket.cpp:321:42: warning: code should be clang-formatted [-Wclang-format-violations]
        struct sockaddr_in socketaddress;
                                         ^
./Libraries/SocketLib/SocketLibSocket.cpp:323:38: warning: code should be clang-formatted [-Wclang-format-violations]
        // try to accept a connection
                                     ^
./Libraries/SocketLib/SocketLibSocket.cpp:324:50: warning: code should be clang-formatted [-Wclang-format-violations]
        socklen_t size = sizeof(struct sockaddr);
                                                 ^
./Libraries/SocketLib/SocketLibSocket.cpp:325:20: warning: code should be clang-formatted [-Wclang-format-violations]
        s = accept( m_sock, (struct sockaddr*)&socketaddress, &size );
                   ^
./Libraries/SocketLib/SocketLibSocket.cpp:325:45: warning: code should be clang-formatted [-Wclang-format-violations]
        s = accept( m_sock, (struct sockaddr*)&socketaddress, &size );
                                            ^
./Libraries/SocketLib/SocketLibSocket.cpp:325:68: warning: code should be clang-formatted [-Wclang-format-violations]
        s = accept( m_sock, (struct sockaddr*)&socketaddress, &size );
                                                                   ^
./Libraries/SocketLib/SocketLibSocket.cpp:325:71: warning: code should be clang-formatted [-Wclang-format-violations]
        s = accept( m_sock, (struct sockaddr*)&socketaddress, &size );
                                                                      ^
./Libraries/SocketLib/SocketLibSocket.cpp:326:11: warning: code should be clang-formatted [-Wclang-format-violations]
        if( s == -1 )
          ^
./Libraries/SocketLib/SocketLibSocket.cpp:326:12: warning: code should be clang-formatted [-Wclang-format-violations]
        if( s == -1 )
           ^
./Libraries/SocketLib/SocketLibSocket.cpp:326:20: warning: code should be clang-formatted [-Wclang-format-violations]
        if( s == -1 )
                   ^
./Libraries/SocketLib/SocketLibSocket.cpp:326:22: warning: code should be clang-formatted [-Wclang-format-violations]
        if( s == -1 )
                     ^
./Libraries/SocketLib/SocketLibSocket.cpp:327:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/SocketLibSocket.cpp:328:29: warning: code should be clang-formatted [-Wclang-format-violations]
            throw Exception( GetError() );
                            ^
./Libraries/SocketLib/SocketLibSocket.cpp:328:40: warning: code should be clang-formatted [-Wclang-format-violations]
            throw Exception( GetError() );
                                       ^
./Libraries/SocketLib/SocketLibSocket.cpp:328:43: warning: code should be clang-formatted [-Wclang-format-violations]
            throw Exception( GetError() );
                                          ^
./Libraries/SocketLib/SocketLibSocket.cpp:329:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/SocketLibSocket.cpp:331:44: warning: code should be clang-formatted [-Wclang-format-violations]
        // return the newly created socket.
                                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:332:27: warning: code should be clang-formatted [-Wclang-format-violations]
        return DataSocket( s );
                          ^
./Libraries/SocketLib/SocketLibSocket.cpp:332:29: warning: code should be clang-formatted [-Wclang-format-violations]
        return DataSocket( s );
                            ^
./Libraries/SocketLib/SocketLibSocket.cpp:332:32: warning: code should be clang-formatted [-Wclang-format-violations]
        return DataSocket( s );
                               ^
./Libraries/SocketLib/SocketLibSocket.cpp:333:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }
     ^
./Libraries/SocketLib/SocketLibSocket.cpp:336:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:337:26: warning: code should be clang-formatted [-Wclang-format-violations]
    // Function:    Close
                         ^
./Libraries/SocketLib/SocketLibSocket.cpp:338:39: warning: code should be clang-formatted [-Wclang-format-violations]
    // Purpose:     closes the socket.
                                      ^
./Libraries/SocketLib/SocketLibSocket.cpp:339:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:340:34: warning: code should be clang-formatted [-Wclang-format-violations]
    void ListeningSocket::Close()
                                 ^
./Libraries/SocketLib/SocketLibSocket.cpp:341:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/SocketLibSocket.cpp:342:28: warning: code should be clang-formatted [-Wclang-format-violations]
        // close the socket
                           ^
./Libraries/SocketLib/SocketLibSocket.cpp:343:25: warning: code should be clang-formatted [-Wclang-format-violations]
        Socket::Close();
                        ^
./Libraries/SocketLib/SocketLibSocket.cpp:345:36: warning: code should be clang-formatted [-Wclang-format-violations]
        // invalidate the variables
                                   ^
./Libraries/SocketLib/SocketLibSocket.cpp:346:29: warning: code should be clang-formatted [-Wclang-format-violations]
        m_listening = false;
                            ^
./Libraries/SocketLib/SocketLibSocket.cpp:349:2: warning: code should be clang-formatted [-Wclang-format-violations]
}   // end namespace SocketLib
 ^
./Libraries/SocketLib/SocketLibSystem.cpp:13:20: warning: code should be clang-formatted [-Wclang-format-violations]
namespace SocketLib
                   ^
./Libraries/SocketLib/SocketLibSystem.cpp:14:2: warning: code should be clang-formatted [-Wclang-format-violations]
{
 ^
./Libraries/SocketLib/SocketLibSystem.cpp:17:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSystem.cpp:18:73: warning: code should be clang-formatted [-Wclang-format-violations]
    //  This class is designed to be a global singleton that initializes
                                                                        ^
./Libraries/SocketLib/SocketLibSystem.cpp:19:32: warning: code should be clang-formatted [-Wclang-format-violations]
    //  and shuts down Winsock.
                               ^
./Libraries/SocketLib/SocketLibSystem.cpp:20:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSystem.cpp:21:17: warning: code should be clang-formatted [-Wclang-format-violations]
    #ifdef WIN32                // windows 95 and above
                ^
./Libraries/SocketLib/SocketLibSystem.cpp:21:56: warning: code should be clang-formatted [-Wclang-format-violations]
    #ifdef WIN32                // windows 95 and above
                                                       ^
./Libraries/SocketLib/SocketLibSystem.cpp:22:21: warning: code should be clang-formatted [-Wclang-format-violations]
        class System
                    ^
./Libraries/SocketLib/SocketLibSystem.cpp:23:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/SocketLibSystem.cpp:24:16: warning: code should be clang-formatted [-Wclang-format-violations]
        public:
               ^
./Libraries/SocketLib/SocketLibSystem.cpp:25:80: warning: code should be clang-formatted [-Wclang-format-violations]
            // ================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSystem.cpp:26:41: warning: code should be clang-formatted [-Wclang-format-violations]
            //  This initializes winsock
                                        ^
./Libraries/SocketLib/SocketLibSystem.cpp:27:80: warning: code should be clang-formatted [-Wclang-format-violations]
            // ================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSystem.cpp:28:21: warning: code should be clang-formatted [-Wclang-format-violations]
            System()
                    ^
./Libraries/SocketLib/SocketLibSystem.cpp:29:14: warning: code should be clang-formatted [-Wclang-format-violations]
            {
             ^
./Libraries/SocketLib/SocketLibSystem.cpp:30:55: warning: code should be clang-formatted [-Wclang-format-violations]
                // attempt to start up the winsock lib
                                                      ^
./Libraries/SocketLib/SocketLibSystem.cpp:31:28: warning: code should be clang-formatted [-Wclang-format-violations]
                WSAStartup( MAKEWORD( 2, 2 ), &m_WSAData );
                           ^
./Libraries/SocketLib/SocketLibSystem.cpp:31:38: warning: code should be clang-formatted [-Wclang-format-violations]
                WSAStartup( MAKEWORD( 2, 2 ), &m_WSAData );
                                     ^
./Libraries/SocketLib/SocketLibSystem.cpp:31:43: warning: code should be clang-formatted [-Wclang-format-violations]
                WSAStartup( MAKEWORD( 2, 2 ), &m_WSAData );
                                          ^
./Libraries/SocketLib/SocketLibSystem.cpp:31:57: warning: code should be clang-formatted [-Wclang-format-violations]
                WSAStartup( MAKEWORD( 2, 2 ), &m_WSAData );
                                                        ^
./Libraries/SocketLib/SocketLibSystem.cpp:31:60: warning: code should be clang-formatted [-Wclang-format-violations]
                WSAStartup( MAKEWORD( 2, 2 ), &m_WSAData );
                                                           ^
./Libraries/SocketLib/SocketLibSystem.cpp:32:14: warning: code should be clang-formatted [-Wclang-format-violations]
            }
             ^
./Libraries/SocketLib/SocketLibSystem.cpp:34:88: warning: code should be clang-formatted [-Wclang-format-violations]
            // ========================================================================
                                                                                       ^
./Libraries/SocketLib/SocketLibSystem.cpp:35:40: warning: code should be clang-formatted [-Wclang-format-violations]
            //  This shuts down winsock
                                       ^
./Libraries/SocketLib/SocketLibSystem.cpp:36:88: warning: code should be clang-formatted [-Wclang-format-violations]
            // ========================================================================
                                                                                       ^
./Libraries/SocketLib/SocketLibSystem.cpp:37:22: warning: code should be clang-formatted [-Wclang-format-violations]
            ~System()
                     ^
./Libraries/SocketLib/SocketLibSystem.cpp:38:14: warning: code should be clang-formatted [-Wclang-format-violations]
            {
             ^
./Libraries/SocketLib/SocketLibSystem.cpp:39:57: warning: code should be clang-formatted [-Wclang-format-violations]
                // attempt to close down the winsock lib
                                                        ^
./Libraries/SocketLib/SocketLibSystem.cpp:40:30: warning: code should be clang-formatted [-Wclang-format-violations]
                WSACleanup();
                             ^
./Libraries/SocketLib/SocketLibSystem.cpp:41:14: warning: code should be clang-formatted [-Wclang-format-violations]
            }
             ^
./Libraries/SocketLib/SocketLibSystem.cpp:43:19: warning: code should be clang-formatted [-Wclang-format-violations]
        protected:
                  ^
./Libraries/SocketLib/SocketLibSystem.cpp:44:47: warning: code should be clang-formatted [-Wclang-format-violations]
            // holds information about winsock
                                              ^
./Libraries/SocketLib/SocketLibSystem.cpp:45:31: warning: code should be clang-formatted [-Wclang-format-violations]
            WSADATA m_WSAData;
                              ^
./Libraries/SocketLib/SocketLibSystem.cpp:46:11: warning: code should be clang-formatted [-Wclang-format-violations]
        };
          ^
./Libraries/SocketLib/SocketLibSystem.cpp:48:25: warning: code should be clang-formatted [-Wclang-format-violations]
        System g_system;
                        ^
./Libraries/SocketLib/SocketLibSystem.cpp:49:11: warning: code should be clang-formatted [-Wclang-format-violations]
    #endif
          ^
./Libraries/SocketLib/SocketLibSystem.cpp:52:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSystem.cpp:53:33: warning: code should be clang-formatted [-Wclang-format-violations]
    // Function:    GetIPAddress
                                ^
./Libraries/SocketLib/SocketLibSystem.cpp:54:72: warning: code should be clang-formatted [-Wclang-format-violations]
    // Purpose:     To get the IP address of the string as an ipaddress
                                                                       ^
./Libraries/SocketLib/SocketLibSystem.cpp:55:76: warning: code should be clang-formatted [-Wclang-format-violations]
    //              structure. Throws an exception if the address cannot be
                                                                           ^
./Libraries/SocketLib/SocketLibSystem.cpp:56:31: warning: code should be clang-formatted [-Wclang-format-violations]
    //              converted.
                              ^
./Libraries/SocketLib/SocketLibSystem.cpp:57:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSystem.cpp:58:28: warning: code should be clang-formatted [-Wclang-format-violations]
    ipaddress GetIPAddress( const std::string p_address )
                           ^
./Libraries/SocketLib/SocketLibSystem.cpp:58:56: warning: code should be clang-formatted [-Wclang-format-violations]
    ipaddress GetIPAddress( const std::string p_address )
                                                       ^
./Libraries/SocketLib/SocketLibSystem.cpp:58:58: warning: code should be clang-formatted [-Wclang-format-violations]
    ipaddress GetIPAddress( const std::string p_address )
                                                         ^
./Libraries/SocketLib/SocketLibSystem.cpp:59:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/SocketLibSystem.cpp:61:11: warning: code should be clang-formatted [-Wclang-format-violations]
        if( IsIPAddress( p_address ) )
          ^
./Libraries/SocketLib/SocketLibSystem.cpp:61:12: warning: code should be clang-formatted [-Wclang-format-violations]
        if( IsIPAddress( p_address ) )
           ^
./Libraries/SocketLib/SocketLibSystem.cpp:61:25: warning: code should be clang-formatted [-Wclang-format-violations]
        if( IsIPAddress( p_address ) )
                        ^
./Libraries/SocketLib/SocketLibSystem.cpp:61:35: warning: code should be clang-formatted [-Wclang-format-violations]
        if( IsIPAddress( p_address ) )
                                  ^
./Libraries/SocketLib/SocketLibSystem.cpp:61:37: warning: code should be clang-formatted [-Wclang-format-violations]
        if( IsIPAddress( p_address ) )
                                    ^
./Libraries/SocketLib/SocketLibSystem.cpp:61:39: warning: code should be clang-formatted [-Wclang-format-violations]
        if( IsIPAddress( p_address ) )
                                      ^
./Libraries/SocketLib/SocketLibSystem.cpp:62:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/SocketLibSystem.cpp:63:76: warning: code should be clang-formatted [-Wclang-format-violations]
            // if the address is just a regular IP address, there's no need
                                                                           ^
./Libraries/SocketLib/SocketLibSystem.cpp:64:76: warning: code should be clang-formatted [-Wclang-format-violations]
            // to do a DNS lookup, so just convert the string directly into
                                                                           ^
./Libraries/SocketLib/SocketLibSystem.cpp:65:34: warning: code should be clang-formatted [-Wclang-format-violations]
            // its binary format.
                                 ^
./Libraries/SocketLib/SocketLibSystem.cpp:66:40: warning: code should be clang-formatted [-Wclang-format-violations]
            ipaddress addr = inet_addr( p_address.c_str() );
                                       ^
./Libraries/SocketLib/SocketLibSystem.cpp:66:58: warning: code should be clang-formatted [-Wclang-format-violations]
            ipaddress addr = inet_addr( p_address.c_str() );
                                                         ^
./Libraries/SocketLib/SocketLibSystem.cpp:66:61: warning: code should be clang-formatted [-Wclang-format-violations]
            ipaddress addr = inet_addr( p_address.c_str() );
                                                            ^
./Libraries/SocketLib/SocketLibSystem.cpp:68:76: warning: code should be clang-formatted [-Wclang-format-violations]
            // if the address is invalid, throw a HOST_NOT_FOUND exception.
                                                                           ^
./Libraries/SocketLib/SocketLibSystem.cpp:69:15: warning: code should be clang-formatted [-Wclang-format-violations]
            if( addr == INADDR_NONE )
              ^
./Libraries/SocketLib/SocketLibSystem.cpp:69:16: warning: code should be clang-formatted [-Wclang-format-violations]
            if( addr == INADDR_NONE )
               ^
./Libraries/SocketLib/SocketLibSystem.cpp:69:36: warning: code should be clang-formatted [-Wclang-format-violations]
            if( addr == INADDR_NONE )
                                   ^
./Libraries/SocketLib/SocketLibSystem.cpp:69:38: warning: code should be clang-formatted [-Wclang-format-violations]
            if( addr == INADDR_NONE )
                                     ^
./Libraries/SocketLib/SocketLibSystem.cpp:70:14: warning: code should be clang-formatted [-Wclang-format-violations]
            {
             ^
./Libraries/SocketLib/SocketLibSystem.cpp:71:33: warning: code should be clang-formatted [-Wclang-format-violations]
                throw Exception( EDNSNotFound );
                                ^
./Libraries/SocketLib/SocketLibSystem.cpp:71:46: warning: code should be clang-formatted [-Wclang-format-violations]
                throw Exception( EDNSNotFound );
                                             ^
./Libraries/SocketLib/SocketLibSystem.cpp:71:49: warning: code should be clang-formatted [-Wclang-format-violations]
                throw Exception( EDNSNotFound );
                                                ^
./Libraries/SocketLib/SocketLibSystem.cpp:72:14: warning: code should be clang-formatted [-Wclang-format-violations]
            }
             ^
./Libraries/SocketLib/SocketLibSystem.cpp:74:66: warning: code should be clang-formatted [-Wclang-format-violations]
            // by this point, the address is valid, so return it.
                                                                 ^
./Libraries/SocketLib/SocketLibSystem.cpp:75:25: warning: code should be clang-formatted [-Wclang-format-violations]
            return addr;
                        ^
./Libraries/SocketLib/SocketLibSystem.cpp:76:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/SocketLibSystem.cpp:77:13: warning: code should be clang-formatted [-Wclang-format-violations]
        else
            ^
./Libraries/SocketLib/SocketLibSystem.cpp:78:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/SocketLibSystem.cpp:79:79: warning: code should be clang-formatted [-Wclang-format-violations]
            // the address isn't an IP address, so we need to look it up using
                                                                              ^
./Libraries/SocketLib/SocketLibSystem.cpp:80:20: warning: code should be clang-formatted [-Wclang-format-violations]
            // DNS. 
                   ^
./Libraries/SocketLib/SocketLibSystem.cpp:81:27: warning: code should be clang-formatted [-Wclang-format-violations]
            struct hostent* host = gethostbyname( p_address.c_str() );
                          ^
./Libraries/SocketLib/SocketLibSystem.cpp:81:28: warning: code should be clang-formatted [-Wclang-format-violations]
            struct hostent* host = gethostbyname( p_address.c_str() );
                           ^
./Libraries/SocketLib/SocketLibSystem.cpp:81:50: warning: code should be clang-formatted [-Wclang-format-violations]
            struct hostent* host = gethostbyname( p_address.c_str() );
                                                 ^
./Libraries/SocketLib/SocketLibSystem.cpp:81:68: warning: code should be clang-formatted [-Wclang-format-violations]
            struct hostent* host = gethostbyname( p_address.c_str() );
                                                                   ^
./Libraries/SocketLib/SocketLibSystem.cpp:81:71: warning: code should be clang-formatted [-Wclang-format-violations]
            struct hostent* host = gethostbyname( p_address.c_str() );
                                                                      ^
./Libraries/SocketLib/SocketLibSystem.cpp:83:58: warning: code should be clang-formatted [-Wclang-format-violations]
            // if there was an error, throw an exception.
                                                         ^
./Libraries/SocketLib/SocketLibSystem.cpp:84:15: warning: code should be clang-formatted [-Wclang-format-violations]
            if( host == 0 )
              ^
./Libraries/SocketLib/SocketLibSystem.cpp:84:16: warning: code should be clang-formatted [-Wclang-format-violations]
            if( host == 0 )
               ^
./Libraries/SocketLib/SocketLibSystem.cpp:84:26: warning: code should be clang-formatted [-Wclang-format-violations]
            if( host == 0 )
                         ^
./Libraries/SocketLib/SocketLibSystem.cpp:84:28: warning: code should be clang-formatted [-Wclang-format-violations]
            if( host == 0 )
                           ^
./Libraries/SocketLib/SocketLibSystem.cpp:85:14: warning: code should be clang-formatted [-Wclang-format-violations]
            {
             ^
./Libraries/SocketLib/SocketLibSystem.cpp:86:47: warning: code should be clang-formatted [-Wclang-format-violations]
                // get the error from h_errno.
                                              ^
./Libraries/SocketLib/SocketLibSystem.cpp:87:33: warning: code should be clang-formatted [-Wclang-format-violations]
                throw Exception( GetError( false ) );
                                ^
./Libraries/SocketLib/SocketLibSystem.cpp:87:43: warning: code should be clang-formatted [-Wclang-format-violations]
                throw Exception( GetError( false ) );
                                          ^
./Libraries/SocketLib/SocketLibSystem.cpp:87:49: warning: code should be clang-formatted [-Wclang-format-violations]
                throw Exception( GetError( false ) );
                                                ^
./Libraries/SocketLib/SocketLibSystem.cpp:87:51: warning: code should be clang-formatted [-Wclang-format-violations]
                throw Exception( GetError( false ) );
                                                  ^
./Libraries/SocketLib/SocketLibSystem.cpp:87:54: warning: code should be clang-formatted [-Wclang-format-violations]
                throw Exception( GetError( false ) );
                                                     ^
./Libraries/SocketLib/SocketLibSystem.cpp:88:14: warning: code should be clang-formatted [-Wclang-format-violations]
            }
             ^
./Libraries/SocketLib/SocketLibSystem.cpp:90:78: warning: code should be clang-formatted [-Wclang-format-violations]
            // now perform some really wierd casting tricks to get the value.
                                                                             ^
./Libraries/SocketLib/SocketLibSystem.cpp:91:69: warning: code should be clang-formatted [-Wclang-format-violations]
            // h_addr is a char*, so cast it into an ipaddress*, and 
                                                                    ^
./Libraries/SocketLib/SocketLibSystem.cpp:92:48: warning: code should be clang-formatted [-Wclang-format-violations]
            // dereference it to get the value.
                                               ^
./Libraries/SocketLib/SocketLibSystem.cpp:93:32: warning: code should be clang-formatted [-Wclang-format-violations]
            return *((ipaddress*)host->h_addr);
                               ^
./Libraries/SocketLib/SocketLibSystem.cpp:93:48: warning: code should be clang-formatted [-Wclang-format-violations]
            return *((ipaddress*)host->h_addr);
                                               ^
./Libraries/SocketLib/SocketLibSystem.cpp:94:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/SocketLibSystem.cpp:95:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }
     ^
./Libraries/SocketLib/SocketLibSystem.cpp:98:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSystem.cpp:99:32: warning: code should be clang-formatted [-Wclang-format-violations]
    // Function:    GetIPString
                               ^
./Libraries/SocketLib/SocketLibSystem.cpp:100:77: warning: code should be clang-formatted [-Wclang-format-violations]
    // Purpose:     Converts an ipaddress structure to a string in numerical
                                                                            ^
./Libraries/SocketLib/SocketLibSystem.cpp:101:28: warning: code should be clang-formatted [-Wclang-format-violations]
    //              format.
                           ^
./Libraries/SocketLib/SocketLibSystem.cpp:102:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSystem.cpp:103:29: warning: code should be clang-formatted [-Wclang-format-violations]
    std::string GetIPString( ipaddress p_address )
                            ^
./Libraries/SocketLib/SocketLibSystem.cpp:103:49: warning: code should be clang-formatted [-Wclang-format-violations]
    std::string GetIPString( ipaddress p_address )
                                                ^
./Libraries/SocketLib/SocketLibSystem.cpp:103:51: warning: code should be clang-formatted [-Wclang-format-violations]
    std::string GetIPString( ipaddress p_address )
                                                  ^
./Libraries/SocketLib/SocketLibSystem.cpp:104:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/SocketLibSystem.cpp:105:55: warning: code should be clang-formatted [-Wclang-format-violations]
        // return a new string containing the address.
                                                      ^
./Libraries/SocketLib/SocketLibSystem.cpp:106:71: warning: code should be clang-formatted [-Wclang-format-violations]
        // (god that is some ugly casting going on... stupid language)
                                                                      ^
./Libraries/SocketLib/SocketLibSystem.cpp:107:13: warning: code should be clang-formatted [-Wclang-format-violations]
        char* str = inet_ntoa( *((in_addr*)&p_address) );
            ^
./Libraries/SocketLib/SocketLibSystem.cpp:107:14: warning: code should be clang-formatted [-Wclang-format-violations]
        char* str = inet_ntoa( *((in_addr*)&p_address) );
             ^
./Libraries/SocketLib/SocketLibSystem.cpp:107:31: warning: code should be clang-formatted [-Wclang-format-violations]
        char* str = inet_ntoa( *((in_addr*)&p_address) );
                              ^
./Libraries/SocketLib/SocketLibSystem.cpp:107:42: warning: code should be clang-formatted [-Wclang-format-violations]
        char* str = inet_ntoa( *((in_addr*)&p_address) );
                                         ^
./Libraries/SocketLib/SocketLibSystem.cpp:107:55: warning: code should be clang-formatted [-Wclang-format-violations]
        char* str = inet_ntoa( *((in_addr*)&p_address) );
                                                      ^
./Libraries/SocketLib/SocketLibSystem.cpp:107:58: warning: code should be clang-formatted [-Wclang-format-violations]
        char* str = inet_ntoa( *((in_addr*)&p_address) );
                                                         ^
./Libraries/SocketLib/SocketLibSystem.cpp:108:11: warning: code should be clang-formatted [-Wclang-format-violations]
        if( str == 0 )
          ^
./Libraries/SocketLib/SocketLibSystem.cpp:108:12: warning: code should be clang-formatted [-Wclang-format-violations]
        if( str == 0 )
           ^
./Libraries/SocketLib/SocketLibSystem.cpp:108:21: warning: code should be clang-formatted [-Wclang-format-violations]
        if( str == 0 )
                    ^
./Libraries/SocketLib/SocketLibSystem.cpp:108:23: warning: code should be clang-formatted [-Wclang-format-violations]
        if( str == 0 )
                      ^
./Libraries/SocketLib/SocketLibSystem.cpp:109:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/SocketLibSystem.cpp:110:32: warning: code should be clang-formatted [-Wclang-format-violations]
            return std::string( "Invalid IP Address" );
                               ^
./Libraries/SocketLib/SocketLibSystem.cpp:110:53: warning: code should be clang-formatted [-Wclang-format-violations]
            return std::string( "Invalid IP Address" );
                                                    ^
./Libraries/SocketLib/SocketLibSystem.cpp:110:56: warning: code should be clang-formatted [-Wclang-format-violations]
            return std::string( "Invalid IP Address" );
                                                       ^
./Libraries/SocketLib/SocketLibSystem.cpp:111:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/SocketLibSystem.cpp:112:28: warning: code should be clang-formatted [-Wclang-format-violations]
        return std::string( str );
                           ^
./Libraries/SocketLib/SocketLibSystem.cpp:112:32: warning: code should be clang-formatted [-Wclang-format-violations]
        return std::string( str );
                               ^
./Libraries/SocketLib/SocketLibSystem.cpp:112:35: warning: code should be clang-formatted [-Wclang-format-violations]
        return std::string( str );
                                  ^
./Libraries/SocketLib/SocketLibSystem.cpp:113:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }
     ^
./Libraries/SocketLib/SocketLibSystem.cpp:115:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSystem.cpp:116:38: warning: code should be clang-formatted [-Wclang-format-violations]
    // Function:    GetHostNameString
                                     ^
./Libraries/SocketLib/SocketLibSystem.cpp:117:70: warning: code should be clang-formatted [-Wclang-format-violations]
    // Purpose:     Converts an ipaddress structure to a string using
                                                                     ^
./Libraries/SocketLib/SocketLibSystem.cpp:118:56: warning: code should be clang-formatted [-Wclang-format-violations]
    //              reverse-DNS lookup. This may block.
                                                       ^
./Libraries/SocketLib/SocketLibSystem.cpp:119:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSystem.cpp:120:35: warning: code should be clang-formatted [-Wclang-format-violations]
    std::string GetHostNameString( ipaddress p_address )
                                  ^
./Libraries/SocketLib/SocketLibSystem.cpp:120:55: warning: code should be clang-formatted [-Wclang-format-violations]
    std::string GetHostNameString( ipaddress p_address )
                                                      ^
./Libraries/SocketLib/SocketLibSystem.cpp:120:57: warning: code should be clang-formatted [-Wclang-format-violations]
    std::string GetHostNameString( ipaddress p_address )
                                                        ^
./Libraries/SocketLib/SocketLibSystem.cpp:121:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/SocketLibSystem.cpp:122:30: warning: code should be clang-formatted [-Wclang-format-violations]
        // get the host info.
                             ^
./Libraries/SocketLib/SocketLibSystem.cpp:123:23: warning: code should be clang-formatted [-Wclang-format-violations]
        struct hostent* host = gethostbyaddr( (char*)&p_address, 4, AF_INET );
                      ^
./Libraries/SocketLib/SocketLibSystem.cpp:123:24: warning: code should be clang-formatted [-Wclang-format-violations]
        struct hostent* host = gethostbyaddr( (char*)&p_address, 4, AF_INET );
                       ^
./Libraries/SocketLib/SocketLibSystem.cpp:123:46: warning: code should be clang-formatted [-Wclang-format-violations]
        struct hostent* host = gethostbyaddr( (char*)&p_address, 4, AF_INET );
                                             ^
./Libraries/SocketLib/SocketLibSystem.cpp:123:52: warning: code should be clang-formatted [-Wclang-format-violations]
        struct hostent* host = gethostbyaddr( (char*)&p_address, 4, AF_INET );
                                                   ^
./Libraries/SocketLib/SocketLibSystem.cpp:123:76: warning: code should be clang-formatted [-Wclang-format-violations]
        struct hostent* host = gethostbyaddr( (char*)&p_address, 4, AF_INET );
                                                                           ^
./Libraries/SocketLib/SocketLibSystem.cpp:123:79: warning: code should be clang-formatted [-Wclang-format-violations]
        struct hostent* host = gethostbyaddr( (char*)&p_address, 4, AF_INET );
                                                                              ^
./Libraries/SocketLib/SocketLibSystem.cpp:125:54: warning: code should be clang-formatted [-Wclang-format-violations]
        // if there was an error, throw an exception.
                                                     ^
./Libraries/SocketLib/SocketLibSystem.cpp:126:11: warning: code should be clang-formatted [-Wclang-format-violations]
        if( host == 0 )
          ^
./Libraries/SocketLib/SocketLibSystem.cpp:126:12: warning: code should be clang-formatted [-Wclang-format-violations]
        if( host == 0 )
           ^
./Libraries/SocketLib/SocketLibSystem.cpp:126:22: warning: code should be clang-formatted [-Wclang-format-violations]
        if( host == 0 )
                     ^
./Libraries/SocketLib/SocketLibSystem.cpp:126:24: warning: code should be clang-formatted [-Wclang-format-violations]
        if( host == 0 )
                       ^
./Libraries/SocketLib/SocketLibSystem.cpp:127:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/SocketLibSystem.cpp:128:43: warning: code should be clang-formatted [-Wclang-format-violations]
            // get the error from h_errno.
                                          ^
./Libraries/SocketLib/SocketLibSystem.cpp:129:29: warning: code should be clang-formatted [-Wclang-format-violations]
            throw Exception( GetError( false ) );
                            ^
./Libraries/SocketLib/SocketLibSystem.cpp:129:39: warning: code should be clang-formatted [-Wclang-format-violations]
            throw Exception( GetError( false ) );
                                      ^
./Libraries/SocketLib/SocketLibSystem.cpp:129:45: warning: code should be clang-formatted [-Wclang-format-violations]
            throw Exception( GetError( false ) );
                                            ^
./Libraries/SocketLib/SocketLibSystem.cpp:129:47: warning: code should be clang-formatted [-Wclang-format-violations]
            throw Exception( GetError( false ) );
                                              ^
./Libraries/SocketLib/SocketLibSystem.cpp:129:50: warning: code should be clang-formatted [-Wclang-format-violations]
            throw Exception( GetError( false ) );
                                                 ^
./Libraries/SocketLib/SocketLibSystem.cpp:130:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/SocketLibSystem.cpp:132:28: warning: code should be clang-formatted [-Wclang-format-violations]
        return std::string( host->h_name );
                           ^
./Libraries/SocketLib/SocketLibSystem.cpp:132:41: warning: code should be clang-formatted [-Wclang-format-violations]
        return std::string( host->h_name );
                                        ^
./Libraries/SocketLib/SocketLibSystem.cpp:132:44: warning: code should be clang-formatted [-Wclang-format-violations]
        return std::string( host->h_name );
                                           ^
./Libraries/SocketLib/SocketLibSystem.cpp:133:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }
     ^
./Libraries/SocketLib/SocketLibSystem.cpp:135:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSystem.cpp:136:32: warning: code should be clang-formatted [-Wclang-format-violations]
    // Function:    IsIPAddress
                               ^
./Libraries/SocketLib/SocketLibSystem.cpp:137:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // Purpose:     determines if a string contains a pure numerical IP address
                                                                               ^
./Libraries/SocketLib/SocketLibSystem.cpp:138:73: warning: code should be clang-formatted [-Wclang-format-violations]
    //              (returns true) or a DNS'able address (returns false)
                                                                        ^
./Libraries/SocketLib/SocketLibSystem.cpp:139:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSystem.cpp:140:22: warning: code should be clang-formatted [-Wclang-format-violations]
    bool IsIPAddress( const std::string p_address )
                     ^
./Libraries/SocketLib/SocketLibSystem.cpp:140:50: warning: code should be clang-formatted [-Wclang-format-violations]
    bool IsIPAddress( const std::string p_address )
                                                 ^
./Libraries/SocketLib/SocketLibSystem.cpp:140:52: warning: code should be clang-formatted [-Wclang-format-violations]
    bool IsIPAddress( const std::string p_address )
                                                   ^
./Libraries/SocketLib/SocketLibSystem.cpp:141:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/SocketLibSystem.cpp:142:76: warning: code should be clang-formatted [-Wclang-format-violations]
        // scan through the string to see if it's a pure IP address or not.
                                                                           ^
./Libraries/SocketLib/SocketLibSystem.cpp:143:75: warning: code should be clang-formatted [-Wclang-format-violations]
        // basically, we assume that any string with characters other than
                                                                          ^
./Libraries/SocketLib/SocketLibSystem.cpp:144:52: warning: code should be clang-formatted [-Wclang-format-violations]
        // numerics and periods needs to be DNS'ed.
                                                   ^
./Libraries/SocketLib/SocketLibSystem.cpp:145:12: warning: code should be clang-formatted [-Wclang-format-violations]
        for( size_t i = 0; i < p_address.length(); i++ )
           ^
./Libraries/SocketLib/SocketLibSystem.cpp:145:13: warning: code should be clang-formatted [-Wclang-format-violations]
        for( size_t i = 0; i < p_address.length(); i++ )
            ^
./Libraries/SocketLib/SocketLibSystem.cpp:145:55: warning: code should be clang-formatted [-Wclang-format-violations]
        for( size_t i = 0; i < p_address.length(); i++ )
                                                      ^
./Libraries/SocketLib/SocketLibSystem.cpp:145:57: warning: code should be clang-formatted [-Wclang-format-violations]
        for( size_t i = 0; i < p_address.length(); i++ )
                                                        ^
./Libraries/SocketLib/SocketLibSystem.cpp:146:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/SocketLibSystem.cpp:147:15: warning: code should be clang-formatted [-Wclang-format-violations]
            if( ( p_address[i] < '0' || p_address[i] > '9' ) && 
              ^
./Libraries/SocketLib/SocketLibSystem.cpp:147:16: warning: code should be clang-formatted [-Wclang-format-violations]
            if( ( p_address[i] < '0' || p_address[i] > '9' ) && 
               ^
./Libraries/SocketLib/SocketLibSystem.cpp:147:18: warning: code should be clang-formatted [-Wclang-format-violations]
            if( ( p_address[i] < '0' || p_address[i] > '9' ) && 
                 ^
./Libraries/SocketLib/SocketLibSystem.cpp:147:59: warning: code should be clang-formatted [-Wclang-format-violations]
            if( ( p_address[i] < '0' || p_address[i] > '9' ) && 
                                                          ^
./Libraries/SocketLib/SocketLibSystem.cpp:147:64: warning: code should be clang-formatted [-Wclang-format-violations]
            if( ( p_address[i] < '0' || p_address[i] > '9' ) && 
                                                               ^
./Libraries/SocketLib/SocketLibSystem.cpp:148:36: warning: code should be clang-formatted [-Wclang-format-violations]
                p_address[i] != '.' )
                                   ^
./Libraries/SocketLib/SocketLibSystem.cpp:148:38: warning: code should be clang-formatted [-Wclang-format-violations]
                p_address[i] != '.' )
                                     ^
./Libraries/SocketLib/SocketLibSystem.cpp:149:30: warning: code should be clang-formatted [-Wclang-format-violations]
                return false;
                             ^
./Libraries/SocketLib/SocketLibSystem.cpp:150:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/SocketLibSystem.cpp:151:21: warning: code should be clang-formatted [-Wclang-format-violations]
        return true;
                    ^
./Libraries/SocketLib/SocketLibSystem.cpp:152:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }
     ^
./Libraries/SocketLib/SocketLibSystem.cpp:157:2: warning: code should be clang-formatted [-Wclang-format-violations]
}
 ^
./Libraries/SocketLib/SocketSet.cpp:6:57: warning: code should be clang-formatted [-Wclang-format-violations]
//                 It is essentially a select() wrapper.
                                                        ^
./Libraries/SocketLib/SocketSet.cpp:13:20: warning: code should be clang-formatted [-Wclang-format-violations]
namespace SocketLib
                   ^
./Libraries/SocketLib/SocketSet.cpp:16:23: warning: code should be clang-formatted [-Wclang-format-violations]
SocketSet::SocketSet()
                      ^
./Libraries/SocketLib/SocketSet.cpp:17:2: warning: code should be clang-formatted [-Wclang-format-violations]
{
 ^
./Libraries/SocketLib/SocketSet.cpp:18:13: warning: code should be clang-formatted [-Wclang-format-violations]
    FD_ZERO( &m_set );
            ^
./Libraries/SocketLib/SocketSet.cpp:18:20: warning: code should be clang-formatted [-Wclang-format-violations]
    FD_ZERO( &m_set );
                   ^
./Libraries/SocketLib/SocketSet.cpp:18:23: warning: code should be clang-formatted [-Wclang-format-violations]
    FD_ZERO( &m_set );
                      ^
./Libraries/SocketLib/SocketSet.cpp:19:13: warning: code should be clang-formatted [-Wclang-format-violations]
    FD_ZERO( &m_activityset );
            ^
./Libraries/SocketLib/SocketSet.cpp:19:28: warning: code should be clang-formatted [-Wclang-format-violations]
    FD_ZERO( &m_activityset );
                           ^
./Libraries/SocketLib/SocketSet.cpp:22:27: warning: code should be clang-formatted [-Wclang-format-violations]
void SocketSet::AddSocket( const Socket& p_sock )
                          ^
./Libraries/SocketLib/SocketSet.cpp:22:40: warning: code should be clang-formatted [-Wclang-format-violations]
void SocketSet::AddSocket( const Socket& p_sock )
                                       ^
./Libraries/SocketLib/SocketSet.cpp:22:41: warning: code should be clang-formatted [-Wclang-format-violations]
void SocketSet::AddSocket( const Socket& p_sock )
                                        ^
./Libraries/SocketLib/SocketSet.cpp:22:48: warning: code should be clang-formatted [-Wclang-format-violations]
void SocketSet::AddSocket( const Socket& p_sock )
                                               ^
./Libraries/SocketLib/SocketSet.cpp:22:50: warning: code should be clang-formatted [-Wclang-format-violations]
void SocketSet::AddSocket( const Socket& p_sock )
                                                 ^
./Libraries/SocketLib/SocketSet.cpp:23:2: warning: code should be clang-formatted [-Wclang-format-violations]
{
 ^
./Libraries/SocketLib/SocketSet.cpp:24:38: warning: code should be clang-formatted [-Wclang-format-violations]
    // add the socket desc to the set
                                     ^
./Libraries/SocketLib/SocketSet.cpp:25:12: warning: code should be clang-formatted [-Wclang-format-violations]
    FD_SET( p_sock.GetSock(), &m_set );
           ^
./Libraries/SocketLib/SocketSet.cpp:25:37: warning: code should be clang-formatted [-Wclang-format-violations]
    FD_SET( p_sock.GetSock(), &m_set );
                                    ^
./Libraries/SocketLib/SocketSet.cpp:25:40: warning: code should be clang-formatted [-Wclang-format-violations]
    FD_SET( p_sock.GetSock(), &m_set );
                                       ^
./Libraries/SocketLib/SocketSet.cpp:27:61: warning: code should be clang-formatted [-Wclang-format-violations]
    // if linux, then record the descriptor into the vector, 
                                                            ^
./Libraries/SocketLib/SocketSet.cpp:28:49: warning: code should be clang-formatted [-Wclang-format-violations]
    // and check if it's the largest descriptor.
                                                ^
./Libraries/SocketLib/SocketSet.cpp:29:18: warning: code should be clang-formatted [-Wclang-format-violations]
    #ifndef WIN32
                 ^
./Libraries/SocketLib/SocketSet.cpp:30:30: warning: code should be clang-formatted [-Wclang-format-violations]
        m_socketdescs.insert( p_sock.GetSock() );
                             ^
./Libraries/SocketLib/SocketSet.cpp:30:47: warning: code should be clang-formatted [-Wclang-format-violations]
        m_socketdescs.insert( p_sock.GetSock() );
                                              ^
./Libraries/SocketLib/SocketSet.cpp:30:50: warning: code should be clang-formatted [-Wclang-format-violations]
        m_socketdescs.insert( p_sock.GetSock() );
                                                 ^
./Libraries/SocketLib/SocketSet.cpp:31:11: warning: code should be clang-formatted [-Wclang-format-violations]
    #endif
          ^
./Libraries/SocketLib/SocketSet.cpp:35:30: warning: code should be clang-formatted [-Wclang-format-violations]
void SocketSet::RemoveSocket( const Socket& p_sock )
                             ^
./Libraries/SocketLib/SocketSet.cpp:35:43: warning: code should be clang-formatted [-Wclang-format-violations]
void SocketSet::RemoveSocket( const Socket& p_sock )
                                          ^
./Libraries/SocketLib/SocketSet.cpp:35:44: warning: code should be clang-formatted [-Wclang-format-violations]
void SocketSet::RemoveSocket( const Socket& p_sock )
                                           ^
./Libraries/SocketLib/SocketSet.cpp:35:51: warning: code should be clang-formatted [-Wclang-format-violations]
void SocketSet::RemoveSocket( const Socket& p_sock )
                                                  ^
./Libraries/SocketLib/SocketSet.cpp:35:53: warning: code should be clang-formatted [-Wclang-format-violations]
void SocketSet::RemoveSocket( const Socket& p_sock )
                                                    ^
./Libraries/SocketLib/SocketSet.cpp:36:2: warning: code should be clang-formatted [-Wclang-format-violations]
{
 ^
./Libraries/SocketLib/SocketSet.cpp:37:12: warning: code should be clang-formatted [-Wclang-format-violations]
    FD_CLR( p_sock.GetSock(), &m_set );
           ^
./Libraries/SocketLib/SocketSet.cpp:37:37: warning: code should be clang-formatted [-Wclang-format-violations]
    FD_CLR( p_sock.GetSock(), &m_set );
                                    ^
./Libraries/SocketLib/SocketSet.cpp:37:40: warning: code should be clang-formatted [-Wclang-format-violations]
    FD_CLR( p_sock.GetSock(), &m_set );
                                       ^
./Libraries/SocketLib/SocketSet.cpp:39:18: warning: code should be clang-formatted [-Wclang-format-violations]
    #ifndef WIN32
                 ^
./Libraries/SocketLib/SocketSet.cpp:40:49: warning: code should be clang-formatted [-Wclang-format-violations]
        // remove the descriptor from the vector
                                                ^
./Libraries/SocketLib/SocketSet.cpp:41:29: warning: code should be clang-formatted [-Wclang-format-violations]
        m_socketdescs.erase( p_sock.GetSock() );
                            ^
./Libraries/SocketLib/SocketSet.cpp:41:46: warning: code should be clang-formatted [-Wclang-format-violations]
        m_socketdescs.erase( p_sock.GetSock() );
                                             ^
./Libraries/SocketLib/SocketSet.cpp:41:49: warning: code should be clang-formatted [-Wclang-format-violations]
        m_socketdescs.erase( p_sock.GetSock() );
                                                ^
./Libraries/SocketLib/SocketSet.cpp:42:11: warning: code should be clang-formatted [-Wclang-format-violations]
    #endif
          ^
./Libraries/SocketLib/SocketSet.cpp:46:2: warning: code should be clang-formatted [-Wclang-format-violations]
}   // end namespace SocketSet
 ^
./Libraries/SocketLib/Telnet.cpp:4:80: warning: code should be clang-formatted [-Wclang-format-violations]
// Telnet.cpp - This is the header for the telnet policy class; it receives raw 
                                                                               ^
./Libraries/SocketLib/Telnet.cpp:5:75: warning: code should be clang-formatted [-Wclang-format-violations]
//              data from a connection and strips out or takes care of any 
                                                                          ^
./Libraries/SocketLib/Telnet.cpp:6:31: warning: code should be clang-formatted [-Wclang-format-violations]
//              command codes.
                              ^
./Libraries/SocketLib/Telnet.cpp:11:20: warning: code should be clang-formatted [-Wclang-format-violations]
namespace SocketLib
                   ^
./Libraries/SocketLib/Telnet.cpp:20:24: warning: code should be clang-formatted [-Wclang-format-violations]
void Telnet::Translate( Connection<Telnet>& p_conn, char* p_buffer, int p_size )
                       ^
./Libraries/SocketLib/Telnet.cpp:20:43: warning: code should be clang-formatted [-Wclang-format-violations]
void Telnet::Translate( Connection<Telnet>& p_conn, char* p_buffer, int p_size )
                                          ^
./Libraries/SocketLib/Telnet.cpp:20:44: warning: code should be clang-formatted [-Wclang-format-violations]
void Telnet::Translate( Connection<Telnet>& p_conn, char* p_buffer, int p_size )
                                           ^
./Libraries/SocketLib/Telnet.cpp:20:57: warning: code should be clang-formatted [-Wclang-format-violations]
void Telnet::Translate( Connection<Telnet>& p_conn, char* p_buffer, int p_size )
                                                        ^
./Libraries/SocketLib/Telnet.cpp:20:58: warning: code should be clang-formatted [-Wclang-format-violations]
void Telnet::Translate( Connection<Telnet>& p_conn, char* p_buffer, int p_size )
                                                         ^
./Libraries/SocketLib/Telnet.cpp:20:79: warning: code should be clang-formatted [-Wclang-format-violations]
void Telnet::Translate( Connection<Telnet>& p_conn, char* p_buffer, int p_size )
                                                                              ^
./Libraries/SocketLib/Telnet.cpp:20:81: warning: code should be clang-formatted [-Wclang-format-violations]
void Telnet::Translate( Connection<Telnet>& p_conn, char* p_buffer, int p_size )
                                                                                ^
./Libraries/SocketLib/Telnet.cpp:21:2: warning: code should be clang-formatted [-Wclang-format-violations]
{
 ^
./Libraries/SocketLib/Telnet.cpp:22:8: warning: code should be clang-formatted [-Wclang-format-violations]
    for( int i = 0; i < p_size; i++ )
       ^
./Libraries/SocketLib/Telnet.cpp:22:9: warning: code should be clang-formatted [-Wclang-format-violations]
    for( int i = 0; i < p_size; i++ )
        ^
./Libraries/SocketLib/Telnet.cpp:22:36: warning: code should be clang-formatted [-Wclang-format-violations]
    for( int i = 0; i < p_size; i++ )
                                   ^
./Libraries/SocketLib/Telnet.cpp:22:38: warning: code should be clang-formatted [-Wclang-format-violations]
    for( int i = 0; i < p_size; i++ )
                                     ^
./Libraries/SocketLib/Telnet.cpp:23:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/Telnet.cpp:25:67: warning: code should be clang-formatted [-Wclang-format-violations]
        // if the character is a letter and the buffer isn't full,
                                                                  ^
./Libraries/SocketLib/Telnet.cpp:26:32: warning: code should be clang-formatted [-Wclang-format-violations]
        // add it to the buffer
                               ^
./Libraries/SocketLib/Telnet.cpp:27:30: warning: code should be clang-formatted [-Wclang-format-violations]
        char c = p_buffer[i];
                             ^
./Libraries/SocketLib/Telnet.cpp:28:11: warning: code should be clang-formatted [-Wclang-format-violations]
        if( c >= 32 && c != 127 && m_buffersize < BUFFERSIZE )
          ^
./Libraries/SocketLib/Telnet.cpp:28:12: warning: code should be clang-formatted [-Wclang-format-violations]
        if( c >= 32 && c != 127 && m_buffersize < BUFFERSIZE )
           ^
./Libraries/SocketLib/Telnet.cpp:28:61: warning: code should be clang-formatted [-Wclang-format-violations]
        if( c >= 32 && c != 127 && m_buffersize < BUFFERSIZE )
                                                            ^
./Libraries/SocketLib/Telnet.cpp:28:63: warning: code should be clang-formatted [-Wclang-format-violations]
        if( c >= 32 && c != 127 && m_buffersize < BUFFERSIZE )
                                                              ^
./Libraries/SocketLib/Telnet.cpp:29:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/Telnet.cpp:30:40: warning: code should be clang-formatted [-Wclang-format-violations]
            m_buffer[m_buffersize] = c;
                                       ^
./Libraries/SocketLib/Telnet.cpp:31:28: warning: code should be clang-formatted [-Wclang-format-violations]
            m_buffersize++;
                           ^
./Libraries/SocketLib/Telnet.cpp:32:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/Telnet.cpp:34:42: warning: code should be clang-formatted [-Wclang-format-violations]
        // else check if it's a backspace
                                         ^
./Libraries/SocketLib/Telnet.cpp:35:16: warning: code should be clang-formatted [-Wclang-format-violations]
        else if( c == 8 && m_buffersize > 0 )
               ^
./Libraries/SocketLib/Telnet.cpp:35:17: warning: code should be clang-formatted [-Wclang-format-violations]
        else if( c == 8 && m_buffersize > 0 )
                ^
./Libraries/SocketLib/Telnet.cpp:35:44: warning: code should be clang-formatted [-Wclang-format-violations]
        else if( c == 8 && m_buffersize > 0 )
                                           ^
./Libraries/SocketLib/Telnet.cpp:35:46: warning: code should be clang-formatted [-Wclang-format-violations]
        else if( c == 8 && m_buffersize > 0 )
                                             ^
./Libraries/SocketLib/Telnet.cpp:36:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/Telnet.cpp:37:40: warning: code should be clang-formatted [-Wclang-format-violations]
            // erase the last character
                                       ^
./Libraries/SocketLib/Telnet.cpp:38:28: warning: code should be clang-formatted [-Wclang-format-violations]
            m_buffersize--;
                           ^
./Libraries/SocketLib/Telnet.cpp:39:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/Telnet.cpp:41:71: warning: code should be clang-formatted [-Wclang-format-violations]
        // else check if it is a newline, meaning the line is complete
                                                                      ^
./Libraries/SocketLib/Telnet.cpp:42:16: warning: code should be clang-formatted [-Wclang-format-violations]
        else if( c == '\n' || c == '\r' )
               ^
./Libraries/SocketLib/Telnet.cpp:42:17: warning: code should be clang-formatted [-Wclang-format-violations]
        else if( c == '\n' || c == '\r' )
                ^
./Libraries/SocketLib/Telnet.cpp:42:40: warning: code should be clang-formatted [-Wclang-format-violations]
        else if( c == '\n' || c == '\r' )
                                       ^
./Libraries/SocketLib/Telnet.cpp:42:42: warning: code should be clang-formatted [-Wclang-format-violations]
        else if( c == '\n' || c == '\r' )
                                         ^
./Libraries/SocketLib/Telnet.cpp:43:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/Telnet.cpp:44:71: warning: code should be clang-formatted [-Wclang-format-violations]
            // if the buffer size is more than 0, turn the buffer into
                                                                      ^
./Libraries/SocketLib/Telnet.cpp:45:70: warning: code should be clang-formatted [-Wclang-format-violations]
            // a string and send it off to the current handler of the 
                                                                     ^
./Libraries/SocketLib/Telnet.cpp:46:62: warning: code should be clang-formatted [-Wclang-format-violations]
            // connection. Then reset the size of the buffer.
                                                             ^
./Libraries/SocketLib/Telnet.cpp:47:15: warning: code should be clang-formatted [-Wclang-format-violations]
            if( m_buffersize > 0 && p_conn.Handler() != 0 )
              ^
./Libraries/SocketLib/Telnet.cpp:47:16: warning: code should be clang-formatted [-Wclang-format-violations]
            if( m_buffersize > 0 && p_conn.Handler() != 0 )
               ^
./Libraries/SocketLib/Telnet.cpp:47:58: warning: code should be clang-formatted [-Wclang-format-violations]
            if( m_buffersize > 0 && p_conn.Handler() != 0 )
                                                         ^
./Libraries/SocketLib/Telnet.cpp:47:60: warning: code should be clang-formatted [-Wclang-format-violations]
            if( m_buffersize > 0 && p_conn.Handler() != 0 )
                                                           ^
./Libraries/SocketLib/Telnet.cpp:48:14: warning: code should be clang-formatted [-Wclang-format-violations]
            {
             ^
./Libraries/SocketLib/Telnet.cpp:49:42: warning: code should be clang-formatted [-Wclang-format-violations]
                p_conn.Handler()->Handle( string( m_buffer, m_buffersize ) );
                                         ^
./Libraries/SocketLib/Telnet.cpp:49:50: warning: code should be clang-formatted [-Wclang-format-violations]
                p_conn.Handler()->Handle( string( m_buffer, m_buffersize ) );
                                                 ^
./Libraries/SocketLib/Telnet.cpp:49:73: warning: code should be clang-formatted [-Wclang-format-violations]
                p_conn.Handler()->Handle( string( m_buffer, m_buffersize ) );
                                                                        ^
./Libraries/SocketLib/Telnet.cpp:49:75: warning: code should be clang-formatted [-Wclang-format-violations]
                p_conn.Handler()->Handle( string( m_buffer, m_buffersize ) );
                                                                          ^
./Libraries/SocketLib/Telnet.cpp:49:78: warning: code should be clang-formatted [-Wclang-format-violations]
                p_conn.Handler()->Handle( string( m_buffer, m_buffersize ) );
                                                                             ^
./Libraries/SocketLib/Telnet.cpp:50:14: warning: code should be clang-formatted [-Wclang-format-violations]
            }
             ^
./Libraries/SocketLib/Telnet.cpp:51:30: warning: code should be clang-formatted [-Wclang-format-violations]
            m_buffersize = 0;
                             ^
./Libraries/SocketLib/Telnet.cpp:52:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/Telnet.cpp:54:2: warning: code should be clang-formatted [-Wclang-format-violations]
}
 ^
./Libraries/SocketLib/Telnet.cpp:61:25: warning: code should be clang-formatted [-Wclang-format-violations]
void Telnet::SendString( Connection<Telnet>& p_conn, string p_string )
                        ^
./Libraries/SocketLib/Telnet.cpp:61:44: warning: code should be clang-formatted [-Wclang-format-violations]
void Telnet::SendString( Connection<Telnet>& p_conn, string p_string )
                                           ^
./Libraries/SocketLib/Telnet.cpp:61:45: warning: code should be clang-formatted [-Wclang-format-violations]
void Telnet::SendString( Connection<Telnet>& p_conn, string p_string )
                                            ^
./Libraries/SocketLib/Telnet.cpp:61:69: warning: code should be clang-formatted [-Wclang-format-violations]
void Telnet::SendString( Connection<Telnet>& p_conn, string p_string )
                                                                    ^
./Libraries/SocketLib/Telnet.cpp:61:71: warning: code should be clang-formatted [-Wclang-format-violations]
void Telnet::SendString( Connection<Telnet>& p_conn, string p_string )
                                                                      ^
./Libraries/SocketLib/Telnet.cpp:62:2: warning: code should be clang-formatted [-Wclang-format-violations]
{
 ^
./Libraries/SocketLib/Telnet.cpp:63:46: warning: code should be clang-formatted [-Wclang-format-violations]
    // just buffer the data on the connection
                                             ^
./Libraries/SocketLib/Telnet.cpp:64:23: warning: code should be clang-formatted [-Wclang-format-violations]
    p_conn.BufferData( p_string.data(), (int)p_string.size() );
                      ^
./Libraries/SocketLib/Telnet.cpp:64:61: warning: code should be clang-formatted [-Wclang-format-violations]
    p_conn.BufferData( p_string.data(), (int)p_string.size() );
                                                            ^
./Libraries/SocketLib/Telnet.cpp:65:2: warning: code should be clang-formatted [-Wclang-format-violations]
}
 ^
./Libraries/SocketLib/Telnet.cpp:68:2: warning: code should be clang-formatted [-Wclang-format-violations]
}   // end namespace SocketLib
 ^
./Libraries/SocketLib/Connection.h:8:63: warning: code should be clang-formatted [-Wclang-format-violations]
//                the socket must be set to non-blocking mode.
                                                              ^
./Libraries/SocketLib/Connection.h:14:1: warning: code should be clang-formatted [-Wclang-format-violations]
#include <stack>
^
./Libraries/SocketLib/Connection.h:20:20: warning: code should be clang-formatted [-Wclang-format-violations]
namespace SocketLib
                   ^
./Libraries/SocketLib/Connection.h:27:9: warning: code should be clang-formatted [-Wclang-format-violations]
template< class protocol >
        ^
./Libraries/SocketLib/Connection.h:27:10: warning: code should be clang-formatted [-Wclang-format-violations]
template< class protocol >
         ^
./Libraries/SocketLib/Connection.h:27:25: warning: code should be clang-formatted [-Wclang-format-violations]
template< class protocol >
                        ^
./Libraries/SocketLib/Connection.h:27:27: warning: code should be clang-formatted [-Wclang-format-violations]
template< class protocol >
                          ^
./Libraries/SocketLib/Connection.h:28:37: warning: code should be clang-formatted [-Wclang-format-violations]
class Connection : public DataSocket
                                    ^
./Libraries/SocketLib/Connection.h:31:8: warning: code should be clang-formatted [-Wclang-format-violations]
public:
       ^
./Libraries/SocketLib/Connection.h:32:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/Connection.h:33:79: warning: code should be clang-formatted [-Wclang-format-violations]
    // Constructors. One constructs a normal connection, and the other accepts
                                                                              ^
./Libraries/SocketLib/Connection.h:34:62: warning: code should be clang-formatted [-Wclang-format-violations]
    // a DataSocket to use as a "template" for the connection
                                                             ^
./Libraries/SocketLib/Connection.h:35:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/Connection.h:36:18: warning: code should be clang-formatted [-Wclang-format-violations]
    Connection();
                 ^
./Libraries/SocketLib/Connection.h:37:16: warning: code should be clang-formatted [-Wclang-format-violations]
    Connection( DataSocket& p_socket );
               ^
./Libraries/SocketLib/Connection.h:37:27: warning: code should be clang-formatted [-Wclang-format-violations]
    Connection( DataSocket& p_socket );
                          ^
./Libraries/SocketLib/Connection.h:37:28: warning: code should be clang-formatted [-Wclang-format-violations]
    Connection( DataSocket& p_socket );
                           ^
./Libraries/SocketLib/Connection.h:37:37: warning: code should be clang-formatted [-Wclang-format-violations]
    Connection( DataSocket& p_socket );
                                    ^
./Libraries/SocketLib/Connection.h:39:11: warning: code should be clang-formatted [-Wclang-format-violations]
protected:
          ^
./Libraries/SocketLib/Connection.h:40:23: warning: code should be clang-formatted [-Wclang-format-violations]
    void Initialize();
                      ^
./Libraries/SocketLib/Connection.h:43:8: warning: code should be clang-formatted [-Wclang-format-violations]
public:
       ^
./Libraries/SocketLib/Connection.h:45:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/Connection.h:46:75: warning: code should be clang-formatted [-Wclang-format-violations]
    // This gets the amount of time that has passed, in seconds, since the
                                                                          ^
./Libraries/SocketLib/Connection.h:47:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // last time data was successfully sent, if there is data still queued,
                                                                           ^
./Libraries/SocketLib/Connection.h:48:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // or 0 if there is no data queued. This allows the server to check for
                                                                           ^
./Libraries/SocketLib/Connection.h:49:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // deadlocked clients (ie: a client crashed and is not receiving data).
                                                                           ^
./Libraries/SocketLib/Connection.h:50:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/Connection.h:51:46: warning: code should be clang-formatted [-Wclang-format-violations]
    BasicLib::sint64 GetLastSendTime() const;
                                             ^
./Libraries/SocketLib/Connection.h:53:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/Connection.h:54:72: warning: code should be clang-formatted [-Wclang-format-violations]
    // Gets the amount of time in seconds since data was last received.
                                                                       ^
./Libraries/SocketLib/Connection.h:55:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/Connection.h:56:55: warning: code should be clang-formatted [-Wclang-format-violations]
    inline BasicLib::sint64 GetLastReceiveTime() const
                                                      ^
./Libraries/SocketLib/Connection.h:57:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/Connection.h:58:34: warning: code should be clang-formatted [-Wclang-format-violations]
        return m_lastReceiveTime;
                                 ^
./Libraries/SocketLib/Connection.h:59:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }
     ^
./Libraries/SocketLib/Connection.h:62:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/Connection.h:63:74: warning: code should be clang-formatted [-Wclang-format-violations]
    // This "closes" the connection. This just sets a boolean telling the
                                                                         ^
./Libraries/SocketLib/Connection.h:64:71: warning: code should be clang-formatted [-Wclang-format-violations]
    // connection that it should be closed when the connection manager
                                                                      ^
./Libraries/SocketLib/Connection.h:65:19: warning: code should be clang-formatted [-Wclang-format-violations]
    // gets to it.
                  ^
./Libraries/SocketLib/Connection.h:66:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/Connection.h:67:24: warning: code should be clang-formatted [-Wclang-format-violations]
    inline void Close()     { m_closed = true; }
                       ^
./Libraries/SocketLib/Connection.h:67:49: warning: code should be clang-formatted [-Wclang-format-violations]
    inline void Close()     { m_closed = true; }
                                                ^
./Libraries/SocketLib/Connection.h:69:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/Connection.h:70:53: warning: code should be clang-formatted [-Wclang-format-violations]
    // This physically closes the underlying socket.
                                                    ^
./Libraries/SocketLib/Connection.h:71:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/Connection.h:72:30: warning: code should be clang-formatted [-Wclang-format-violations]
    inline void CloseSocket() 
                             ^
./Libraries/SocketLib/Connection.h:73:6: warning: code should be clang-formatted [-Wclang-format-violations]
    { 
     ^
./Libraries/SocketLib/Connection.h:74:29: warning: code should be clang-formatted [-Wclang-format-violations]
        DataSocket::Close(); 
                            ^
./Libraries/SocketLib/Connection.h:76:76: warning: code should be clang-formatted [-Wclang-format-violations]
        // tell the top handler (if it exists) that the connection has left
                                                                           ^
./Libraries/SocketLib/Connection.h:77:22: warning: code should be clang-formatted [-Wclang-format-violations]
        // that state
                     ^
./Libraries/SocketLib/Connection.h:78:25: warning: code should be clang-formatted [-Wclang-format-violations]
        ClearHandlers();
                        ^
./Libraries/SocketLib/Connection.h:79:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }
     ^
./Libraries/SocketLib/Connection.h:81:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/Connection.h:82:46: warning: code should be clang-formatted [-Wclang-format-violations]
    // This puts data into the sending queue.
                                             ^
./Libraries/SocketLib/Connection.h:83:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/Connection.h:84:21: warning: code should be clang-formatted [-Wclang-format-violations]
    void BufferData( const char* p_buffer, int p_size );
                    ^
./Libraries/SocketLib/Connection.h:84:32: warning: code should be clang-formatted [-Wclang-format-violations]
    void BufferData( const char* p_buffer, int p_size );
                               ^
./Libraries/SocketLib/Connection.h:84:33: warning: code should be clang-formatted [-Wclang-format-violations]
    void BufferData( const char* p_buffer, int p_size );
                                ^
./Libraries/SocketLib/Connection.h:84:54: warning: code should be clang-formatted [-Wclang-format-violations]
    void BufferData( const char* p_buffer, int p_size );
                                                     ^
./Libraries/SocketLib/Connection.h:84:57: warning: code should be clang-formatted [-Wclang-format-violations]
    void BufferData( const char* p_buffer, int p_size );
                                                        ^
./Libraries/SocketLib/Connection.h:86:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/Connection.h:87:50: warning: code should be clang-formatted [-Wclang-format-violations]
    // This sends the contents of the send buffer
                                                 ^
./Libraries/SocketLib/Connection.h:88:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/Connection.h:89:23: warning: code should be clang-formatted [-Wclang-format-violations]
    void SendBuffer();
                      ^
./Libraries/SocketLib/Connection.h:91:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/Connection.h:92:78: warning: code should be clang-formatted [-Wclang-format-violations]
    // This receives a buffer of data, and sends it off to the protocol to be
                                                                             ^
./Libraries/SocketLib/Connection.h:93:19: warning: code should be clang-formatted [-Wclang-format-violations]
    // translated.
                  ^
./Libraries/SocketLib/Connection.h:94:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/Connection.h:95:20: warning: code should be clang-formatted [-Wclang-format-violations]
    void Receive();
                   ^
./Libraries/SocketLib/Connection.h:98:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/Connection.h:99:69: warning: code should be clang-formatted [-Wclang-format-violations]
    // This gets the receiving datarate for the socket, in bytes per
                                                                    ^
./Libraries/SocketLib/Connection.h:100:53: warning: code should be clang-formatted [-Wclang-format-violations]
    // second, calculated over the previous interval
                                                    ^
./Libraries/SocketLib/Connection.h:101:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/Connection.h:102:35: warning: code should be clang-formatted [-Wclang-format-violations]
    inline int GetDataRate() const
                                  ^
./Libraries/SocketLib/Connection.h:103:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/Connection.h:104:31: warning: code should be clang-formatted [-Wclang-format-violations]
        return m_lastdatarate;
                              ^
./Libraries/SocketLib/Connection.h:105:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }
     ^
./Libraries/SocketLib/Connection.h:107:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/Connection.h:108:77: warning: code should be clang-formatted [-Wclang-format-violations]
    // This gets the current receiving datarate for the socket, in bytes per
                                                                            ^
./Libraries/SocketLib/Connection.h:109:15: warning: code should be clang-formatted [-Wclang-format-violations]
    // second.
              ^
./Libraries/SocketLib/Connection.h:110:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/Connection.h:111:42: warning: code should be clang-formatted [-Wclang-format-violations]
    inline int GetCurrentDataRate() const
                                         ^
./Libraries/SocketLib/Connection.h:112:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/Connection.h:113:39: warning: code should be clang-formatted [-Wclang-format-violations]
        return m_datarate / TIMECHUNK;
                                      ^
./Libraries/SocketLib/Connection.h:114:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }
     ^
./Libraries/SocketLib/Connection.h:116:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/Connection.h:117:59: warning: code should be clang-formatted [-Wclang-format-violations]
    // Gets the amount of bytes within the sending buffer.
                                                          ^
./Libraries/SocketLib/Connection.h:118:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/Connection.h:119:40: warning: code should be clang-formatted [-Wclang-format-violations]
    inline int GetBufferedBytes() const
                                       ^
./Libraries/SocketLib/Connection.h:120:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/Connection.h:121:41: warning: code should be clang-formatted [-Wclang-format-violations]
        return (int)m_sendbuffer.size();
                                        ^
./Libraries/SocketLib/Connection.h:122:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }
     ^
./Libraries/SocketLib/Connection.h:124:52: warning: code should be clang-formatted [-Wclang-format-violations]
    inline BasicLib::sint64 GetCreationTime() const
                                                   ^
./Libraries/SocketLib/Connection.h:125:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/Connection.h:126:31: warning: code should be clang-formatted [-Wclang-format-violations]
        return m_creationtime;
                              ^
./Libraries/SocketLib/Connection.h:127:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }
     ^
./Libraries/SocketLib/Connection.h:129:20: warning: code should be clang-formatted [-Wclang-format-violations]
    inline protocol& Protocol()         { return m_protocol; }
                   ^
./Libraries/SocketLib/Connection.h:129:21: warning: code should be clang-formatted [-Wclang-format-violations]
    inline protocol& Protocol()         { return m_protocol; }
                    ^
./Libraries/SocketLib/Connection.h:129:32: warning: code should be clang-formatted [-Wclang-format-violations]
    inline protocol& Protocol()         { return m_protocol; }
                               ^
./Libraries/SocketLib/Connection.h:129:63: warning: code should be clang-formatted [-Wclang-format-violations]
    inline protocol& Protocol()         { return m_protocol; }
                                                              ^
./Libraries/SocketLib/Connection.h:130:25: warning: code should be clang-formatted [-Wclang-format-violations]
    inline bool Closed()                { return m_closed; }
                        ^
./Libraries/SocketLib/Connection.h:130:61: warning: code should be clang-formatted [-Wclang-format-violations]
    inline bool Closed()                { return m_closed; }
                                                            ^
./Libraries/SocketLib/Connection.h:132:31: warning: code should be clang-formatted [-Wclang-format-violations]
    inline void SwitchHandler( typename protocol::handler* p_handler )
                              ^
./Libraries/SocketLib/Connection.h:132:58: warning: code should be clang-formatted [-Wclang-format-violations]
    inline void SwitchHandler( typename protocol::handler* p_handler )
                                                         ^
./Libraries/SocketLib/Connection.h:132:59: warning: code should be clang-formatted [-Wclang-format-violations]
    inline void SwitchHandler( typename protocol::handler* p_handler )
                                                          ^
./Libraries/SocketLib/Connection.h:132:69: warning: code should be clang-formatted [-Wclang-format-violations]
    inline void SwitchHandler( typename protocol::handler* p_handler )
                                                                    ^
./Libraries/SocketLib/Connection.h:132:71: warning: code should be clang-formatted [-Wclang-format-violations]
    inline void SwitchHandler( typename protocol::handler* p_handler )
                                                                      ^
./Libraries/SocketLib/Connection.h:133:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/Connection.h:134:11: warning: code should be clang-formatted [-Wclang-format-violations]
        if( Handler() )
          ^
./Libraries/SocketLib/Connection.h:134:12: warning: code should be clang-formatted [-Wclang-format-violations]
        if( Handler() )
           ^
./Libraries/SocketLib/Connection.h:134:22: warning: code should be clang-formatted [-Wclang-format-violations]
        if( Handler() )
                     ^
./Libraries/SocketLib/Connection.h:134:24: warning: code should be clang-formatted [-Wclang-format-violations]
        if( Handler() )
                       ^
./Libraries/SocketLib/Connection.h:135:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/Connection.h:136:32: warning: code should be clang-formatted [-Wclang-format-violations]
            Handler()->Leave();     // leave the current state if it exists
                               ^
./Libraries/SocketLib/Connection.h:136:76: warning: code should be clang-formatted [-Wclang-format-violations]
            Handler()->Leave();     // leave the current state if it exists
                                                                           ^
./Libraries/SocketLib/Connection.h:137:30: warning: code should be clang-formatted [-Wclang-format-violations]
            delete Handler();       // delete state
                             ^
./Libraries/SocketLib/Connection.h:137:52: warning: code should be clang-formatted [-Wclang-format-violations]
            delete Handler();       // delete state
                                                   ^
./Libraries/SocketLib/Connection.h:138:34: warning: code should be clang-formatted [-Wclang-format-violations]
            m_handlerstack.pop();   // pop the pointer off
                                 ^
./Libraries/SocketLib/Connection.h:138:59: warning: code should be clang-formatted [-Wclang-format-violations]
            m_handlerstack.pop();   // pop the pointer off
                                                          ^
./Libraries/SocketLib/Connection.h:139:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/Connection.h:141:29: warning: code should be clang-formatted [-Wclang-format-violations]
        m_handlerstack.push( p_handler );
                            ^
./Libraries/SocketLib/Connection.h:141:39: warning: code should be clang-formatted [-Wclang-format-violations]
        m_handlerstack.push( p_handler );
                                      ^
./Libraries/SocketLib/Connection.h:141:42: warning: code should be clang-formatted [-Wclang-format-violations]
        m_handlerstack.push( p_handler );
                                         ^
./Libraries/SocketLib/Connection.h:142:28: warning: code should be clang-formatted [-Wclang-format-violations]
        p_handler->Enter();     // enter the new state
                           ^
./Libraries/SocketLib/Connection.h:142:55: warning: code should be clang-formatted [-Wclang-format-violations]
        p_handler->Enter();     // enter the new state
                                                      ^
./Libraries/SocketLib/Connection.h:143:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }
     ^
./Libraries/SocketLib/Connection.h:145:28: warning: code should be clang-formatted [-Wclang-format-violations]
    inline void AddHandler( typename protocol::handler* p_handler )
                           ^
./Libraries/SocketLib/Connection.h:145:55: warning: code should be clang-formatted [-Wclang-format-violations]
    inline void AddHandler( typename protocol::handler* p_handler )
                                                      ^
./Libraries/SocketLib/Connection.h:145:56: warning: code should be clang-formatted [-Wclang-format-violations]
    inline void AddHandler( typename protocol::handler* p_handler )
                                                       ^
./Libraries/SocketLib/Connection.h:145:66: warning: code should be clang-formatted [-Wclang-format-violations]
    inline void AddHandler( typename protocol::handler* p_handler )
                                                                 ^
./Libraries/SocketLib/Connection.h:145:68: warning: code should be clang-formatted [-Wclang-format-violations]
    inline void AddHandler( typename protocol::handler* p_handler )
                                                                   ^
./Libraries/SocketLib/Connection.h:146:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/Connection.h:147:11: warning: code should be clang-formatted [-Wclang-format-violations]
        if( Handler() )
          ^
./Libraries/SocketLib/Connection.h:147:12: warning: code should be clang-formatted [-Wclang-format-violations]
        if( Handler() )
           ^
./Libraries/SocketLib/Connection.h:147:22: warning: code should be clang-formatted [-Wclang-format-violations]
        if( Handler() )
                     ^
./Libraries/SocketLib/Connection.h:147:24: warning: code should be clang-formatted [-Wclang-format-violations]
        if( Handler() )
                       ^
./Libraries/SocketLib/Connection.h:148:72: warning: code should be clang-formatted [-Wclang-format-violations]
            Handler()->Leave(); // leave the current state if it exists
                                                                       ^
./Libraries/SocketLib/Connection.h:149:29: warning: code should be clang-formatted [-Wclang-format-violations]
        m_handlerstack.push( p_handler );
                            ^
./Libraries/SocketLib/Connection.h:149:39: warning: code should be clang-formatted [-Wclang-format-violations]
        m_handlerstack.push( p_handler );
                                      ^
./Libraries/SocketLib/Connection.h:149:42: warning: code should be clang-formatted [-Wclang-format-violations]
        m_handlerstack.push( p_handler );
                                         ^
./Libraries/SocketLib/Connection.h:150:28: warning: code should be clang-formatted [-Wclang-format-violations]
        p_handler->Enter();     // enter the new state
                           ^
./Libraries/SocketLib/Connection.h:150:55: warning: code should be clang-formatted [-Wclang-format-violations]
        p_handler->Enter();     // enter the new state
                                                      ^
./Libraries/SocketLib/Connection.h:151:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }
     ^
./Libraries/SocketLib/Connection.h:153:32: warning: code should be clang-formatted [-Wclang-format-violations]
    inline void RemoveHandler()
                               ^
./Libraries/SocketLib/Connection.h:154:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/Connection.h:155:28: warning: code should be clang-formatted [-Wclang-format-violations]
        Handler()->Leave();     // leave current state
                           ^
./Libraries/SocketLib/Connection.h:155:55: warning: code should be clang-formatted [-Wclang-format-violations]
        Handler()->Leave();     // leave current state
                                                      ^
./Libraries/SocketLib/Connection.h:156:26: warning: code should be clang-formatted [-Wclang-format-violations]
        delete Handler();       // delete state
                         ^
./Libraries/SocketLib/Connection.h:156:48: warning: code should be clang-formatted [-Wclang-format-violations]
        delete Handler();       // delete state
                                               ^
./Libraries/SocketLib/Connection.h:157:30: warning: code should be clang-formatted [-Wclang-format-violations]
        m_handlerstack.pop();   // pop the pointer off
                             ^
./Libraries/SocketLib/Connection.h:157:55: warning: code should be clang-formatted [-Wclang-format-violations]
        m_handlerstack.pop();   // pop the pointer off
                                                      ^
./Libraries/SocketLib/Connection.h:158:11: warning: code should be clang-formatted [-Wclang-format-violations]
        if( Handler() )         // if old state exists, 
          ^
./Libraries/SocketLib/Connection.h:158:12: warning: code should be clang-formatted [-Wclang-format-violations]
        if( Handler() )         // if old state exists, 
           ^
./Libraries/SocketLib/Connection.h:158:22: warning: code should be clang-formatted [-Wclang-format-violations]
        if( Handler() )         // if old state exists, 
                     ^
./Libraries/SocketLib/Connection.h:158:24: warning: code should be clang-formatted [-Wclang-format-violations]
        if( Handler() )         // if old state exists, 
                       ^
./Libraries/SocketLib/Connection.h:158:56: warning: code should be clang-formatted [-Wclang-format-violations]
        if( Handler() )         // if old state exists, 
                                                       ^
./Libraries/SocketLib/Connection.h:159:69: warning: code should be clang-formatted [-Wclang-format-violations]
            Handler()->Enter(); // tell it connection has re-entered
                                                                    ^
./Libraries/SocketLib/Connection.h:160:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }
     ^
./Libraries/SocketLib/Connection.h:163:38: warning: code should be clang-formatted [-Wclang-format-violations]
    inline typename protocol::handler* Handler()
                                     ^
./Libraries/SocketLib/Connection.h:163:39: warning: code should be clang-formatted [-Wclang-format-violations]
    inline typename protocol::handler* Handler()
                                      ^
./Libraries/SocketLib/Connection.h:163:49: warning: code should be clang-formatted [-Wclang-format-violations]
    inline typename protocol::handler* Handler()
                                                ^
./Libraries/SocketLib/Connection.h:164:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/Connection.h:165:11: warning: code should be clang-formatted [-Wclang-format-violations]
        if( m_handlerstack.size() == 0 )
          ^
./Libraries/SocketLib/Connection.h:165:12: warning: code should be clang-formatted [-Wclang-format-violations]
        if( m_handlerstack.size() == 0 )
           ^
./Libraries/SocketLib/Connection.h:165:39: warning: code should be clang-formatted [-Wclang-format-violations]
        if( m_handlerstack.size() == 0 )
                                      ^
./Libraries/SocketLib/Connection.h:165:41: warning: code should be clang-formatted [-Wclang-format-violations]
        if( m_handlerstack.size() == 0 )
                                        ^
./Libraries/SocketLib/Connection.h:166:22: warning: code should be clang-formatted [-Wclang-format-violations]
            return 0;
                     ^
./Libraries/SocketLib/Connection.h:167:37: warning: code should be clang-formatted [-Wclang-format-violations]
        return m_handlerstack.top();
                                    ^
./Libraries/SocketLib/Connection.h:168:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }
     ^
./Libraries/SocketLib/Connection.h:171:25: warning: code should be clang-formatted [-Wclang-format-violations]
    void ClearHandlers()
                        ^
./Libraries/SocketLib/Connection.h:172:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/Connection.h:173:37: warning: code should be clang-formatted [-Wclang-format-violations]
        // leave the current handler
                                    ^
./Libraries/SocketLib/Connection.h:174:11: warning: code should be clang-formatted [-Wclang-format-violations]
        if( Handler() )  
          ^
./Libraries/SocketLib/Connection.h:174:12: warning: code should be clang-formatted [-Wclang-format-violations]
        if( Handler() )  
           ^
./Libraries/SocketLib/Connection.h:174:22: warning: code should be clang-formatted [-Wclang-format-violations]
        if( Handler() )  
                     ^
./Libraries/SocketLib/Connection.h:174:24: warning: code should be clang-formatted [-Wclang-format-violations]
        if( Handler() )  
                       ^
./Libraries/SocketLib/Connection.h:175:32: warning: code should be clang-formatted [-Wclang-format-violations]
            Handler()->Leave();
                               ^
./Libraries/SocketLib/Connection.h:177:48: warning: code should be clang-formatted [-Wclang-format-violations]
        // delete all the handlers on the stack
                                               ^
./Libraries/SocketLib/Connection.h:178:14: warning: code should be clang-formatted [-Wclang-format-violations]
        while( Handler() )
             ^
./Libraries/SocketLib/Connection.h:178:15: warning: code should be clang-formatted [-Wclang-format-violations]
        while( Handler() )
              ^
./Libraries/SocketLib/Connection.h:178:25: warning: code should be clang-formatted [-Wclang-format-violations]
        while( Handler() )
                        ^
./Libraries/SocketLib/Connection.h:178:27: warning: code should be clang-formatted [-Wclang-format-violations]
        while( Handler() )
                          ^
./Libraries/SocketLib/Connection.h:179:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/Connection.h:180:30: warning: code should be clang-formatted [-Wclang-format-violations]
            delete Handler();
                             ^
./Libraries/SocketLib/Connection.h:181:34: warning: code should be clang-formatted [-Wclang-format-violations]
            m_handlerstack.pop();
                                 ^
./Libraries/SocketLib/Connection.h:182:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/Connection.h:183:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }
     ^
./Libraries/SocketLib/Connection.h:187:11: warning: code should be clang-formatted [-Wclang-format-violations]
protected:
          ^
./Libraries/SocketLib/Connection.h:190:78: warning: code should be clang-formatted [-Wclang-format-violations]
    // This is the protocol object that will manage data when it is received.
                                                                             ^
./Libraries/SocketLib/Connection.h:191:25: warning: code should be clang-formatted [-Wclang-format-violations]
    protocol m_protocol;
                        ^
./Libraries/SocketLib/Connection.h:193:75: warning: code should be clang-formatted [-Wclang-format-violations]
    // This stack manages the current data handler. When data is received,
                                                                          ^
./Libraries/SocketLib/Connection.h:194:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // it is sent off to the protocol policy object, which in turn sends it
                                                                           ^
./Libraries/SocketLib/Connection.h:195:48: warning: code should be clang-formatted [-Wclang-format-violations]
    // to the handler on the top of this stack.
                                               ^
./Libraries/SocketLib/Connection.h:196:16: warning: code should be clang-formatted [-Wclang-format-violations]
    std::stack< typename protocol::handler* > m_handlerstack;
               ^
./Libraries/SocketLib/Connection.h:196:43: warning: code should be clang-formatted [-Wclang-format-violations]
    std::stack< typename protocol::handler* > m_handlerstack;
                                          ^
./Libraries/SocketLib/Connection.h:196:44: warning: code should be clang-formatted [-Wclang-format-violations]
    std::stack< typename protocol::handler* > m_handlerstack;
                                           ^
./Libraries/SocketLib/Connection.h:196:62: warning: code should be clang-formatted [-Wclang-format-violations]
    std::stack< typename protocol::handler* > m_handlerstack;
                                                             ^
./Libraries/SocketLib/Connection.h:198:67: warning: code should be clang-formatted [-Wclang-format-violations]
    // This buffer stores all the data to be sent at a later time.
                                                                  ^
./Libraries/SocketLib/Connection.h:199:30: warning: code should be clang-formatted [-Wclang-format-violations]
    std::string m_sendbuffer;
                             ^
./Libraries/SocketLib/Connection.h:201:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // This is the amount of data received during the current chunk of time
                                                                           ^
./Libraries/SocketLib/Connection.h:202:20: warning: code should be clang-formatted [-Wclang-format-violations]
    int m_datarate;
                   ^
./Libraries/SocketLib/Connection.h:204:77: warning: code should be clang-formatted [-Wclang-format-violations]
    // This is the amount of data that was received during the last chunk of
                                                                            ^
./Libraries/SocketLib/Connection.h:205:12: warning: code should be clang-formatted [-Wclang-format-violations]
    // time
           ^
./Libraries/SocketLib/Connection.h:206:24: warning: code should be clang-formatted [-Wclang-format-violations]
    int m_lastdatarate;
                       ^
./Libraries/SocketLib/Connection.h:208:75: warning: code should be clang-formatted [-Wclang-format-violations]
    // This represents the last time data was successfully received on the
                                                                          ^
./Libraries/SocketLib/Connection.h:209:31: warning: code should be clang-formatted [-Wclang-format-violations]
    // connection, in seconds.
                              ^
./Libraries/SocketLib/Connection.h:210:40: warning: code should be clang-formatted [-Wclang-format-violations]
    BasicLib::sint64 m_lastReceiveTime;
                                       ^
./Libraries/SocketLib/Connection.h:212:49: warning: code should be clang-formatted [-Wclang-format-violations]
    // The last time data was successfully sent.
                                                ^
./Libraries/SocketLib/Connection.h:213:37: warning: code should be clang-formatted [-Wclang-format-violations]
    BasicLib::sint64 m_lastSendTime;
                                    ^
./Libraries/SocketLib/Connection.h:215:64: warning: code should be clang-formatted [-Wclang-format-violations]
    // the time at which the connection was created; in seconds
                                                               ^
./Libraries/SocketLib/Connection.h:216:37: warning: code should be clang-formatted [-Wclang-format-violations]
    BasicLib::sint64 m_creationtime;
                                    ^
./Libraries/SocketLib/Connection.h:218:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // This boolean is used to determine if the send time should be checked 
                                                                           ^
./Libraries/SocketLib/Connection.h:219:79: warning: code should be clang-formatted [-Wclang-format-violations]
    // when the GetLastSendTime function is invoked. When false, it is safe to 
                                                                              ^
./Libraries/SocketLib/Connection.h:220:74: warning: code should be clang-formatted [-Wclang-format-violations]
    // assume that even if there is data in the queue, there have been no 
                                                                         ^
./Libraries/SocketLib/Connection.h:221:37: warning: code should be clang-formatted [-Wclang-format-violations]
    // problems sending it thus far.
                                    ^
./Libraries/SocketLib/Connection.h:222:26: warning: code should be clang-formatted [-Wclang-format-violations]
    bool m_checksendtime;
                         ^
./Libraries/SocketLib/Connection.h:224:31: warning: code should be clang-formatted [-Wclang-format-violations]
    char m_buffer[BUFFERSIZE];
                              ^
./Libraries/SocketLib/Connection.h:226:65: warning: code should be clang-formatted [-Wclang-format-violations]
    // determines whether or not the connection has been closed.
                                                                ^
./Libraries/SocketLib/Connection.h:228:3: warning: code should be clang-formatted [-Wclang-format-violations]
};
  ^
./Libraries/SocketLib/Connection.h:238:9: warning: code should be clang-formatted [-Wclang-format-violations]
template< class protocol >
        ^
./Libraries/SocketLib/Connection.h:238:10: warning: code should be clang-formatted [-Wclang-format-violations]
template< class protocol >
         ^
./Libraries/SocketLib/Connection.h:238:25: warning: code should be clang-formatted [-Wclang-format-violations]
template< class protocol >
                        ^
./Libraries/SocketLib/Connection.h:238:27: warning: code should be clang-formatted [-Wclang-format-violations]
template< class protocol >
                          ^
./Libraries/SocketLib/Connection.h:239:35: warning: code should be clang-formatted [-Wclang-format-violations]
Connection<protocol>::Connection()
                                  ^
./Libraries/SocketLib/Connection.h:240:2: warning: code should be clang-formatted [-Wclang-format-violations]
{
 ^
./Libraries/SocketLib/Connection.h:241:18: warning: code should be clang-formatted [-Wclang-format-violations]
    Initialize();
                 ^
./Libraries/SocketLib/Connection.h:244:9: warning: code should be clang-formatted [-Wclang-format-violations]
template< class protocol >
        ^
./Libraries/SocketLib/Connection.h:244:10: warning: code should be clang-formatted [-Wclang-format-violations]
template< class protocol >
         ^
./Libraries/SocketLib/Connection.h:244:25: warning: code should be clang-formatted [-Wclang-format-violations]
template< class protocol >
                        ^
./Libraries/SocketLib/Connection.h:245:34: warning: code should be clang-formatted [-Wclang-format-violations]
Connection<protocol>::Connection( DataSocket& p_socket )
                                 ^
./Libraries/SocketLib/Connection.h:245:45: warning: code should be clang-formatted [-Wclang-format-violations]
Connection<protocol>::Connection( DataSocket& p_socket )
                                            ^
./Libraries/SocketLib/Connection.h:245:46: warning: code should be clang-formatted [-Wclang-format-violations]
Connection<protocol>::Connection( DataSocket& p_socket )
                                             ^
./Libraries/SocketLib/Connection.h:245:55: warning: code should be clang-formatted [-Wclang-format-violations]
Connection<protocol>::Connection( DataSocket& p_socket )
                                                      ^
./Libraries/SocketLib/Connection.h:245:57: warning: code should be clang-formatted [-Wclang-format-violations]
Connection<protocol>::Connection( DataSocket& p_socket )
                                                        ^
./Libraries/SocketLib/Connection.h:246:18: warning: code should be clang-formatted [-Wclang-format-violations]
    : DataSocket( p_socket )
                 ^
./Libraries/SocketLib/Connection.h:246:27: warning: code should be clang-formatted [-Wclang-format-violations]
    : DataSocket( p_socket )
                          ^
./Libraries/SocketLib/Connection.h:246:29: warning: code should be clang-formatted [-Wclang-format-violations]
    : DataSocket( p_socket )
                            ^
./Libraries/SocketLib/Connection.h:247:2: warning: code should be clang-formatted [-Wclang-format-violations]
{
 ^
./Libraries/SocketLib/Connection.h:249:2: warning: code should be clang-formatted [-Wclang-format-violations]
}
 ^
./Libraries/SocketLib/Connection.h:252:9: warning: code should be clang-formatted [-Wclang-format-violations]
template< class protocol >
        ^
./Libraries/SocketLib/Connection.h:252:10: warning: code should be clang-formatted [-Wclang-format-violations]
template< class protocol >
         ^
./Libraries/SocketLib/Connection.h:252:25: warning: code should be clang-formatted [-Wclang-format-violations]
template< class protocol >
                        ^
./Libraries/SocketLib/Connection.h:252:27: warning: code should be clang-formatted [-Wclang-format-violations]
template< class protocol >
                          ^
./Libraries/SocketLib/Connection.h:253:40: warning: code should be clang-formatted [-Wclang-format-violations]
void Connection<protocol>::Initialize()
                                       ^
./Libraries/SocketLib/Connection.h:254:2: warning: code should be clang-formatted [-Wclang-format-violations]
{
 ^
./Libraries/SocketLib/Connection.h:255:20: warning: code should be clang-formatted [-Wclang-format-violations]
    m_datarate = 0;
                   ^
./Libraries/SocketLib/Connection.h:256:24: warning: code should be clang-formatted [-Wclang-format-violations]
    m_lastdatarate = 0;
                       ^
./Libraries/SocketLib/Connection.h:257:27: warning: code should be clang-formatted [-Wclang-format-violations]
    m_lastReceiveTime = 0;
                          ^
./Libraries/SocketLib/Connection.h:258:24: warning: code should be clang-formatted [-Wclang-format-violations]
    m_lastSendTime = 0;
                       ^
./Libraries/SocketLib/Connection.h:259:29: warning: code should be clang-formatted [-Wclang-format-violations]
    m_checksendtime = false;
                            ^
./Libraries/SocketLib/Connection.h:260:44: warning: code should be clang-formatted [-Wclang-format-violations]
    m_creationtime = BasicLib::GetTimeMS();
                                           ^
./Libraries/SocketLib/Connection.h:270:9: warning: code should be clang-formatted [-Wclang-format-violations]
template< class protocol >
        ^
./Libraries/SocketLib/Connection.h:270:10: warning: code should be clang-formatted [-Wclang-format-violations]
template< class protocol >
         ^
./Libraries/SocketLib/Connection.h:270:25: warning: code should be clang-formatted [-Wclang-format-violations]
template< class protocol >
                        ^
./Libraries/SocketLib/Connection.h:271:63: warning: code should be clang-formatted [-Wclang-format-violations]
BasicLib::sint64 Connection<protocol>::GetLastSendTime() const
                                                              ^
./Libraries/SocketLib/Connection.h:272:2: warning: code should be clang-formatted [-Wclang-format-violations]
{
 ^
./Libraries/SocketLib/Connection.h:273:7: warning: code should be clang-formatted [-Wclang-format-violations]
    if( m_checksendtime )
      ^
./Libraries/SocketLib/Connection.h:273:8: warning: code should be clang-formatted [-Wclang-format-violations]
    if( m_checksendtime )
       ^
./Libraries/SocketLib/Connection.h:273:24: warning: code should be clang-formatted [-Wclang-format-violations]
    if( m_checksendtime )
                       ^
./Libraries/SocketLib/Connection.h:273:26: warning: code should be clang-formatted [-Wclang-format-violations]
    if( m_checksendtime )
                         ^
./Libraries/SocketLib/Connection.h:274:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/Connection.h:275:54: warning: code should be clang-formatted [-Wclang-format-violations]
        return BasicLib::GetTimeS() - m_lastSendTime;
                                                     ^
./Libraries/SocketLib/Connection.h:276:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }
     ^
./Libraries/SocketLib/Connection.h:279:2: warning: code should be clang-formatted [-Wclang-format-violations]
}
 ^
./Libraries/SocketLib/Connection.h:285:9: warning: code should be clang-formatted [-Wclang-format-violations]
template< class protocol >
        ^
./Libraries/SocketLib/Connection.h:285:10: warning: code should be clang-formatted [-Wclang-format-violations]
template< class protocol >
         ^
./Libraries/SocketLib/Connection.h:285:25: warning: code should be clang-formatted [-Wclang-format-violations]
template< class protocol >
                        ^
./Libraries/SocketLib/Connection.h:286:39: warning: code should be clang-formatted [-Wclang-format-violations]
void Connection<protocol>::BufferData( const char* p_buffer, int p_size )
                                      ^
./Libraries/SocketLib/Connection.h:286:50: warning: code should be clang-formatted [-Wclang-format-violations]
void Connection<protocol>::BufferData( const char* p_buffer, int p_size )
                                                 ^
./Libraries/SocketLib/Connection.h:286:51: warning: code should be clang-formatted [-Wclang-format-violations]
void Connection<protocol>::BufferData( const char* p_buffer, int p_size )
                                                  ^
./Libraries/SocketLib/Connection.h:286:72: warning: code should be clang-formatted [-Wclang-format-violations]
void Connection<protocol>::BufferData( const char* p_buffer, int p_size )
                                                                       ^
./Libraries/SocketLib/Connection.h:286:74: warning: code should be clang-formatted [-Wclang-format-violations]
void Connection<protocol>::BufferData( const char* p_buffer, int p_size )
                                                                         ^
./Libraries/SocketLib/Connection.h:287:2: warning: code should be clang-formatted [-Wclang-format-violations]
{
 ^
./Libraries/SocketLib/Connection.h:288:25: warning: code should be clang-formatted [-Wclang-format-violations]
    m_sendbuffer.append( p_buffer, p_size );
                        ^
./Libraries/SocketLib/Connection.h:288:42: warning: code should be clang-formatted [-Wclang-format-violations]
    m_sendbuffer.append( p_buffer, p_size );
                                         ^
./Libraries/SocketLib/Connection.h:294:9: warning: code should be clang-formatted [-Wclang-format-violations]
template< class protocol >
        ^
./Libraries/SocketLib/Connection.h:294:10: warning: code should be clang-formatted [-Wclang-format-violations]
template< class protocol >
         ^
./Libraries/SocketLib/Connection.h:294:25: warning: code should be clang-formatted [-Wclang-format-violations]
template< class protocol >
                        ^
./Libraries/SocketLib/Connection.h:294:27: warning: code should be clang-formatted [-Wclang-format-violations]
template< class protocol >
                          ^
./Libraries/SocketLib/Connection.h:295:40: warning: code should be clang-formatted [-Wclang-format-violations]
void Connection<protocol>::SendBuffer()
                                       ^
./Libraries/SocketLib/Connection.h:296:2: warning: code should be clang-formatted [-Wclang-format-violations]
{
 ^
./Libraries/SocketLib/Connection.h:297:7: warning: code should be clang-formatted [-Wclang-format-violations]
    if( m_sendbuffer.size() > 0 )
      ^
./Libraries/SocketLib/Connection.h:297:8: warning: code should be clang-formatted [-Wclang-format-violations]
    if( m_sendbuffer.size() > 0 )
       ^
./Libraries/SocketLib/Connection.h:297:32: warning: code should be clang-formatted [-Wclang-format-violations]
    if( m_sendbuffer.size() > 0 )
                               ^
./Libraries/SocketLib/Connection.h:297:34: warning: code should be clang-formatted [-Wclang-format-violations]
    if( m_sendbuffer.size() > 0 )
                                 ^
./Libraries/SocketLib/Connection.h:298:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/Connection.h:299:73: warning: code should be clang-formatted [-Wclang-format-violations]
        // send the data, and erase as much as was sent from the buffer.
                                                                        ^
./Libraries/SocketLib/Connection.h:300:25: warning: code should be clang-formatted [-Wclang-format-violations]
        int sent = Send( m_sendbuffer.data(), (int)m_sendbuffer.size() );
                        ^
./Libraries/SocketLib/Connection.h:300:71: warning: code should be clang-formatted [-Wclang-format-violations]
        int sent = Send( m_sendbuffer.data(), (int)m_sendbuffer.size() );
                                                                      ^
./Libraries/SocketLib/Connection.h:300:74: warning: code should be clang-formatted [-Wclang-format-violations]
        int sent = Send( m_sendbuffer.data(), (int)m_sendbuffer.size() );
                                                                         ^
./Libraries/SocketLib/Connection.h:301:28: warning: code should be clang-formatted [-Wclang-format-violations]
        m_sendbuffer.erase( 0, sent );
                           ^
./Libraries/SocketLib/Connection.h:301:36: warning: code should be clang-formatted [-Wclang-format-violations]
        m_sendbuffer.erase( 0, sent );
                                   ^
./Libraries/SocketLib/Connection.h:301:39: warning: code should be clang-formatted [-Wclang-format-violations]
        m_sendbuffer.erase( 0, sent );
                                      ^
./Libraries/SocketLib/Connection.h:303:11: warning: code should be clang-formatted [-Wclang-format-violations]
        if( sent > 0 )
          ^
./Libraries/SocketLib/Connection.h:303:12: warning: code should be clang-formatted [-Wclang-format-violations]
        if( sent > 0 )
           ^
./Libraries/SocketLib/Connection.h:303:21: warning: code should be clang-formatted [-Wclang-format-violations]
        if( sent > 0 )
                    ^
./Libraries/SocketLib/Connection.h:303:23: warning: code should be clang-formatted [-Wclang-format-violations]
        if( sent > 0 )
                      ^
./Libraries/SocketLib/Connection.h:304:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/Connection.h:305:70: warning: code should be clang-formatted [-Wclang-format-violations]
            // since data was sent successfully, reset the send time.
                                                                     ^
./Libraries/SocketLib/Connection.h:306:51: warning: code should be clang-formatted [-Wclang-format-violations]
            m_lastSendTime = BasicLib::GetTimeS();
                                                  ^
./Libraries/SocketLib/Connection.h:307:37: warning: code should be clang-formatted [-Wclang-format-violations]
            m_checksendtime = false;
                                    ^
./Libraries/SocketLib/Connection.h:308:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/Connection.h:309:13: warning: code should be clang-formatted [-Wclang-format-violations]
        else
            ^
./Libraries/SocketLib/Connection.h:310:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/Connection.h:311:68: warning: code should be clang-formatted [-Wclang-format-violations]
            // no data was sent, so mark down that the sending time
                                                                   ^
./Libraries/SocketLib/Connection.h:312:69: warning: code should be clang-formatted [-Wclang-format-violations]
            // needs to be checked, to see if the socket is entering
                                                                    ^
./Libraries/SocketLib/Connection.h:313:31: warning: code should be clang-formatted [-Wclang-format-violations]
            // client deadlock
                              ^
./Libraries/SocketLib/Connection.h:314:15: warning: code should be clang-formatted [-Wclang-format-violations]
            if( !m_checksendtime )
              ^
./Libraries/SocketLib/Connection.h:314:16: warning: code should be clang-formatted [-Wclang-format-violations]
            if( !m_checksendtime )
               ^
./Libraries/SocketLib/Connection.h:314:33: warning: code should be clang-formatted [-Wclang-format-violations]
            if( !m_checksendtime )
                                ^
./Libraries/SocketLib/Connection.h:314:35: warning: code should be clang-formatted [-Wclang-format-violations]
            if( !m_checksendtime )
                                  ^
./Libraries/SocketLib/Connection.h:315:14: warning: code should be clang-formatted [-Wclang-format-violations]
            {
             ^
./Libraries/SocketLib/Connection.h:316:75: warning: code should be clang-formatted [-Wclang-format-violations]
                // if execution gets here, that means that this connection
                                                                          ^
./Libraries/SocketLib/Connection.h:317:72: warning: code should be clang-formatted [-Wclang-format-violations]
                // has previously not had any problems sending data, so
                                                                       ^
./Libraries/SocketLib/Connection.h:318:72: warning: code should be clang-formatted [-Wclang-format-violations]
                // mark down the time that the sending problem started.
                                                                       ^
./Libraries/SocketLib/Connection.h:319:78: warning: code should be clang-formatted [-Wclang-format-violations]
                // note that it may have started earlier, but since we didn't
                                                                             ^
./Libraries/SocketLib/Connection.h:320:78: warning: code should be clang-formatted [-Wclang-format-violations]
                // start sending data earlier, there really is no way to know
                                                                             ^
./Libraries/SocketLib/Connection.h:321:45: warning: code should be clang-formatted [-Wclang-format-violations]
                // for sure when it started.
                                            ^
./Libraries/SocketLib/Connection.h:322:40: warning: code should be clang-formatted [-Wclang-format-violations]
                m_checksendtime = true;
                                       ^
./Libraries/SocketLib/Connection.h:323:55: warning: code should be clang-formatted [-Wclang-format-violations]
                m_lastSendTime = BasicLib::GetTimeS();
                                                      ^
./Libraries/SocketLib/Connection.h:325:14: warning: code should be clang-formatted [-Wclang-format-violations]
            }
             ^
./Libraries/SocketLib/Connection.h:326:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }   // end no-data-sent check
         ^
./Libraries/SocketLib/Connection.h:326:38: warning: code should be clang-formatted [-Wclang-format-violations]
        }   // end no-data-sent check
                                     ^
./Libraries/SocketLib/Connection.h:328:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }   // end buffersize check
     ^
./Libraries/SocketLib/Connection.h:335:9: warning: code should be clang-formatted [-Wclang-format-violations]
template< class protocol >
        ^
./Libraries/SocketLib/Connection.h:335:10: warning: code should be clang-formatted [-Wclang-format-violations]
template< class protocol >
         ^
./Libraries/SocketLib/Connection.h:335:25: warning: code should be clang-formatted [-Wclang-format-violations]
template< class protocol >
                        ^
./Libraries/SocketLib/Connection.h:335:27: warning: code should be clang-formatted [-Wclang-format-violations]
template< class protocol >
                          ^
./Libraries/SocketLib/Connection.h:336:37: warning: code should be clang-formatted [-Wclang-format-violations]
void Connection<protocol>::Receive()
                                    ^
./Libraries/SocketLib/Connection.h:337:2: warning: code should be clang-formatted [-Wclang-format-violations]
{
 ^
./Libraries/SocketLib/Connection.h:338:24: warning: code should be clang-formatted [-Wclang-format-violations]
    // receive the data
                       ^
./Libraries/SocketLib/Connection.h:339:37: warning: code should be clang-formatted [-Wclang-format-violations]
    int bytes = DataSocket::Receive( m_buffer, BUFFERSIZE );
                                    ^
./Libraries/SocketLib/Connection.h:339:58: warning: code should be clang-formatted [-Wclang-format-violations]
    int bytes = DataSocket::Receive( m_buffer, BUFFERSIZE );
                                                         ^
./Libraries/SocketLib/Connection.h:339:61: warning: code should be clang-formatted [-Wclang-format-violations]
    int bytes = DataSocket::Receive( m_buffer, BUFFERSIZE );
                                                            ^
./Libraries/SocketLib/Connection.h:341:28: warning: code should be clang-formatted [-Wclang-format-violations]
    // get the current time
                           ^
./Libraries/SocketLib/Connection.h:342:47: warning: code should be clang-formatted [-Wclang-format-violations]
    BasicLib::sint64 t = BasicLib::GetTimeS();
                                              ^
./Libraries/SocketLib/Connection.h:344:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // check to see if we've reached the next X seconds of time (see Chapter 5)
                                                                               ^
./Libraries/SocketLib/Connection.h:345:38: warning: code should be clang-formatted [-Wclang-format-violations]
    // and if so, clear the datarate.
                                     ^
./Libraries/SocketLib/Connection.h:346:7: warning: code should be clang-formatted [-Wclang-format-violations]
    if( (m_lastReceiveTime / TIMECHUNK) != (t / TIMECHUNK) )
      ^
./Libraries/SocketLib/Connection.h:346:8: warning: code should be clang-formatted [-Wclang-format-violations]
    if( (m_lastReceiveTime / TIMECHUNK) != (t / TIMECHUNK) )
       ^
./Libraries/SocketLib/Connection.h:346:59: warning: code should be clang-formatted [-Wclang-format-violations]
    if( (m_lastReceiveTime / TIMECHUNK) != (t / TIMECHUNK) )
                                                          ^
./Libraries/SocketLib/Connection.h:346:61: warning: code should be clang-formatted [-Wclang-format-violations]
    if( (m_lastReceiveTime / TIMECHUNK) != (t / TIMECHUNK) )
                                                            ^
./Libraries/SocketLib/Connection.h:347:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/Connection.h:348:49: warning: code should be clang-formatted [-Wclang-format-violations]
        m_lastdatarate = m_datarate / TIMECHUNK;
                                                ^
./Libraries/SocketLib/Connection.h:349:24: warning: code should be clang-formatted [-Wclang-format-violations]
        m_datarate = 0;
                       ^
./Libraries/SocketLib/Connection.h:350:31: warning: code should be clang-formatted [-Wclang-format-violations]
        m_lastReceiveTime = t;
                              ^
./Libraries/SocketLib/Connection.h:351:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }
     ^
./Libraries/SocketLib/Connection.h:353:25: warning: code should be clang-formatted [-Wclang-format-violations]
    m_datarate += bytes;
                        ^
./Libraries/SocketLib/Connection.h:355:64: warning: code should be clang-formatted [-Wclang-format-violations]
    // tell the protocol policy object about the received data.
                                                               ^
./Libraries/SocketLib/Connection.h:356:26: warning: code should be clang-formatted [-Wclang-format-violations]
    m_protocol.Translate( *this, m_buffer, bytes );
                         ^
./Libraries/SocketLib/Connection.h:356:49: warning: code should be clang-formatted [-Wclang-format-violations]
    m_protocol.Translate( *this, m_buffer, bytes );
                                                ^
./Libraries/SocketLib/Connection.h:357:2: warning: code should be clang-formatted [-Wclang-format-violations]
}
 ^
./Libraries/SocketLib/Connection.h:360:2: warning: code should be clang-formatted [-Wclang-format-violations]
}   // end namespace socketlib
 ^
./Libraries/SocketLib/ConnectionHandler.h:5:62: warning: code should be clang-formatted [-Wclang-format-violations]
//                       data from a connection policy class.
                                                             ^
./Libraries/SocketLib/ConnectionHandler.h:11:1: warning: code should be clang-formatted [-Wclang-format-violations]
#include "SocketLibTypes.h"
^
./Libraries/SocketLib/ConnectionHandler.h:15:20: warning: code should be clang-formatted [-Wclang-format-violations]
namespace SocketLib
                   ^
./Libraries/SocketLib/ConnectionHandler.h:18:9: warning: code should be clang-formatted [-Wclang-format-violations]
template<typename protocol, typename command>
        ^
./Libraries/SocketLib/ConnectionHandler.h:18:46: warning: code should be clang-formatted [-Wclang-format-violations]
template<typename protocol, typename command>
                                             ^
./Libraries/SocketLib/ConnectionHandler.h:19:24: warning: code should be clang-formatted [-Wclang-format-violations]
class ConnectionHandler
                       ^
./Libraries/SocketLib/ConnectionHandler.h:22:8: warning: code should be clang-formatted [-Wclang-format-violations]
public:
       ^
./Libraries/SocketLib/ConnectionHandler.h:24:39: warning: code should be clang-formatted [-Wclang-format-violations]
    typedef Connection<protocol> conn;
                                      ^
./Libraries/SocketLib/ConnectionHandler.h:26:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/ConnectionHandler.h:27:56: warning: code should be clang-formatted [-Wclang-format-violations]
    //  Constructor, records pointer to the connection.
                                                       ^
./Libraries/SocketLib/ConnectionHandler.h:28:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/ConnectionHandler.h:29:23: warning: code should be clang-formatted [-Wclang-format-violations]
    ConnectionHandler( conn& p_conn ) : m_connection( &p_conn ) {}
                      ^
./Libraries/SocketLib/ConnectionHandler.h:29:28: warning: code should be clang-formatted [-Wclang-format-violations]
    ConnectionHandler( conn& p_conn ) : m_connection( &p_conn ) {}
                           ^
./Libraries/SocketLib/ConnectionHandler.h:29:29: warning: code should be clang-formatted [-Wclang-format-violations]
    ConnectionHandler( conn& p_conn ) : m_connection( &p_conn ) {}
                            ^
./Libraries/SocketLib/ConnectionHandler.h:29:36: warning: code should be clang-formatted [-Wclang-format-violations]
    ConnectionHandler( conn& p_conn ) : m_connection( &p_conn ) {}
                                   ^
./Libraries/SocketLib/ConnectionHandler.h:29:54: warning: code should be clang-formatted [-Wclang-format-violations]
    ConnectionHandler( conn& p_conn ) : m_connection( &p_conn ) {}
                                                     ^
./Libraries/SocketLib/ConnectionHandler.h:29:62: warning: code should be clang-formatted [-Wclang-format-violations]
    ConnectionHandler( conn& p_conn ) : m_connection( &p_conn ) {}
                                                             ^
./Libraries/SocketLib/ConnectionHandler.h:29:67: warning: code should be clang-formatted [-Wclang-format-violations]
    ConnectionHandler( conn& p_conn ) : m_connection( &p_conn ) {}
                                                                  ^
./Libraries/SocketLib/ConnectionHandler.h:30:33: warning: code should be clang-formatted [-Wclang-format-violations]
    virtual ~ConnectionHandler() {};
                                ^
./Libraries/SocketLib/ConnectionHandler.h:30:37: warning: code should be clang-formatted [-Wclang-format-violations]
    virtual ~ConnectionHandler() {};
                                    ^
./Libraries/SocketLib/ConnectionHandler.h:32:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/ConnectionHandler.h:33:76: warning: code should be clang-formatted [-Wclang-format-violations]
    //  This handles incomming commands. Anything passed into this function
                                                                           ^
./Libraries/SocketLib/ConnectionHandler.h:34:59: warning: code should be clang-formatted [-Wclang-format-violations]
    //  is assumed to be a complete command from a client.
                                                          ^
./Libraries/SocketLib/ConnectionHandler.h:35:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/ConnectionHandler.h:36:25: warning: code should be clang-formatted [-Wclang-format-violations]
    virtual void Handle( command p_data ) = 0;
                        ^
./Libraries/SocketLib/ConnectionHandler.h:36:40: warning: code should be clang-formatted [-Wclang-format-violations]
    virtual void Handle( command p_data ) = 0;
                                       ^
./Libraries/SocketLib/ConnectionHandler.h:36:47: warning: code should be clang-formatted [-Wclang-format-violations]
    virtual void Handle( command p_data ) = 0;
                                              ^
./Libraries/SocketLib/ConnectionHandler.h:38:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/ConnectionHandler.h:39:74: warning: code should be clang-formatted [-Wclang-format-violations]
    //  This notifies the handler that a connection is entering the state
                                                                         ^
./Libraries/SocketLib/ConnectionHandler.h:40:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/ConnectionHandler.h:41:30: warning: code should be clang-formatted [-Wclang-format-violations]
    virtual void Enter() = 0;
                             ^
./Libraries/SocketLib/ConnectionHandler.h:43:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/ConnectionHandler.h:44:74: warning: code should be clang-formatted [-Wclang-format-violations]
    //  This notifies the handler that a connection is leaving the state.
                                                                         ^
./Libraries/SocketLib/ConnectionHandler.h:45:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/ConnectionHandler.h:46:30: warning: code should be clang-formatted [-Wclang-format-violations]
    virtual void Leave() = 0;
                             ^
./Libraries/SocketLib/ConnectionHandler.h:48:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/ConnectionHandler.h:49:78: warning: code should be clang-formatted [-Wclang-format-violations]
    //  This notifies the handler that a connection has unexpectedly hung up.
                                                                             ^
./Libraries/SocketLib/ConnectionHandler.h:50:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/ConnectionHandler.h:51:31: warning: code should be clang-formatted [-Wclang-format-violations]
    virtual void Hungup() = 0;
                              ^
./Libraries/SocketLib/ConnectionHandler.h:53:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/ConnectionHandler.h:54:75: warning: code should be clang-formatted [-Wclang-format-violations]
    //  This notifies the handler that a connection is being kicked due to 
                                                                          ^
./Libraries/SocketLib/ConnectionHandler.h:55:29: warning: code should be clang-formatted [-Wclang-format-violations]
    //  flooding the server.
                            ^
./Libraries/SocketLib/ConnectionHandler.h:56:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/ConnectionHandler.h:59:11: warning: code should be clang-formatted [-Wclang-format-violations]
protected:
          ^
./Libraries/SocketLib/ConnectionHandler.h:60:9: warning: code should be clang-formatted [-Wclang-format-violations]
    conn* m_connection;
        ^
./Libraries/SocketLib/ConnectionHandler.h:60:10: warning: code should be clang-formatted [-Wclang-format-violations]
    conn* m_connection;
         ^
./Libraries/SocketLib/ConnectionHandler.h:60:24: warning: code should be clang-formatted [-Wclang-format-violations]
    conn* m_connection;
                       ^
./Libraries/SocketLib/ConnectionHandler.h:62:3: warning: code should be clang-formatted [-Wclang-format-violations]
};
  ^
./Libraries/SocketLib/ConnectionHandler.h:65:2: warning: code should be clang-formatted [-Wclang-format-violations]
}   // end namespace SocketLib
 ^
./Libraries/SocketLib/ConnectionManager.h:9:1: warning: code should be clang-formatted [-Wclang-format-violations]
#include <list>
^
./Libraries/SocketLib/ConnectionManager.h:19:20: warning: code should be clang-formatted [-Wclang-format-violations]
namespace SocketLib
                   ^
./Libraries/SocketLib/ConnectionManager.h:23:9: warning: code should be clang-formatted [-Wclang-format-violations]
template<typename protocol>
        ^
./Libraries/SocketLib/ConnectionManager.h:23:28: warning: code should be clang-formatted [-Wclang-format-violations]
template<typename protocol>
                           ^
./Libraries/SocketLib/ConnectionManager.h:24:18: warning: code should be clang-formatted [-Wclang-format-violations]
class Connection;
                 ^
./Libraries/SocketLib/ConnectionManager.h:29:71: warning: code should be clang-formatted [-Wclang-format-violations]
// Description: This connection manager class will manage connections, 
                                                                      ^
./Libraries/SocketLib/ConnectionManager.h:30:30: warning: code should be clang-formatted [-Wclang-format-violations]
// all identified with an ID. 
                             ^
./Libraries/SocketLib/ConnectionManager.h:32:9: warning: code should be clang-formatted [-Wclang-format-violations]
template<typename protocol, typename defaulthandler>
        ^
./Libraries/SocketLib/ConnectionManager.h:32:53: warning: code should be clang-formatted [-Wclang-format-violations]
template<typename protocol, typename defaulthandler>
                                                    ^
./Libraries/SocketLib/ConnectionManager.h:33:24: warning: code should be clang-formatted [-Wclang-format-violations]
class ConnectionManager
                       ^
./Libraries/SocketLib/ConnectionManager.h:34:2: warning: code should be clang-formatted [-Wclang-format-violations]
{
 ^
./Libraries/SocketLib/ConnectionManager.h:36:23: warning: code should be clang-formatted [-Wclang-format-violations]
    typedef std::list< Connection<protocol> > clist;
                      ^
./Libraries/SocketLib/ConnectionManager.h:36:44: warning: code should be clang-formatted [-Wclang-format-violations]
    typedef std::list< Connection<protocol> > clist;
                                           ^
./Libraries/SocketLib/ConnectionManager.h:36:53: warning: code should be clang-formatted [-Wclang-format-violations]
    typedef std::list< Connection<protocol> > clist;
                                                    ^
./Libraries/SocketLib/ConnectionManager.h:37:32: warning: code should be clang-formatted [-Wclang-format-violations]
    typedef typename std::list< Connection<protocol> >::iterator clistitr;
                               ^
./Libraries/SocketLib/ConnectionManager.h:37:53: warning: code should be clang-formatted [-Wclang-format-violations]
    typedef typename std::list< Connection<protocol> >::iterator clistitr;
                                                    ^
./Libraries/SocketLib/ConnectionManager.h:39:8: warning: code should be clang-formatted [-Wclang-format-violations]
public:
       ^
./Libraries/SocketLib/ConnectionManager.h:40:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/ConnectionManager.h:41:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // This creates a connection manager using a maximum datarate, buffer size,
                                                                               ^
./Libraries/SocketLib/ConnectionManager.h:42:33: warning: code should be clang-formatted [-Wclang-format-violations]
    // and a send timeout limit.
                                ^
./Libraries/SocketLib/ConnectionManager.h:43:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/ConnectionManager.h:44:23: warning: code should be clang-formatted [-Wclang-format-violations]
    ConnectionManager( int p_maxdatarate = 1024,    // 1 kbyte/second
                      ^
./Libraries/SocketLib/ConnectionManager.h:44:49: warning: code should be clang-formatted [-Wclang-format-violations]
    ConnectionManager( int p_maxdatarate = 1024,    // 1 kbyte/second
                                                ^
./Libraries/SocketLib/ConnectionManager.h:44:70: warning: code should be clang-formatted [-Wclang-format-violations]
    ConnectionManager( int p_maxdatarate = 1024,    // 1 kbyte/second
                                                                     ^
./Libraries/SocketLib/ConnectionManager.h:45:46: warning: code should be clang-formatted [-Wclang-format-violations]
                       int p_sentimeout = 60,       // 60 seconds
                                             ^
./Libraries/SocketLib/ConnectionManager.h:45:66: warning: code should be clang-formatted [-Wclang-format-violations]
                       int p_sentimeout = 60,       // 60 seconds
                                                                 ^
./Libraries/SocketLib/ConnectionManager.h:46:48: warning: code should be clang-formatted [-Wclang-format-violations]
                       int p_maxbuffered = 8192 );  // 8 kbytes
                                               ^
./Libraries/SocketLib/ConnectionManager.h:46:51: warning: code should be clang-formatted [-Wclang-format-violations]
                       int p_maxbuffered = 8192 );  // 8 kbytes
                                                  ^
./Libraries/SocketLib/ConnectionManager.h:46:64: warning: code should be clang-formatted [-Wclang-format-violations]
                       int p_maxbuffered = 8192 );  // 8 kbytes
                                                               ^
./Libraries/SocketLib/ConnectionManager.h:48:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/ConnectionManager.h:49:74: warning: code should be clang-formatted [-Wclang-format-violations]
    //  Destructs the manager, closing every connection contained within.
                                                                         ^
./Libraries/SocketLib/ConnectionManager.h:50:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/ConnectionManager.h:51:26: warning: code should be clang-formatted [-Wclang-format-violations]
    ~ConnectionManager();
                         ^
./Libraries/SocketLib/ConnectionManager.h:54:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/ConnectionManager.h:55:75: warning: code should be clang-formatted [-Wclang-format-violations]
    //  This notifies the manager that there is a new connection available
                                                                          ^
./Libraries/SocketLib/ConnectionManager.h:56:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/ConnectionManager.h:57:24: warning: code should be clang-formatted [-Wclang-format-violations]
    void NewConnection( DataSocket& p_socket );
                       ^
./Libraries/SocketLib/ConnectionManager.h:57:35: warning: code should be clang-formatted [-Wclang-format-violations]
    void NewConnection( DataSocket& p_socket );
                                  ^
./Libraries/SocketLib/ConnectionManager.h:57:36: warning: code should be clang-formatted [-Wclang-format-violations]
    void NewConnection( DataSocket& p_socket );
                                   ^
./Libraries/SocketLib/ConnectionManager.h:57:45: warning: code should be clang-formatted [-Wclang-format-violations]
    void NewConnection( DataSocket& p_socket );
                                            ^
./Libraries/SocketLib/ConnectionManager.h:57:48: warning: code should be clang-formatted [-Wclang-format-violations]
    void NewConnection( DataSocket& p_socket );
                                               ^
./Libraries/SocketLib/ConnectionManager.h:60:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/ConnectionManager.h:61:80: warning: code should be clang-formatted [-Wclang-format-violations]
    //  This returns the number of connections that can be added to the manager
                                                                               ^
./Libraries/SocketLib/ConnectionManager.h:62:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/ConnectionManager.h:63:44: warning: code should be clang-formatted [-Wclang-format-violations]
    inline int AvailableConnections() const
                                           ^
./Libraries/SocketLib/ConnectionManager.h:64:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/ConnectionManager.h:65:48: warning: code should be clang-formatted [-Wclang-format-violations]
        return MAX - (int)m_connections.size();
                                               ^
./Libraries/SocketLib/ConnectionManager.h:66:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }
     ^
./Libraries/SocketLib/ConnectionManager.h:68:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/ConnectionManager.h:69:66: warning: code should be clang-formatted [-Wclang-format-violations]
    //  This returns the number of connections within the manager
                                                                 ^
./Libraries/SocketLib/ConnectionManager.h:70:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/ConnectionManager.h:71:40: warning: code should be clang-formatted [-Wclang-format-violations]
    inline int TotalConnections() const
                                       ^
./Libraries/SocketLib/ConnectionManager.h:72:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/ConnectionManager.h:73:42: warning: code should be clang-formatted [-Wclang-format-violations]
        return (int)m_connections.size();
                                         ^
./Libraries/SocketLib/ConnectionManager.h:74:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }
     ^
./Libraries/SocketLib/ConnectionManager.h:76:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/ConnectionManager.h:77:78: warning: code should be clang-formatted [-Wclang-format-violations]
    //  Goes through all the connections in the close-queue, and closes them.
                                                                             ^
./Libraries/SocketLib/ConnectionManager.h:78:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/ConnectionManager.h:79:29: warning: code should be clang-formatted [-Wclang-format-violations]
    void CloseConnections();
                            ^
./Libraries/SocketLib/ConnectionManager.h:82:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/ConnectionManager.h:83:52: warning: code should be clang-formatted [-Wclang-format-violations]
    // Description: This listens for incomming data
                                                   ^
./Libraries/SocketLib/ConnectionManager.h:84:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/ConnectionManager.h:85:19: warning: code should be clang-formatted [-Wclang-format-violations]
    void Listen();
                  ^
./Libraries/SocketLib/ConnectionManager.h:87:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/ConnectionManager.h:88:72: warning: code should be clang-formatted [-Wclang-format-violations]
    // Description: This goes through all the connections and sends all
                                                                       ^
./Libraries/SocketLib/ConnectionManager.h:89:35: warning: code should be clang-formatted [-Wclang-format-violations]
    //              buffered data.
                                  ^
./Libraries/SocketLib/ConnectionManager.h:90:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/ConnectionManager.h:91:17: warning: code should be clang-formatted [-Wclang-format-violations]
    void Send();
                ^
./Libraries/SocketLib/ConnectionManager.h:93:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/ConnectionManager.h:94:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // This function performs the three actions of the manager class, listening
                                                                               ^
./Libraries/SocketLib/ConnectionManager.h:95:29: warning: code should be clang-formatted [-Wclang-format-violations]
    // sending, and closing.
                            ^
./Libraries/SocketLib/ConnectionManager.h:96:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/ConnectionManager.h:97:25: warning: code should be clang-formatted [-Wclang-format-violations]
    inline void Manage()
                        ^
./Libraries/SocketLib/ConnectionManager.h:98:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/ConnectionManager.h:99:18: warning: code should be clang-formatted [-Wclang-format-violations]
        Listen();
                 ^
./Libraries/SocketLib/ConnectionManager.h:100:16: warning: code should be clang-formatted [-Wclang-format-violations]
        Send();
               ^
./Libraries/SocketLib/ConnectionManager.h:101:28: warning: code should be clang-formatted [-Wclang-format-violations]
        CloseConnections();
                           ^
./Libraries/SocketLib/ConnectionManager.h:104:11: warning: code should be clang-formatted [-Wclang-format-violations]
protected:
          ^
./Libraries/SocketLib/ConnectionManager.h:105:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/ConnectionManager.h:106:78: warning: code should be clang-formatted [-Wclang-format-violations]
    //  This closes a connection within the connection manager; it is assumed
                                                                             ^
./Libraries/SocketLib/ConnectionManager.h:107:74: warning: code should be clang-formatted [-Wclang-format-violations]
    //  that this is an external call- nothing needs to be notified about 
                                                                         ^
./Libraries/SocketLib/ConnectionManager.h:108:37: warning: code should be clang-formatted [-Wclang-format-violations]
    //  the connection being closed.
                                    ^
./Libraries/SocketLib/ConnectionManager.h:109:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/ConnectionManager.h:110:16: warning: code should be clang-formatted [-Wclang-format-violations]
    void Close( clistitr p_itr );
               ^
./Libraries/SocketLib/ConnectionManager.h:110:31: warning: code should be clang-formatted [-Wclang-format-violations]
    void Close( clistitr p_itr );
                              ^
./Libraries/SocketLib/ConnectionManager.h:110:34: warning: code should be clang-formatted [-Wclang-format-violations]
    void Close( clistitr p_itr );
                                 ^
./Libraries/SocketLib/ConnectionManager.h:114:11: warning: code should be clang-formatted [-Wclang-format-violations]
protected:
          ^
./Libraries/SocketLib/ConnectionManager.h:116:56: warning: code should be clang-formatted [-Wclang-format-violations]
    // a list of all the connections within the manager
                                                       ^
./Libraries/SocketLib/ConnectionManager.h:117:25: warning: code should be clang-formatted [-Wclang-format-violations]
    clist m_connections;
                        ^
./Libraries/SocketLib/ConnectionManager.h:119:81: warning: code should be clang-formatted [-Wclang-format-violations]
    // This is the max allowable receiving datarate of the manager, in bytes per
                                                                                ^
./Libraries/SocketLib/ConnectionManager.h:120:15: warning: code should be clang-formatted [-Wclang-format-violations]
    // second.
              ^
./Libraries/SocketLib/ConnectionManager.h:121:23: warning: code should be clang-formatted [-Wclang-format-violations]
    int m_maxdatarate;
                      ^
./Libraries/SocketLib/ConnectionManager.h:123:82: warning: code should be clang-formatted [-Wclang-format-violations]
    // This is the amount of time in seconds that the manager allows for a socket to
                                                                                 ^
./Libraries/SocketLib/ConnectionManager.h:123:85: warning: code should be clang-formatted [-Wclang-format-violations]
    // This is the amount of time in seconds that the manager allows for a socket to
                                                                                    ^
./Libraries/SocketLib/ConnectionManager.h:124:5: warning: code should be clang-formatted [-Wclang-format-violations]
    // successfully send data before it is forcibly closed.
    ^
./Libraries/SocketLib/ConnectionManager.h:124:60: warning: code should be clang-formatted [-Wclang-format-violations]
    // successfully send data before it is forcibly closed.
                                                           ^
./Libraries/SocketLib/ConnectionManager.h:125:23: warning: code should be clang-formatted [-Wclang-format-violations]
    int m_sendtimeout;
                      ^
./Libraries/SocketLib/ConnectionManager.h:127:78: warning: code should be clang-formatted [-Wclang-format-violations]
    // This is the maximum number of bytes that are allowed to be buffered by
                                                                             ^
./Libraries/SocketLib/ConnectionManager.h:128:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // a connection before it is forcibly closed (only determined after a send)
                                                                               ^
./Libraries/SocketLib/ConnectionManager.h:129:23: warning: code should be clang-formatted [-Wclang-format-violations]
    int m_maxbuffered;
                      ^
./Libraries/SocketLib/ConnectionManager.h:131:65: warning: code should be clang-formatted [-Wclang-format-violations]
    // a set of sockets that will be polled for socket activity.
                                                                ^
./Libraries/SocketLib/ConnectionManager.h:133:3: warning: code should be clang-formatted [-Wclang-format-violations]
};
  ^
./Libraries/SocketLib/ConnectionManager.h:143:9: warning: code should be clang-formatted [-Wclang-format-violations]
template<typename protocol, typename defaulthandler>
        ^
./Libraries/SocketLib/ConnectionManager.h:144:46: warning: code should be clang-formatted [-Wclang-format-violations]
ConnectionManager<protocol, defaulthandler>::
                                             ^
./Libraries/SocketLib/ConnectionManager.h:145:19: warning: code should be clang-formatted [-Wclang-format-violations]
ConnectionManager( int p_maxdatarate,    
                  ^
./Libraries/SocketLib/ConnectionManager.h:145:38: warning: code should be clang-formatted [-Wclang-format-violations]
ConnectionManager( int p_maxdatarate,    
                                     ^
./Libraries/SocketLib/ConnectionManager.h:146:37: warning: code should be clang-formatted [-Wclang-format-violations]
                   int p_sentimeout,
                                    ^
./Libraries/SocketLib/ConnectionManager.h:147:37: warning: code should be clang-formatted [-Wclang-format-violations]
                   int p_maxbuffered )
                                    ^
./Libraries/SocketLib/ConnectionManager.h:147:39: warning: code should be clang-formatted [-Wclang-format-violations]
                   int p_maxbuffered )
                                      ^
./Libraries/SocketLib/ConnectionManager.h:148:2: warning: code should be clang-formatted [-Wclang-format-violations]
{
 ^
./Libraries/SocketLib/ConnectionManager.h:149:35: warning: code should be clang-formatted [-Wclang-format-violations]
    m_maxdatarate = p_maxdatarate;
                                  ^
./Libraries/SocketLib/ConnectionManager.h:150:34: warning: code should be clang-formatted [-Wclang-format-violations]
    m_sendtimeout = p_sentimeout;
                                 ^
./Libraries/SocketLib/ConnectionManager.h:157:9: warning: code should be clang-formatted [-Wclang-format-violations]
template<typename protocol, typename defaulthandler>
        ^
./Libraries/SocketLib/ConnectionManager.h:158:66: warning: code should be clang-formatted [-Wclang-format-violations]
ConnectionManager<protocol, defaulthandler>::~ConnectionManager()
                                                                 ^
./Libraries/SocketLib/ConnectionManager.h:159:2: warning: code should be clang-formatted [-Wclang-format-violations]
{
 ^
./Libraries/SocketLib/ConnectionManager.h:160:41: warning: code should be clang-formatted [-Wclang-format-violations]
    // close every socket in the manager
                                        ^
./Libraries/SocketLib/ConnectionManager.h:161:18: warning: code should be clang-formatted [-Wclang-format-violations]
    clistitr itr;
                 ^
./Libraries/SocketLib/ConnectionManager.h:163:8: warning: code should be clang-formatted [-Wclang-format-violations]
    for( itr = m_connections.begin(); itr != m_connections.end(); ++itr )
       ^
./Libraries/SocketLib/ConnectionManager.h:163:9: warning: code should be clang-formatted [-Wclang-format-violations]
    for( itr = m_connections.begin(); itr != m_connections.end(); ++itr )
        ^
./Libraries/SocketLib/ConnectionManager.h:163:72: warning: code should be clang-formatted [-Wclang-format-violations]
    for( itr = m_connections.begin(); itr != m_connections.end(); ++itr )
                                                                       ^
./Libraries/SocketLib/ConnectionManager.h:163:74: warning: code should be clang-formatted [-Wclang-format-violations]
    for( itr = m_connections.begin(); itr != m_connections.end(); ++itr )
                                                                         ^
./Libraries/SocketLib/ConnectionManager.h:165:2: warning: code should be clang-formatted [-Wclang-format-violations]
}
 ^
./Libraries/SocketLib/ConnectionManager.h:172:9: warning: code should be clang-formatted [-Wclang-format-violations]
template<typename protocol, typename defaulthandler>
        ^
./Libraries/SocketLib/ConnectionManager.h:173:51: warning: code should be clang-formatted [-Wclang-format-violations]
void ConnectionManager<protocol, defaulthandler>::
                                                  ^
./Libraries/SocketLib/ConnectionManager.h:174:15: warning: code should be clang-formatted [-Wclang-format-violations]
NewConnection( DataSocket& p_socket )
              ^
./Libraries/SocketLib/ConnectionManager.h:174:26: warning: code should be clang-formatted [-Wclang-format-violations]
NewConnection( DataSocket& p_socket )
                         ^
./Libraries/SocketLib/ConnectionManager.h:174:27: warning: code should be clang-formatted [-Wclang-format-violations]
NewConnection( DataSocket& p_socket )
                          ^
./Libraries/SocketLib/ConnectionManager.h:174:36: warning: code should be clang-formatted [-Wclang-format-violations]
NewConnection( DataSocket& p_socket )
                                   ^
./Libraries/SocketLib/ConnectionManager.h:174:38: warning: code should be clang-formatted [-Wclang-format-violations]
NewConnection( DataSocket& p_socket )
                                     ^
./Libraries/SocketLib/ConnectionManager.h:175:2: warning: code should be clang-formatted [-Wclang-format-violations]
{
 ^
./Libraries/SocketLib/ConnectionManager.h:176:41: warning: code should be clang-formatted [-Wclang-format-violations]
    // turn the socket into a connection
                                        ^
./Libraries/SocketLib/ConnectionManager.h:177:31: warning: code should be clang-formatted [-Wclang-format-violations]
    Connection<protocol> conn( p_socket );
                              ^
./Libraries/SocketLib/ConnectionManager.h:177:40: warning: code should be clang-formatted [-Wclang-format-violations]
    Connection<protocol> conn( p_socket );
                                       ^
./Libraries/SocketLib/ConnectionManager.h:177:43: warning: code should be clang-formatted [-Wclang-format-violations]
    Connection<protocol> conn( p_socket );
                                          ^
./Libraries/SocketLib/ConnectionManager.h:179:7: warning: code should be clang-formatted [-Wclang-format-violations]
    if( AvailableConnections() == 0 )
      ^
./Libraries/SocketLib/ConnectionManager.h:179:8: warning: code should be clang-formatted [-Wclang-format-violations]
    if( AvailableConnections() == 0 )
       ^
./Libraries/SocketLib/ConnectionManager.h:179:36: warning: code should be clang-formatted [-Wclang-format-violations]
    if( AvailableConnections() == 0 )
                                   ^
./Libraries/SocketLib/ConnectionManager.h:179:38: warning: code should be clang-formatted [-Wclang-format-violations]
    if( AvailableConnections() == 0 )
                                     ^
./Libraries/SocketLib/ConnectionManager.h:180:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/ConnectionManager.h:181:72: warning: code should be clang-formatted [-Wclang-format-violations]
        // tell the default protocol handler that there is no more room
                                                                       ^
./Libraries/SocketLib/ConnectionManager.h:182:51: warning: code should be clang-formatted [-Wclang-format-violations]
        // for the connection within this manager.
                                                  ^
./Libraries/SocketLib/ConnectionManager.h:183:32: warning: code should be clang-formatted [-Wclang-format-violations]
        defaulthandler::NoRoom( conn );
                               ^
./Libraries/SocketLib/ConnectionManager.h:183:37: warning: code should be clang-formatted [-Wclang-format-violations]
        defaulthandler::NoRoom( conn );
                                    ^
./Libraries/SocketLib/ConnectionManager.h:183:40: warning: code should be clang-formatted [-Wclang-format-violations]
        defaulthandler::NoRoom( conn );
                                       ^
./Libraries/SocketLib/ConnectionManager.h:185:79: warning: code should be clang-formatted [-Wclang-format-violations]
        // It is assumed that the protocol handler has told the connection the 
                                                                              ^
./Libraries/SocketLib/ConnectionManager.h:186:57: warning: code should be clang-formatted [-Wclang-format-violations]
        // appropriate message, so close the connection.
                                                        ^
./Libraries/SocketLib/ConnectionManager.h:187:28: warning: code should be clang-formatted [-Wclang-format-violations]
        conn.CloseSocket();
                           ^
./Libraries/SocketLib/ConnectionManager.h:188:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }
     ^
./Libraries/SocketLib/ConnectionManager.h:189:9: warning: code should be clang-formatted [-Wclang-format-violations]
    else
        ^
./Libraries/SocketLib/ConnectionManager.h:190:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/ConnectionManager.h:191:30: warning: code should be clang-formatted [-Wclang-format-violations]
        // add the connection
                             ^
./Libraries/SocketLib/ConnectionManager.h:192:33: warning: code should be clang-formatted [-Wclang-format-violations]
        m_connections.push_back( conn );
                                ^
./Libraries/SocketLib/ConnectionManager.h:192:38: warning: code should be clang-formatted [-Wclang-format-violations]
        m_connections.push_back( conn );
                                     ^
./Libraries/SocketLib/ConnectionManager.h:192:41: warning: code should be clang-formatted [-Wclang-format-violations]
        m_connections.push_back( conn );
                                        ^
./Libraries/SocketLib/ConnectionManager.h:194:48: warning: code should be clang-formatted [-Wclang-format-violations]
        // get a ref pointing to the connection
                                               ^
./Libraries/SocketLib/ConnectionManager.h:195:29: warning: code should be clang-formatted [-Wclang-format-violations]
        Connection<protocol>& c = *m_connections.rbegin();
                            ^
./Libraries/SocketLib/ConnectionManager.h:195:30: warning: code should be clang-formatted [-Wclang-format-violations]
        Connection<protocol>& c = *m_connections.rbegin();
                             ^
./Libraries/SocketLib/ConnectionManager.h:195:59: warning: code should be clang-formatted [-Wclang-format-violations]
        Connection<protocol>& c = *m_connections.rbegin();
                                                          ^
./Libraries/SocketLib/ConnectionManager.h:197:53: warning: code should be clang-formatted [-Wclang-format-violations]
        // turn the connection into nonblocking mode
                                                    ^
./Libraries/SocketLib/ConnectionManager.h:198:23: warning: code should be clang-formatted [-Wclang-format-violations]
        c.SetBlocking( false );
                      ^
./Libraries/SocketLib/ConnectionManager.h:198:29: warning: code should be clang-formatted [-Wclang-format-violations]
        c.SetBlocking( false );
                            ^
./Libraries/SocketLib/ConnectionManager.h:198:32: warning: code should be clang-formatted [-Wclang-format-violations]
        c.SetBlocking( false );
                               ^
./Libraries/SocketLib/ConnectionManager.h:200:48: warning: code should be clang-formatted [-Wclang-format-violations]
        // add the connection to the socket set
                                               ^
./Libraries/SocketLib/ConnectionManager.h:201:25: warning: code should be clang-formatted [-Wclang-format-violations]
        m_set.AddSocket( c );
                        ^
./Libraries/SocketLib/ConnectionManager.h:201:27: warning: code should be clang-formatted [-Wclang-format-violations]
        m_set.AddSocket( c );
                          ^
./Libraries/SocketLib/ConnectionManager.h:201:30: warning: code should be clang-formatted [-Wclang-format-violations]
        m_set.AddSocket( c );
                             ^
./Libraries/SocketLib/ConnectionManager.h:203:51: warning: code should be clang-formatted [-Wclang-format-violations]
        // give the connection its default handler
                                                  ^
./Libraries/SocketLib/ConnectionManager.h:204:22: warning: code should be clang-formatted [-Wclang-format-violations]
        c.AddHandler( new defaulthandler( c ) );
                     ^
./Libraries/SocketLib/ConnectionManager.h:204:42: warning: code should be clang-formatted [-Wclang-format-violations]
        c.AddHandler( new defaulthandler( c ) );
                                         ^
./Libraries/SocketLib/ConnectionManager.h:204:44: warning: code should be clang-formatted [-Wclang-format-violations]
        c.AddHandler( new defaulthandler( c ) );
                                           ^
./Libraries/SocketLib/ConnectionManager.h:204:46: warning: code should be clang-formatted [-Wclang-format-violations]
        c.AddHandler( new defaulthandler( c ) );
                                             ^
./Libraries/SocketLib/ConnectionManager.h:204:49: warning: code should be clang-formatted [-Wclang-format-violations]
        c.AddHandler( new defaulthandler( c ) );
                                                ^
./Libraries/SocketLib/ConnectionManager.h:206:2: warning: code should be clang-formatted [-Wclang-format-violations]
}
 ^
./Libraries/SocketLib/ConnectionManager.h:212:9: warning: code should be clang-formatted [-Wclang-format-violations]
template<typename protocol, typename defaulthandler>
        ^
./Libraries/SocketLib/ConnectionManager.h:213:57: warning: code should be clang-formatted [-Wclang-format-violations]
void ConnectionManager<protocol, defaulthandler>::Close( clistitr p_itr )
                                                        ^
./Libraries/SocketLib/ConnectionManager.h:213:72: warning: code should be clang-formatted [-Wclang-format-violations]
void ConnectionManager<protocol, defaulthandler>::Close( clistitr p_itr )
                                                                       ^
./Libraries/SocketLib/ConnectionManager.h:213:74: warning: code should be clang-formatted [-Wclang-format-violations]
void ConnectionManager<protocol, defaulthandler>::Close( clistitr p_itr )
                                                                         ^
./Libraries/SocketLib/ConnectionManager.h:214:2: warning: code should be clang-formatted [-Wclang-format-violations]
{
 ^
./Libraries/SocketLib/ConnectionManager.h:215:55: warning: code should be clang-formatted [-Wclang-format-violations]
    // clear the socket descriptor from the socket set
                                                      ^
./Libraries/SocketLib/ConnectionManager.h:216:24: warning: code should be clang-formatted [-Wclang-format-violations]
    m_set.RemoveSocket( *p_itr );
                       ^
./Libraries/SocketLib/ConnectionManager.h:216:31: warning: code should be clang-formatted [-Wclang-format-violations]
    m_set.RemoveSocket( *p_itr );
                              ^
./Libraries/SocketLib/ConnectionManager.h:216:34: warning: code should be clang-formatted [-Wclang-format-violations]
    m_set.RemoveSocket( *p_itr );
                                 ^
./Libraries/SocketLib/ConnectionManager.h:218:39: warning: code should be clang-formatted [-Wclang-format-violations]
    // physically close the connection
                                      ^
./Libraries/SocketLib/ConnectionManager.h:219:26: warning: code should be clang-formatted [-Wclang-format-violations]
    p_itr->CloseSocket();
                         ^
./Libraries/SocketLib/ConnectionManager.h:221:42: warning: code should be clang-formatted [-Wclang-format-violations]
    // erase the connection from the list
                                         ^
./Libraries/SocketLib/ConnectionManager.h:222:25: warning: code should be clang-formatted [-Wclang-format-violations]
    m_connections.erase( p_itr );
                        ^
./Libraries/SocketLib/ConnectionManager.h:222:31: warning: code should be clang-formatted [-Wclang-format-violations]
    m_connections.erase( p_itr );
                              ^
./Libraries/SocketLib/ConnectionManager.h:223:2: warning: code should be clang-formatted [-Wclang-format-violations]
}
 ^
./Libraries/SocketLib/ConnectionManager.h:232:9: warning: code should be clang-formatted [-Wclang-format-violations]
template<typename protocol, typename defaulthandler>
        ^
./Libraries/SocketLib/ConnectionManager.h:233:59: warning: code should be clang-formatted [-Wclang-format-violations]
void ConnectionManager<protocol, defaulthandler>::Listen()
                                                          ^
./Libraries/SocketLib/ConnectionManager.h:234:2: warning: code should be clang-formatted [-Wclang-format-violations]
{
 ^
./Libraries/SocketLib/ConnectionManager.h:235:19: warning: code should be clang-formatted [-Wclang-format-violations]
    int socks = 0;
                  ^
./Libraries/SocketLib/ConnectionManager.h:236:7: warning: code should be clang-formatted [-Wclang-format-violations]
    if( TotalConnections() > 0 )
      ^
./Libraries/SocketLib/ConnectionManager.h:236:8: warning: code should be clang-formatted [-Wclang-format-violations]
    if( TotalConnections() > 0 )
       ^
./Libraries/SocketLib/ConnectionManager.h:236:31: warning: code should be clang-formatted [-Wclang-format-violations]
    if( TotalConnections() > 0 )
                              ^
./Libraries/SocketLib/ConnectionManager.h:236:33: warning: code should be clang-formatted [-Wclang-format-violations]
    if( TotalConnections() > 0 )
                                ^
./Libraries/SocketLib/ConnectionManager.h:237:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/ConnectionManager.h:238:30: warning: code should be clang-formatted [-Wclang-format-violations]
        socks = m_set.Poll();
                             ^
./Libraries/SocketLib/ConnectionManager.h:239:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }
     ^
./Libraries/SocketLib/ConnectionManager.h:241:49: warning: code should be clang-formatted [-Wclang-format-violations]
    // detect if any sockets have action on them
                                                ^
./Libraries/SocketLib/ConnectionManager.h:242:7: warning: code should be clang-formatted [-Wclang-format-violations]
    if( socks > 0 )
      ^
./Libraries/SocketLib/ConnectionManager.h:242:8: warning: code should be clang-formatted [-Wclang-format-violations]
    if( socks > 0 )
       ^
./Libraries/SocketLib/ConnectionManager.h:242:18: warning: code should be clang-formatted [-Wclang-format-violations]
    if( socks > 0 )
                 ^
./Libraries/SocketLib/ConnectionManager.h:242:20: warning: code should be clang-formatted [-Wclang-format-violations]
    if( socks > 0 )
                   ^
./Libraries/SocketLib/ConnectionManager.h:243:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/ConnectionManager.h:245:69: warning: code should be clang-formatted [-Wclang-format-violations]
        // two iterators; c means "current". This is done due to the 
                                                                    ^
./Libraries/SocketLib/ConnectionManager.h:246:62: warning: code should be clang-formatted [-Wclang-format-violations]
        // awkward nature of iterating through a map with the 
                                                             ^
./Libraries/SocketLib/ConnectionManager.h:247:35: warning: code should be clang-formatted [-Wclang-format-violations]
        // ability to remove items
                                  ^
./Libraries/SocketLib/ConnectionManager.h:248:46: warning: code should be clang-formatted [-Wclang-format-violations]
        clistitr itr = m_connections.begin();
                                             ^
./Libraries/SocketLib/ConnectionManager.h:249:20: warning: code should be clang-formatted [-Wclang-format-violations]
        clistitr c;
                   ^
./Libraries/SocketLib/ConnectionManager.h:251:41: warning: code should be clang-formatted [-Wclang-format-violations]
        // loop through every connection
                                        ^
./Libraries/SocketLib/ConnectionManager.h:252:14: warning: code should be clang-formatted [-Wclang-format-violations]
        while( itr != m_connections.end() )
             ^
./Libraries/SocketLib/ConnectionManager.h:252:15: warning: code should be clang-formatted [-Wclang-format-violations]
        while( itr != m_connections.end() )
              ^
./Libraries/SocketLib/ConnectionManager.h:252:42: warning: code should be clang-formatted [-Wclang-format-violations]
        while( itr != m_connections.end() )
                                         ^
./Libraries/SocketLib/ConnectionManager.h:252:44: warning: code should be clang-formatted [-Wclang-format-violations]
        while( itr != m_connections.end() )
                                           ^
./Libraries/SocketLib/ConnectionManager.h:253:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/ConnectionManager.h:254:69: warning: code should be clang-formatted [-Wclang-format-violations]
            // keep the current connection in "c", and move "itr" to 
                                                                    ^
./Libraries/SocketLib/ConnectionManager.h:255:29: warning: code should be clang-formatted [-Wclang-format-violations]
            // the next item
                            ^
./Libraries/SocketLib/ConnectionManager.h:256:23: warning: code should be clang-formatted [-Wclang-format-violations]
            c = itr++;
                      ^
./Libraries/SocketLib/ConnectionManager.h:258:46: warning: code should be clang-formatted [-Wclang-format-violations]
            // check if there is any activity
                                             ^
./Libraries/SocketLib/ConnectionManager.h:259:15: warning: code should be clang-formatted [-Wclang-format-violations]
            if( m_set.HasActivity( *c ) )
              ^
./Libraries/SocketLib/ConnectionManager.h:259:16: warning: code should be clang-formatted [-Wclang-format-violations]
            if( m_set.HasActivity( *c ) )
               ^
./Libraries/SocketLib/ConnectionManager.h:259:35: warning: code should be clang-formatted [-Wclang-format-violations]
            if( m_set.HasActivity( *c ) )
                                  ^
./Libraries/SocketLib/ConnectionManager.h:259:38: warning: code should be clang-formatted [-Wclang-format-violations]
            if( m_set.HasActivity( *c ) )
                                     ^
./Libraries/SocketLib/ConnectionManager.h:259:40: warning: code should be clang-formatted [-Wclang-format-violations]
            if( m_set.HasActivity( *c ) )
                                       ^
./Libraries/SocketLib/ConnectionManager.h:259:42: warning: code should be clang-formatted [-Wclang-format-violations]
            if( m_set.HasActivity( *c ) )
                                         ^
./Libraries/SocketLib/ConnectionManager.h:260:14: warning: code should be clang-formatted [-Wclang-format-violations]
            {
             ^
./Libraries/SocketLib/ConnectionManager.h:261:20: warning: code should be clang-formatted [-Wclang-format-violations]
                try
                   ^
./Libraries/SocketLib/ConnectionManager.h:262:18: warning: code should be clang-formatted [-Wclang-format-violations]
                {
                 ^
./Libraries/SocketLib/ConnectionManager.h:263:56: warning: code should be clang-formatted [-Wclang-format-violations]
                    // receive as much data as you can.
                                                       ^
./Libraries/SocketLib/ConnectionManager.h:264:34: warning: code should be clang-formatted [-Wclang-format-violations]
                    c->Receive();
                                 ^
./Libraries/SocketLib/ConnectionManager.h:266:67: warning: code should be clang-formatted [-Wclang-format-violations]
                    // check to see if the connection is flooding.
                                                                  ^
./Libraries/SocketLib/ConnectionManager.h:267:23: warning: code should be clang-formatted [-Wclang-format-violations]
                    if( c->GetCurrentDataRate() > m_maxdatarate )
                      ^
./Libraries/SocketLib/ConnectionManager.h:267:24: warning: code should be clang-formatted [-Wclang-format-violations]
                    if( c->GetCurrentDataRate() > m_maxdatarate )
                       ^
./Libraries/SocketLib/ConnectionManager.h:267:64: warning: code should be clang-formatted [-Wclang-format-violations]
                    if( c->GetCurrentDataRate() > m_maxdatarate )
                                                               ^
./Libraries/SocketLib/ConnectionManager.h:267:66: warning: code should be clang-formatted [-Wclang-format-violations]
                    if( c->GetCurrentDataRate() > m_maxdatarate )
                                                                 ^
./Libraries/SocketLib/ConnectionManager.h:268:22: warning: code should be clang-formatted [-Wclang-format-violations]
                    {
                     ^
./Libraries/SocketLib/ConnectionManager.h:269:60: warning: code should be clang-formatted [-Wclang-format-violations]
                        // too much data was sent, tell the
                                                           ^
./Libraries/SocketLib/ConnectionManager.h:270:44: warning: code should be clang-formatted [-Wclang-format-violations]
                        // protocol handler
                                           ^
./Libraries/SocketLib/ConnectionManager.h:271:36: warning: code should be clang-formatted [-Wclang-format-violations]
                        c->Close();
                                   ^
./Libraries/SocketLib/ConnectionManager.h:272:49: warning: code should be clang-formatted [-Wclang-format-violations]
                        c->Handler()->Flooded();
                                                ^
./Libraries/SocketLib/ConnectionManager.h:274:48: warning: code should be clang-formatted [-Wclang-format-violations]
                        // close the connection
                                               ^
./Libraries/SocketLib/ConnectionManager.h:275:31: warning: code should be clang-formatted [-Wclang-format-violations]
                        Close( c );
                              ^
./Libraries/SocketLib/ConnectionManager.h:275:33: warning: code should be clang-formatted [-Wclang-format-violations]
                        Close( c );
                                ^
./Libraries/SocketLib/ConnectionManager.h:275:36: warning: code should be clang-formatted [-Wclang-format-violations]
                        Close( c );
                                   ^
./Libraries/SocketLib/ConnectionManager.h:276:22: warning: code should be clang-formatted [-Wclang-format-violations]
                    }
                     ^
./Libraries/SocketLib/ConnectionManager.h:277:18: warning: code should be clang-formatted [-Wclang-format-violations]
                }
                 ^
./Libraries/SocketLib/ConnectionManager.h:279:64: warning: code should be clang-formatted [-Wclang-format-violations]
                // this block catches any fatal exceptions that
                                                               ^
./Libraries/SocketLib/ConnectionManager.h:280:65: warning: code should be clang-formatted [-Wclang-format-violations]
                // were thrown when receiving new data. The only
                                                                ^
./Libraries/SocketLib/ConnectionManager.h:281:63: warning: code should be clang-formatted [-Wclang-format-violations]
                // exceptions thrown are major errors, and the 
                                                              ^
./Libraries/SocketLib/ConnectionManager.h:282:60: warning: code should be clang-formatted [-Wclang-format-violations]
                // socket should immediately be closed. So,
                                                           ^
./Libraries/SocketLib/ConnectionManager.h:283:68: warning: code should be clang-formatted [-Wclang-format-violations]
                // the protocol handler is told that the connection
                                                                   ^
./Libraries/SocketLib/ConnectionManager.h:284:54: warning: code should be clang-formatted [-Wclang-format-violations]
                // hung up, and the socket is closed.
                                                     ^
./Libraries/SocketLib/ConnectionManager.h:285:22: warning: code should be clang-formatted [-Wclang-format-violations]
                catch( ... )
                     ^
./Libraries/SocketLib/ConnectionManager.h:285:23: warning: code should be clang-formatted [-Wclang-format-violations]
                catch( ... )
                      ^
./Libraries/SocketLib/ConnectionManager.h:285:27: warning: code should be clang-formatted [-Wclang-format-violations]
                catch( ... )
                          ^
./Libraries/SocketLib/ConnectionManager.h:285:29: warning: code should be clang-formatted [-Wclang-format-violations]
                catch( ... )
                            ^
./Libraries/SocketLib/ConnectionManager.h:286:18: warning: code should be clang-formatted [-Wclang-format-violations]
                {
                 ^
./Libraries/SocketLib/ConnectionManager.h:287:32: warning: code should be clang-formatted [-Wclang-format-violations]
                    c->Close();
                               ^
./Libraries/SocketLib/ConnectionManager.h:288:44: warning: code should be clang-formatted [-Wclang-format-violations]
                    c->Handler()->Hungup();
                                           ^
./Libraries/SocketLib/ConnectionManager.h:289:27: warning: code should be clang-formatted [-Wclang-format-violations]
                    Close( c );
                          ^
./Libraries/SocketLib/ConnectionManager.h:289:29: warning: code should be clang-formatted [-Wclang-format-violations]
                    Close( c );
                            ^
./Libraries/SocketLib/ConnectionManager.h:289:32: warning: code should be clang-formatted [-Wclang-format-violations]
                    Close( c );
                               ^
./Libraries/SocketLib/ConnectionManager.h:290:18: warning: code should be clang-formatted [-Wclang-format-violations]
                }
                 ^
./Libraries/SocketLib/ConnectionManager.h:292:14: warning: code should be clang-formatted [-Wclang-format-violations]
            }   // end activity check
             ^
./Libraries/SocketLib/ConnectionManager.h:292:38: warning: code should be clang-formatted [-Wclang-format-violations]
            }   // end activity check
                                     ^
./Libraries/SocketLib/ConnectionManager.h:294:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }   // end socket loop
         ^
./Libraries/SocketLib/ConnectionManager.h:294:31: warning: code should be clang-formatted [-Wclang-format-violations]
        }   // end socket loop
                              ^
./Libraries/SocketLib/ConnectionManager.h:296:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }   // end check for number of sockets returned by select()
     ^
./Libraries/SocketLib/ConnectionManager.h:297:2: warning: code should be clang-formatted [-Wclang-format-violations]
}
 ^
./Libraries/SocketLib/ConnectionManager.h:304:9: warning: code should be clang-formatted [-Wclang-format-violations]
template<typename protocol, typename defaulthandler>
        ^
./Libraries/SocketLib/ConnectionManager.h:305:57: warning: code should be clang-formatted [-Wclang-format-violations]
void ConnectionManager<protocol, defaulthandler>::Send()
                                                        ^
./Libraries/SocketLib/ConnectionManager.h:306:2: warning: code should be clang-formatted [-Wclang-format-violations]
{
 ^
./Libraries/SocketLib/ConnectionManager.h:307:69: warning: code should be clang-formatted [-Wclang-format-violations]
    // uses the same method as previously shown; keeps two iterators
                                                                    ^
./Libraries/SocketLib/ConnectionManager.h:308:41: warning: code should be clang-formatted [-Wclang-format-violations]
    // due to being able to remove items
                                        ^
./Libraries/SocketLib/ConnectionManager.h:309:42: warning: code should be clang-formatted [-Wclang-format-violations]
    clistitr itr = m_connections.begin();
                                         ^
./Libraries/SocketLib/ConnectionManager.h:310:16: warning: code should be clang-formatted [-Wclang-format-violations]
    clistitr c;
               ^
./Libraries/SocketLib/ConnectionManager.h:312:37: warning: code should be clang-formatted [-Wclang-format-violations]
    // loop through every connection
                                    ^
./Libraries/SocketLib/ConnectionManager.h:313:10: warning: code should be clang-formatted [-Wclang-format-violations]
    while( itr != m_connections.end() )
         ^
./Libraries/SocketLib/ConnectionManager.h:313:11: warning: code should be clang-formatted [-Wclang-format-violations]
    while( itr != m_connections.end() )
          ^
./Libraries/SocketLib/ConnectionManager.h:313:38: warning: code should be clang-formatted [-Wclang-format-violations]
    while( itr != m_connections.end() )
                                     ^
./Libraries/SocketLib/ConnectionManager.h:313:40: warning: code should be clang-formatted [-Wclang-format-violations]
    while( itr != m_connections.end() )
                                       ^
./Libraries/SocketLib/ConnectionManager.h:314:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/ConnectionManager.h:315:74: warning: code should be clang-formatted [-Wclang-format-violations]
        // move "itr" to the next connection, but keep "c" on the current
                                                                         ^
./Libraries/SocketLib/ConnectionManager.h:316:23: warning: code should be clang-formatted [-Wclang-format-violations]
        // connection.
                      ^
./Libraries/SocketLib/ConnectionManager.h:317:19: warning: code should be clang-formatted [-Wclang-format-violations]
        c = itr++;
                  ^
./Libraries/SocketLib/ConnectionManager.h:319:60: warning: code should be clang-formatted [-Wclang-format-violations]
        // now try to send all buffered data on the socket.
                                                           ^
./Libraries/SocketLib/ConnectionManager.h:320:12: warning: code should be clang-formatted [-Wclang-format-violations]
        try
           ^
./Libraries/SocketLib/ConnectionManager.h:321:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/ConnectionManager.h:322:29: warning: code should be clang-formatted [-Wclang-format-violations]
            c->SendBuffer();
                            ^
./Libraries/SocketLib/ConnectionManager.h:324:76: warning: code should be clang-formatted [-Wclang-format-violations]
            // check to see if there are problems sending to the connection
                                                                           ^
./Libraries/SocketLib/ConnectionManager.h:325:71: warning: code should be clang-formatted [-Wclang-format-violations]
            // these are usually caused by exploits or client crashes.
                                                                      ^
./Libraries/SocketLib/ConnectionManager.h:326:15: warning: code should be clang-formatted [-Wclang-format-violations]
            if( c->GetBufferedBytes() > m_maxbuffered || 
              ^
./Libraries/SocketLib/ConnectionManager.h:326:16: warning: code should be clang-formatted [-Wclang-format-violations]
            if( c->GetBufferedBytes() > m_maxbuffered || 
               ^
./Libraries/SocketLib/ConnectionManager.h:326:57: warning: code should be clang-formatted [-Wclang-format-violations]
            if( c->GetBufferedBytes() > m_maxbuffered || 
                                                        ^
./Libraries/SocketLib/ConnectionManager.h:327:53: warning: code should be clang-formatted [-Wclang-format-violations]
                c->GetLastSendTime() > m_sendtimeout )
                                                    ^
./Libraries/SocketLib/ConnectionManager.h:327:55: warning: code should be clang-formatted [-Wclang-format-violations]
                c->GetLastSendTime() > m_sendtimeout )
                                                      ^
./Libraries/SocketLib/ConnectionManager.h:328:14: warning: code should be clang-formatted [-Wclang-format-violations]
            {
             ^
./Libraries/SocketLib/ConnectionManager.h:329:28: warning: code should be clang-formatted [-Wclang-format-violations]
                c->Close();
                           ^
./Libraries/SocketLib/ConnectionManager.h:330:40: warning: code should be clang-formatted [-Wclang-format-violations]
                c->Handler()->Hungup();
                                       ^
./Libraries/SocketLib/ConnectionManager.h:331:23: warning: code should be clang-formatted [-Wclang-format-violations]
                Close( c );
                      ^
./Libraries/SocketLib/ConnectionManager.h:331:25: warning: code should be clang-formatted [-Wclang-format-violations]
                Close( c );
                        ^
./Libraries/SocketLib/ConnectionManager.h:331:28: warning: code should be clang-formatted [-Wclang-format-violations]
                Close( c );
                           ^
./Libraries/SocketLib/ConnectionManager.h:332:14: warning: code should be clang-formatted [-Wclang-format-violations]
            }
             ^
./Libraries/SocketLib/ConnectionManager.h:333:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/ConnectionManager.h:334:14: warning: code should be clang-formatted [-Wclang-format-violations]
        catch( ... )
             ^
./Libraries/SocketLib/ConnectionManager.h:334:15: warning: code should be clang-formatted [-Wclang-format-violations]
        catch( ... )
              ^
./Libraries/SocketLib/ConnectionManager.h:334:19: warning: code should be clang-formatted [-Wclang-format-violations]
        catch( ... )
                  ^
./Libraries/SocketLib/ConnectionManager.h:334:21: warning: code should be clang-formatted [-Wclang-format-violations]
        catch( ... )
                    ^
./Libraries/SocketLib/ConnectionManager.h:335:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/ConnectionManager.h:336:24: warning: code should be clang-formatted [-Wclang-format-violations]
            c->Close();
                       ^
./Libraries/SocketLib/ConnectionManager.h:337:36: warning: code should be clang-formatted [-Wclang-format-violations]
            c->Handler()->Hungup();
                                   ^
./Libraries/SocketLib/ConnectionManager.h:338:19: warning: code should be clang-formatted [-Wclang-format-violations]
            Close( c );
                  ^
./Libraries/SocketLib/ConnectionManager.h:338:21: warning: code should be clang-formatted [-Wclang-format-violations]
            Close( c );
                    ^
./Libraries/SocketLib/ConnectionManager.h:338:24: warning: code should be clang-formatted [-Wclang-format-violations]
            Close( c );
                       ^
./Libraries/SocketLib/ConnectionManager.h:339:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/ConnectionManager.h:340:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }   // end while-loop
     ^
./Libraries/SocketLib/ConnectionManager.h:341:2: warning: code should be clang-formatted [-Wclang-format-violations]
}
 ^
./Libraries/SocketLib/ConnectionManager.h:349:9: warning: code should be clang-formatted [-Wclang-format-violations]
template<typename protocol, typename defaulthandler>
        ^
./Libraries/SocketLib/ConnectionManager.h:350:69: warning: code should be clang-formatted [-Wclang-format-violations]
void ConnectionManager<protocol, defaulthandler>::CloseConnections()
                                                                    ^
./Libraries/SocketLib/ConnectionManager.h:351:2: warning: code should be clang-formatted [-Wclang-format-violations]
{
 ^
./Libraries/SocketLib/ConnectionManager.h:352:42: warning: code should be clang-formatted [-Wclang-format-violations]
    clistitr itr = m_connections.begin();
                                         ^
./Libraries/SocketLib/ConnectionManager.h:353:16: warning: code should be clang-formatted [-Wclang-format-violations]
    clistitr c;
               ^
./Libraries/SocketLib/ConnectionManager.h:355:10: warning: code should be clang-formatted [-Wclang-format-violations]
    while( itr != m_connections.end() )
         ^
./Libraries/SocketLib/ConnectionManager.h:355:11: warning: code should be clang-formatted [-Wclang-format-violations]
    while( itr != m_connections.end() )
          ^
./Libraries/SocketLib/ConnectionManager.h:355:38: warning: code should be clang-formatted [-Wclang-format-violations]
    while( itr != m_connections.end() )
                                     ^
./Libraries/SocketLib/ConnectionManager.h:355:40: warning: code should be clang-formatted [-Wclang-format-violations]
    while( itr != m_connections.end() )
                                       ^
./Libraries/SocketLib/ConnectionManager.h:356:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/ConnectionManager.h:357:78: warning: code should be clang-formatted [-Wclang-format-violations]
        // retain the value of the iterator in "c" while moving "itr" forward
                                                                             ^
./Libraries/SocketLib/ConnectionManager.h:358:19: warning: code should be clang-formatted [-Wclang-format-violations]
        c = itr++;
                  ^
./Libraries/SocketLib/ConnectionManager.h:360:11: warning: code should be clang-formatted [-Wclang-format-violations]
        if( c->Closed() )
          ^
./Libraries/SocketLib/ConnectionManager.h:360:12: warning: code should be clang-formatted [-Wclang-format-violations]
        if( c->Closed() )
           ^
./Libraries/SocketLib/ConnectionManager.h:360:24: warning: code should be clang-formatted [-Wclang-format-violations]
        if( c->Closed() )
                       ^
./Libraries/SocketLib/ConnectionManager.h:360:26: warning: code should be clang-formatted [-Wclang-format-violations]
        if( c->Closed() )
                         ^
./Libraries/SocketLib/ConnectionManager.h:361:19: warning: code should be clang-formatted [-Wclang-format-violations]
            Close( c );
                  ^
./Libraries/SocketLib/ConnectionManager.h:361:21: warning: code should be clang-formatted [-Wclang-format-violations]
            Close( c );
                    ^
./Libraries/SocketLib/ConnectionManager.h:361:24: warning: code should be clang-formatted [-Wclang-format-violations]
            Close( c );
                       ^
./Libraries/SocketLib/ConnectionManager.h:363:2: warning: code should be clang-formatted [-Wclang-format-violations]
}
 ^
./Libraries/SocketLib/ConnectionManager.h:366:2: warning: code should be clang-formatted [-Wclang-format-violations]
}   // end namespace SocketLib
 ^
./Libraries/SocketLib/ListeningManager.h:5:68: warning: code should be clang-formatted [-Wclang-format-violations]
// class, which manages incomming connections on a listening socket
                                                                   ^
./Libraries/SocketLib/ListeningManager.h:9:27: warning: code should be clang-formatted [-Wclang-format-violations]
#define LISTENINGMANAGER_H
                          ^
./Libraries/SocketLib/ListeningManager.h:15:1: warning: code should be clang-formatted [-Wclang-format-violations]
#include "SocketLibTypes.h"
^
./Libraries/SocketLib/ListeningManager.h:22:20: warning: code should be clang-formatted [-Wclang-format-violations]
namespace SocketLib
                   ^
./Libraries/SocketLib/ListeningManager.h:26:9: warning: code should be clang-formatted [-Wclang-format-violations]
template<typename protocol, typename defaulthandler>
        ^
./Libraries/SocketLib/ListeningManager.h:26:53: warning: code should be clang-formatted [-Wclang-format-violations]
template<typename protocol, typename defaulthandler>
                                                    ^
./Libraries/SocketLib/ListeningManager.h:27:25: warning: code should be clang-formatted [-Wclang-format-violations]
class ConnectionManager;
                        ^
./Libraries/SocketLib/ListeningManager.h:31:70: warning: code should be clang-formatted [-Wclang-format-violations]
// Description: This is the function that will be used when executing 
                                                                     ^
./Libraries/SocketLib/ListeningManager.h:33:72: warning: code should be clang-formatted [-Wclang-format-violations]
// ====================================================================
                                                                       ^
./Libraries/SocketLib/ListeningManager.h:39:65: warning: code should be clang-formatted [-Wclang-format-violations]
//              a new socket is accepted, it is then sent to its 
                                                                ^
./Libraries/SocketLib/ListeningManager.h:42:9: warning: code should be clang-formatted [-Wclang-format-violations]
template<typename protocol, typename defaulthandler>
        ^
./Libraries/SocketLib/ListeningManager.h:42:53: warning: code should be clang-formatted [-Wclang-format-violations]
template<typename protocol, typename defaulthandler>
                                                    ^
./Libraries/SocketLib/ListeningManager.h:43:23: warning: code should be clang-formatted [-Wclang-format-violations]
class ListeningManager
                      ^
./Libraries/SocketLib/ListeningManager.h:45:8: warning: code should be clang-formatted [-Wclang-format-violations]
public:
       ^
./Libraries/SocketLib/ListeningManager.h:46:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/ListeningManager.h:47:42: warning: code should be clang-formatted [-Wclang-format-violations]
    // Description: construct the manager
                                         ^
./Libraries/SocketLib/ListeningManager.h:48:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/ListeningManager.h:49:24: warning: code should be clang-formatted [-Wclang-format-violations]
    ListeningManager();
                       ^
./Libraries/SocketLib/ListeningManager.h:52:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/ListeningManager.h:53:75: warning: code should be clang-formatted [-Wclang-format-violations]
    // Description: The destructor should close all of the listening socks
                                                                          ^
./Libraries/SocketLib/ListeningManager.h:54:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/ListeningManager.h:55:25: warning: code should be clang-formatted [-Wclang-format-violations]
    ~ListeningManager();
                        ^
./Libraries/SocketLib/ListeningManager.h:58:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/ListeningManager.h:59:52: warning: code should be clang-formatted [-Wclang-format-violations]
    // Description: This adds a port to the manager
                                                   ^
./Libraries/SocketLib/ListeningManager.h:60:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/ListeningManager.h:61:18: warning: code should be clang-formatted [-Wclang-format-violations]
    void AddPort( port p_port );
                 ^
./Libraries/SocketLib/ListeningManager.h:61:30: warning: code should be clang-formatted [-Wclang-format-violations]
    void AddPort( port p_port );
                             ^
./Libraries/SocketLib/ListeningManager.h:61:33: warning: code should be clang-formatted [-Wclang-format-violations]
    void AddPort( port p_port );
                                ^
./Libraries/SocketLib/ListeningManager.h:64:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/ListeningManager.h:65:74: warning: code should be clang-formatted [-Wclang-format-violations]
    // Description: This function tells the listening manager about which
                                                                         ^
./Libraries/SocketLib/ListeningManager.h:66:68: warning: code should be clang-formatted [-Wclang-format-violations]
    //              connection manager it should use whenever a new
                                                                   ^
./Libraries/SocketLib/ListeningManager.h:67:40: warning: code should be clang-formatted [-Wclang-format-violations]
    //              socket is accepted.
                                       ^
./Libraries/SocketLib/ListeningManager.h:68:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/ListeningManager.h:69:9: warning: code should be clang-formatted [-Wclang-format-violations]
    void SetConnectionManager( ConnectionManager<protocol, defaulthandler>* p_manager );
        ^
./Libraries/SocketLib/ListeningManager.h:69:31: warning: code should be clang-formatted [-Wclang-format-violations]
    void SetConnectionManager( ConnectionManager<protocol, defaulthandler>* p_manager );
                              ^
./Libraries/SocketLib/ListeningManager.h:69:75: warning: code should be clang-formatted [-Wclang-format-violations]
    void SetConnectionManager( ConnectionManager<protocol, defaulthandler>* p_manager );
                                                                          ^
./Libraries/SocketLib/ListeningManager.h:69:76: warning: code should be clang-formatted [-Wclang-format-violations]
    void SetConnectionManager( ConnectionManager<protocol, defaulthandler>* p_manager );
                                                                           ^
./Libraries/SocketLib/ListeningManager.h:69:86: warning: code should be clang-formatted [-Wclang-format-violations]
    void SetConnectionManager( ConnectionManager<protocol, defaulthandler>* p_manager );
                                                                                     ^
./Libraries/SocketLib/ListeningManager.h:69:89: warning: code should be clang-formatted [-Wclang-format-violations]
    void SetConnectionManager( ConnectionManager<protocol, defaulthandler>* p_manager );
                                                                                        ^
./Libraries/SocketLib/ListeningManager.h:73:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/ListeningManager.h:74:70: warning: code should be clang-formatted [-Wclang-format-violations]
    // Description: This listens on the listening sockets for any new 
                                                                     ^
./Libraries/SocketLib/ListeningManager.h:75:32: warning: code should be clang-formatted [-Wclang-format-violations]
    //              connections
                               ^
./Libraries/SocketLib/ListeningManager.h:76:76: warning: code should be clang-formatted [-Wclang-format-violations]
    // ====================================================================
                                                                           ^
./Libraries/SocketLib/ListeningManager.h:79:11: warning: code should be clang-formatted [-Wclang-format-violations]
protected:
          ^
./Libraries/SocketLib/ListeningManager.h:80:69: warning: code should be clang-formatted [-Wclang-format-violations]
    // this vector contains all of the sockets that the manager will
                                                                    ^
./Libraries/SocketLib/ListeningManager.h:81:24: warning: code should be clang-formatted [-Wclang-format-violations]
    // be listening on.
                       ^
./Libraries/SocketLib/ListeningManager.h:82:44: warning: code should be clang-formatted [-Wclang-format-violations]
    std::vector<ListeningSocket> m_sockets;
                                           ^
./Libraries/SocketLib/ListeningManager.h:84:66: warning: code should be clang-formatted [-Wclang-format-violations]
    // this is a set of connections that will be used for polling
                                                                 ^
./Libraries/SocketLib/ListeningManager.h:85:21: warning: code should be clang-formatted [-Wclang-format-violations]
    SocketSet m_set;
                    ^
./Libraries/SocketLib/ListeningManager.h:87:73: warning: code should be clang-formatted [-Wclang-format-violations]
    // a pointer to the socket manager that will manage sockets whenever
                                                                        ^
./Libraries/SocketLib/ListeningManager.h:88:33: warning: code should be clang-formatted [-Wclang-format-violations]
    // a new socket is accepted.
                                ^
./Libraries/SocketLib/ListeningManager.h:89:48: warning: code should be clang-formatted [-Wclang-format-violations]
    ConnectionManager<protocol, defaulthandler>* m_manager;
                                               ^
./Libraries/SocketLib/ListeningManager.h:89:49: warning: code should be clang-formatted [-Wclang-format-violations]
    ConnectionManager<protocol, defaulthandler>* m_manager;
                                                ^
./Libraries/SocketLib/ListeningManager.h:90:3: warning: code should be clang-formatted [-Wclang-format-violations]
};
  ^
./Libraries/SocketLib/ListeningManager.h:100:9: warning: code should be clang-formatted [-Wclang-format-violations]
template<typename protocol, typename defaulthandler>
        ^
./Libraries/SocketLib/ListeningManager.h:101:63: warning: code should be clang-formatted [-Wclang-format-violations]
ListeningManager<protocol, defaulthandler>::ListeningManager()
                                                              ^
./Libraries/SocketLib/ListeningManager.h:102:2: warning: code should be clang-formatted [-Wclang-format-violations]
{
 ^
./Libraries/SocketLib/ListeningManager.h:104:2: warning: code should be clang-formatted [-Wclang-format-violations]
}
 ^
./Libraries/SocketLib/ListeningManager.h:110:9: warning: code should be clang-formatted [-Wclang-format-violations]
template<typename protocol, typename defaulthandler>
        ^
./Libraries/SocketLib/ListeningManager.h:111:64: warning: code should be clang-formatted [-Wclang-format-violations]
ListeningManager<protocol, defaulthandler>::~ListeningManager()
                                                               ^
./Libraries/SocketLib/ListeningManager.h:112:2: warning: code should be clang-formatted [-Wclang-format-violations]
{   
 ^
./Libraries/SocketLib/ListeningManager.h:113:44: warning: code should be clang-formatted [-Wclang-format-violations]
    // just close all the listening sockets
                                           ^
./Libraries/SocketLib/ListeningManager.h:114:8: warning: code should be clang-formatted [-Wclang-format-violations]
    for( size_t i = 0; i < m_sockets.size(); i++ )
       ^
./Libraries/SocketLib/ListeningManager.h:114:9: warning: code should be clang-formatted [-Wclang-format-violations]
    for( size_t i = 0; i < m_sockets.size(); i++ )
        ^
./Libraries/SocketLib/ListeningManager.h:114:49: warning: code should be clang-formatted [-Wclang-format-violations]
    for( size_t i = 0; i < m_sockets.size(); i++ )
                                                ^
./Libraries/SocketLib/ListeningManager.h:114:51: warning: code should be clang-formatted [-Wclang-format-violations]
    for( size_t i = 0; i < m_sockets.size(); i++ )
                                                  ^
./Libraries/SocketLib/ListeningManager.h:115:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/ListeningManager.h:116:30: warning: code should be clang-formatted [-Wclang-format-violations]
        m_sockets[i].Close();
                             ^
./Libraries/SocketLib/ListeningManager.h:118:2: warning: code should be clang-formatted [-Wclang-format-violations]
}
 ^
./Libraries/SocketLib/ListeningManager.h:124:9: warning: code should be clang-formatted [-Wclang-format-violations]
template<typename protocol, typename defaulthandler>
        ^
./Libraries/SocketLib/ListeningManager.h:125:58: warning: code should be clang-formatted [-Wclang-format-violations]
void ListeningManager<protocol, defaulthandler>::AddPort( port p_port )
                                                         ^
./Libraries/SocketLib/ListeningManager.h:125:70: warning: code should be clang-formatted [-Wclang-format-violations]
void ListeningManager<protocol, defaulthandler>::AddPort( port p_port )
                                                                     ^
./Libraries/SocketLib/ListeningManager.h:125:72: warning: code should be clang-formatted [-Wclang-format-violations]
void ListeningManager<protocol, defaulthandler>::AddPort( port p_port )
                                                                       ^
./Libraries/SocketLib/ListeningManager.h:126:2: warning: code should be clang-formatted [-Wclang-format-violations]
{
 ^
./Libraries/SocketLib/ListeningManager.h:127:7: warning: code should be clang-formatted [-Wclang-format-violations]
    if( m_sockets.size() == MAX )
      ^
./Libraries/SocketLib/ListeningManager.h:127:8: warning: code should be clang-formatted [-Wclang-format-violations]
    if( m_sockets.size() == MAX )
       ^
./Libraries/SocketLib/ListeningManager.h:127:32: warning: code should be clang-formatted [-Wclang-format-violations]
    if( m_sockets.size() == MAX )
                               ^
./Libraries/SocketLib/ListeningManager.h:127:34: warning: code should be clang-formatted [-Wclang-format-violations]
    if( m_sockets.size() == MAX )
                                 ^
./Libraries/SocketLib/ListeningManager.h:128:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/ListeningManager.h:129:21: warning: code should be clang-formatted [-Wclang-format-violations]
        Exception e( ESocketLimitReached );
                    ^
./Libraries/SocketLib/ListeningManager.h:129:41: warning: code should be clang-formatted [-Wclang-format-violations]
        Exception e( ESocketLimitReached );
                                        ^
./Libraries/SocketLib/ListeningManager.h:129:44: warning: code should be clang-formatted [-Wclang-format-violations]
        Exception e( ESocketLimitReached );
                                           ^
./Libraries/SocketLib/ListeningManager.h:130:15: warning: code should be clang-formatted [-Wclang-format-violations]
        throw( e );
              ^
./Libraries/SocketLib/ListeningManager.h:130:17: warning: code should be clang-formatted [-Wclang-format-violations]
        throw( e );
                ^
./Libraries/SocketLib/ListeningManager.h:130:20: warning: code should be clang-formatted [-Wclang-format-violations]
        throw( e );
                   ^
./Libraries/SocketLib/ListeningManager.h:131:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }
     ^
./Libraries/SocketLib/ListeningManager.h:133:27: warning: code should be clang-formatted [-Wclang-format-violations]
    // create a new socket
                          ^
./Libraries/SocketLib/ListeningManager.h:134:27: warning: code should be clang-formatted [-Wclang-format-violations]
    ListeningSocket lsock;
                          ^
./Libraries/SocketLib/ListeningManager.h:136:36: warning: code should be clang-formatted [-Wclang-format-violations]
    // listen on the requested port
                                   ^
./Libraries/SocketLib/ListeningManager.h:137:18: warning: code should be clang-formatted [-Wclang-format-violations]
    lsock.Listen( p_port );
                 ^
./Libraries/SocketLib/ListeningManager.h:137:25: warning: code should be clang-formatted [-Wclang-format-violations]
    lsock.Listen( p_port );
                        ^
./Libraries/SocketLib/ListeningManager.h:137:28: warning: code should be clang-formatted [-Wclang-format-violations]
    lsock.Listen( p_port );
                           ^
./Libraries/SocketLib/ListeningManager.h:139:65: warning: code should be clang-formatted [-Wclang-format-violations]
    // make the socket non-blocking, so that it won't block if a
                                                                ^
./Libraries/SocketLib/ListeningManager.h:140:65: warning: code should be clang-formatted [-Wclang-format-violations]
    // connection exploit is used when accepting (see Chapter 4)
                                                                ^
./Libraries/SocketLib/ListeningManager.h:141:23: warning: code should be clang-formatted [-Wclang-format-violations]
    lsock.SetBlocking( false );
                      ^
./Libraries/SocketLib/ListeningManager.h:141:29: warning: code should be clang-formatted [-Wclang-format-violations]
    lsock.SetBlocking( false );
                            ^
./Libraries/SocketLib/ListeningManager.h:141:32: warning: code should be clang-formatted [-Wclang-format-violations]
    lsock.SetBlocking( false );
                               ^
./Libraries/SocketLib/ListeningManager.h:143:43: warning: code should be clang-formatted [-Wclang-format-violations]
    // add the socket to the socket vector
                                          ^
./Libraries/SocketLib/ListeningManager.h:144:25: warning: code should be clang-formatted [-Wclang-format-violations]
    m_sockets.push_back( lsock );
                        ^
./Libraries/SocketLib/ListeningManager.h:144:31: warning: code should be clang-formatted [-Wclang-format-violations]
    m_sockets.push_back( lsock );
                              ^
./Libraries/SocketLib/ListeningManager.h:144:34: warning: code should be clang-formatted [-Wclang-format-violations]
    m_sockets.push_back( lsock );
                                 ^
./Libraries/SocketLib/ListeningManager.h:146:44: warning: code should be clang-formatted [-Wclang-format-violations]
    // add the socket descriptor to the set
                                           ^
./Libraries/SocketLib/ListeningManager.h:147:21: warning: code should be clang-formatted [-Wclang-format-violations]
    m_set.AddSocket( lsock );
                    ^
./Libraries/SocketLib/ListeningManager.h:147:27: warning: code should be clang-formatted [-Wclang-format-violations]
    m_set.AddSocket( lsock );
                          ^
./Libraries/SocketLib/ListeningManager.h:148:2: warning: code should be clang-formatted [-Wclang-format-violations]
}
 ^
./Libraries/SocketLib/ListeningManager.h:156:9: warning: code should be clang-formatted [-Wclang-format-violations]
template<typename protocol, typename defaulthandler>
        ^
./Libraries/SocketLib/ListeningManager.h:157:50: warning: code should be clang-formatted [-Wclang-format-violations]
void ListeningManager<protocol, defaulthandler>::
                                                 ^
./Libraries/SocketLib/ListeningManager.h:158:22: warning: code should be clang-formatted [-Wclang-format-violations]
SetConnectionManager( ConnectionManager<protocol, defaulthandler>* p_manager )
                     ^
./Libraries/SocketLib/ListeningManager.h:158:66: warning: code should be clang-formatted [-Wclang-format-violations]
SetConnectionManager( ConnectionManager<protocol, defaulthandler>* p_manager )
                                                                 ^
./Libraries/SocketLib/ListeningManager.h:158:67: warning: code should be clang-formatted [-Wclang-format-violations]
SetConnectionManager( ConnectionManager<protocol, defaulthandler>* p_manager )
                                                                  ^
./Libraries/SocketLib/ListeningManager.h:158:77: warning: code should be clang-formatted [-Wclang-format-violations]
SetConnectionManager( ConnectionManager<protocol, defaulthandler>* p_manager )
                                                                            ^
./Libraries/SocketLib/ListeningManager.h:158:79: warning: code should be clang-formatted [-Wclang-format-violations]
SetConnectionManager( ConnectionManager<protocol, defaulthandler>* p_manager )
                                                                              ^
./Libraries/SocketLib/ListeningManager.h:159:2: warning: code should be clang-formatted [-Wclang-format-violations]
{
 ^
./Libraries/SocketLib/ListeningManager.h:160:35: warning: code should be clang-formatted [-Wclang-format-violations]
    // set the new action function
                                  ^
./Libraries/SocketLib/ListeningManager.h:162:2: warning: code should be clang-formatted [-Wclang-format-violations]
}
 ^
./Libraries/SocketLib/ListeningManager.h:165:9: warning: code should be clang-formatted [-Wclang-format-violations]
template<typename protocol, typename defaulthandler>
        ^
./Libraries/SocketLib/ListeningManager.h:166:58: warning: code should be clang-formatted [-Wclang-format-violations]
void ListeningManager<protocol, defaulthandler>::Listen()
                                                         ^
./Libraries/SocketLib/ListeningManager.h:167:2: warning: code should be clang-formatted [-Wclang-format-violations]
{
 ^
./Libraries/SocketLib/ListeningManager.h:168:77: warning: code should be clang-formatted [-Wclang-format-violations]
    // define a data socket that will receive connections from the listening
                                                                            ^
./Libraries/SocketLib/ListeningManager.h:169:15: warning: code should be clang-formatted [-Wclang-format-violations]
    // sockets
              ^
./Libraries/SocketLib/ListeningManager.h:170:25: warning: code should be clang-formatted [-Wclang-format-violations]
    DataSocket datasock;
                        ^
./Libraries/SocketLib/ListeningManager.h:173:49: warning: code should be clang-formatted [-Wclang-format-violations]
    // detect if any sockets have action on them
                                                ^
./Libraries/SocketLib/ListeningManager.h:174:7: warning: code should be clang-formatted [-Wclang-format-violations]
    if( m_set.Poll() > 0 )
      ^
./Libraries/SocketLib/ListeningManager.h:174:8: warning: code should be clang-formatted [-Wclang-format-violations]
    if( m_set.Poll() > 0 )
       ^
./Libraries/SocketLib/ListeningManager.h:174:25: warning: code should be clang-formatted [-Wclang-format-violations]
    if( m_set.Poll() > 0 )
                        ^
./Libraries/SocketLib/ListeningManager.h:174:27: warning: code should be clang-formatted [-Wclang-format-violations]
    if( m_set.Poll() > 0 )
                          ^
./Libraries/SocketLib/ListeningManager.h:175:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/ListeningManager.h:176:47: warning: code should be clang-formatted [-Wclang-format-violations]
        // loop through every listening socket
                                              ^
./Libraries/SocketLib/ListeningManager.h:177:12: warning: code should be clang-formatted [-Wclang-format-violations]
        for( size_t s = 0; s < m_sockets.size(); s++ )
           ^
./Libraries/SocketLib/ListeningManager.h:177:13: warning: code should be clang-formatted [-Wclang-format-violations]
        for( size_t s = 0; s < m_sockets.size(); s++ )
            ^
./Libraries/SocketLib/ListeningManager.h:177:53: warning: code should be clang-formatted [-Wclang-format-violations]
        for( size_t s = 0; s < m_sockets.size(); s++ )
                                                    ^
./Libraries/SocketLib/ListeningManager.h:177:55: warning: code should be clang-formatted [-Wclang-format-violations]
        for( size_t s = 0; s < m_sockets.size(); s++ )
                                                      ^
./Libraries/SocketLib/ListeningManager.h:178:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/ListeningManager.h:179:75: warning: code should be clang-formatted [-Wclang-format-violations]
            // check to see if the current socket has a connection waiting
                                                                          ^
./Libraries/SocketLib/ListeningManager.h:180:15: warning: code should be clang-formatted [-Wclang-format-violations]
            if( m_set.HasActivity( m_sockets[s] ) )
              ^
./Libraries/SocketLib/ListeningManager.h:180:16: warning: code should be clang-formatted [-Wclang-format-violations]
            if( m_set.HasActivity( m_sockets[s] ) )
               ^
./Libraries/SocketLib/ListeningManager.h:180:35: warning: code should be clang-formatted [-Wclang-format-violations]
            if( m_set.HasActivity( m_sockets[s] ) )
                                  ^
./Libraries/SocketLib/ListeningManager.h:180:48: warning: code should be clang-formatted [-Wclang-format-violations]
            if( m_set.HasActivity( m_sockets[s] ) )
                                               ^
./Libraries/SocketLib/ListeningManager.h:180:50: warning: code should be clang-formatted [-Wclang-format-violations]
            if( m_set.HasActivity( m_sockets[s] ) )
                                                 ^
./Libraries/SocketLib/ListeningManager.h:180:52: warning: code should be clang-formatted [-Wclang-format-violations]
            if( m_set.HasActivity( m_sockets[s] ) )
                                                   ^
./Libraries/SocketLib/ListeningManager.h:181:14: warning: code should be clang-formatted [-Wclang-format-violations]
            {
             ^
./Libraries/SocketLib/ListeningManager.h:182:20: warning: code should be clang-formatted [-Wclang-format-violations]
                try
                   ^
./Libraries/SocketLib/ListeningManager.h:183:18: warning: code should be clang-formatted [-Wclang-format-violations]
                {
                 ^
./Libraries/SocketLib/ListeningManager.h:184:45: warning: code should be clang-formatted [-Wclang-format-violations]
                    // accept the connection
                                            ^
./Libraries/SocketLib/ListeningManager.h:185:54: warning: code should be clang-formatted [-Wclang-format-violations]
                    datasock = m_sockets[s].Accept();
                                                     ^
./Libraries/SocketLib/ListeningManager.h:187:70: warning: code should be clang-formatted [-Wclang-format-violations]
                    // run the action function on the new data socket
                                                                     ^
./Libraries/SocketLib/ListeningManager.h:188:46: warning: code should be clang-formatted [-Wclang-format-violations]
                    m_manager->NewConnection( datasock );
                                             ^
./Libraries/SocketLib/ListeningManager.h:188:55: warning: code should be clang-formatted [-Wclang-format-violations]
                    m_manager->NewConnection( datasock );
                                                      ^
./Libraries/SocketLib/ListeningManager.h:188:58: warning: code should be clang-formatted [-Wclang-format-violations]
                    m_manager->NewConnection( datasock );
                                                         ^
./Libraries/SocketLib/ListeningManager.h:189:18: warning: code should be clang-formatted [-Wclang-format-violations]
                }
                 ^
./Libraries/SocketLib/ListeningManager.h:191:68: warning: code should be clang-formatted [-Wclang-format-violations]
                // catch any exceptions, and rethrow it if it isn't
                                                                   ^
./Libraries/SocketLib/ListeningManager.h:192:69: warning: code should be clang-formatted [-Wclang-format-violations]
                // EWOULDBLOCK. This is done because of a connection
                                                                    ^
./Libraries/SocketLib/ListeningManager.h:193:68: warning: code should be clang-formatted [-Wclang-format-violations]
                // exploit that is possible, by causing a socket to
                                                                   ^
./Libraries/SocketLib/ListeningManager.h:194:73: warning: code should be clang-formatted [-Wclang-format-violations]
                // detect a connection, but then not be able to retrieve
                                                                        ^
./Libraries/SocketLib/ListeningManager.h:195:67: warning: code should be clang-formatted [-Wclang-format-violations]
                // the connection once it gets to the accept call.
                                                                  ^
./Libraries/SocketLib/ListeningManager.h:196:72: warning: code should be clang-formatted [-Wclang-format-violations]
                // So, if the connection would block, this just ignores
                                                                       ^
./Libraries/SocketLib/ListeningManager.h:197:70: warning: code should be clang-formatted [-Wclang-format-violations]
                // it, but if any other error occurs, it is rethrown.
                                                                     ^
./Libraries/SocketLib/ListeningManager.h:198:22: warning: code should be clang-formatted [-Wclang-format-violations]
                catch( Exception& e )
                     ^
./Libraries/SocketLib/ListeningManager.h:198:23: warning: code should be clang-formatted [-Wclang-format-violations]
                catch( Exception& e )
                      ^
./Libraries/SocketLib/ListeningManager.h:198:33: warning: code should be clang-formatted [-Wclang-format-violations]
                catch( Exception& e )
                                ^
./Libraries/SocketLib/ListeningManager.h:198:34: warning: code should be clang-formatted [-Wclang-format-violations]
                catch( Exception& e )
                                 ^
./Libraries/SocketLib/ListeningManager.h:198:36: warning: code should be clang-formatted [-Wclang-format-violations]
                catch( Exception& e )
                                   ^
./Libraries/SocketLib/ListeningManager.h:198:38: warning: code should be clang-formatted [-Wclang-format-violations]
                catch( Exception& e )
                                     ^
./Libraries/SocketLib/ListeningManager.h:199:18: warning: code should be clang-formatted [-Wclang-format-violations]
                {
                 ^
./Libraries/SocketLib/ListeningManager.h:200:23: warning: code should be clang-formatted [-Wclang-format-violations]
                    if( e.ErrorCode() != EOperationWouldBlock )
                      ^
./Libraries/SocketLib/ListeningManager.h:200:24: warning: code should be clang-formatted [-Wclang-format-violations]
                    if( e.ErrorCode() != EOperationWouldBlock )
                       ^
./Libraries/SocketLib/ListeningManager.h:200:62: warning: code should be clang-formatted [-Wclang-format-violations]
                    if( e.ErrorCode() != EOperationWouldBlock )
                                                             ^
./Libraries/SocketLib/ListeningManager.h:200:64: warning: code should be clang-formatted [-Wclang-format-violations]
                    if( e.ErrorCode() != EOperationWouldBlock )
                                                               ^
./Libraries/SocketLib/ListeningManager.h:201:22: warning: code should be clang-formatted [-Wclang-format-violations]
                    {
                     ^
./Libraries/SocketLib/ListeningManager.h:202:33: warning: code should be clang-formatted [-Wclang-format-violations]
                        throw e;
                                ^
./Libraries/SocketLib/ListeningManager.h:203:22: warning: code should be clang-formatted [-Wclang-format-violations]
                    }
                     ^
./Libraries/SocketLib/ListeningManager.h:204:18: warning: code should be clang-formatted [-Wclang-format-violations]
                }
                 ^
./Libraries/SocketLib/ListeningManager.h:205:14: warning: code should be clang-formatted [-Wclang-format-violations]
            }   // end activity check
             ^
./Libraries/SocketLib/ListeningManager.h:205:38: warning: code should be clang-formatted [-Wclang-format-violations]
            }   // end activity check
                                     ^
./Libraries/SocketLib/ListeningManager.h:206:31: warning: code should be clang-formatted [-Wclang-format-violations]
        }   // end socket loop
                              ^
./Libraries/SocketLib/ListeningManager.h:207:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }   // end check for number of active sockets
     ^
./Libraries/SocketLib/ListeningManager.h:207:50: warning: code should be clang-formatted [-Wclang-format-violations]
    }   // end check for number of active sockets
                                                 ^
./Libraries/SocketLib/ListeningManager.h:209:2: warning: code should be clang-formatted [-Wclang-format-violations]
}
 ^
./Libraries/SocketLib/ListeningManager.h:214:2: warning: code should be clang-formatted [-Wclang-format-violations]
}   // end namespace SocketLib
 ^
./Libraries/SocketLib/ListeningManager.h:214:31: warning: code should be clang-formatted [-Wclang-format-violations]
}   // end namespace SocketLib
                              ^
./Libraries/SocketLib/SocketLib.h:4:53: warning: code should be clang-formatted [-Wclang-format-violations]
// SocketLib.h - Main header for the socket library.
                                                    ^
./Libraries/SocketLib/SocketLib.h:10:1: warning: code should be clang-formatted [-Wclang-format-violations]
#include "SocketLibTypes.h"
^
./Libraries/SocketLib/SocketLib.h:21:7: warning: code should be clang-formatted [-Wclang-format-violations]
#endif
      ^
./Libraries/SocketLib/SocketLibErrors.h:5:16: warning: code should be clang-formatted [-Wclang-format-violations]
// definitions.
               ^
./Libraries/SocketLib/SocketLibErrors.h:18:20: warning: code should be clang-formatted [-Wclang-format-violations]
namespace SocketLib
                   ^
./Libraries/SocketLib/SocketLibErrors.h:19:2: warning: code should be clang-formatted [-Wclang-format-violations]
{
 ^
./Libraries/SocketLib/SocketLibErrors.h:23:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibErrors.h:24:56: warning: code should be clang-formatted [-Wclang-format-violations]
    // Description: Error codes for the socket library.
                                                       ^
./Libraries/SocketLib/SocketLibErrors.h:25:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibErrors.h:26:15: warning: code should be clang-formatted [-Wclang-format-violations]
    enum Error
              ^
./Libraries/SocketLib/SocketLibErrors.h:27:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/SocketLibErrors.h:28:76: warning: code should be clang-formatted [-Wclang-format-violations]
        // errors that shouldn't happen, so if they do, something is wrong:
                                                                           ^
./Libraries/SocketLib/SocketLibErrors.h:29:23: warning: code should be clang-formatted [-Wclang-format-violations]
        ESeriousError,
                      ^
./Libraries/SocketLib/SocketLibErrors.h:31:35: warning: code should be clang-formatted [-Wclang-format-violations]
        // these errors are common
                                  ^
./Libraries/SocketLib/SocketLibErrors.h:32:22: warning: code should be clang-formatted [-Wclang-format-violations]
        ENetworkDown,
                     ^
./Libraries/SocketLib/SocketLibErrors.h:33:29: warning: code should be clang-formatted [-Wclang-format-violations]
        ENoSocketsAvailable,
                            ^
./Libraries/SocketLib/SocketLibErrors.h:34:19: warning: code should be clang-formatted [-Wclang-format-violations]
        ENoMemory,
                  ^
./Libraries/SocketLib/SocketLibErrors.h:35:30: warning: code should be clang-formatted [-Wclang-format-violations]
        EAddressNotAvailable,
                             ^
./Libraries/SocketLib/SocketLibErrors.h:36:27: warning: code should be clang-formatted [-Wclang-format-violations]
        EAlreadyConnected,
                          ^
./Libraries/SocketLib/SocketLibErrors.h:37:23: warning: code should be clang-formatted [-Wclang-format-violations]
        ENotConnected,
                      ^
./Libraries/SocketLib/SocketLibErrors.h:38:28: warning: code should be clang-formatted [-Wclang-format-violations]
        EConnectionRefused,
                           ^
./Libraries/SocketLib/SocketLibErrors.h:39:29: warning: code should be clang-formatted [-Wclang-format-violations]
        ENetworkUnreachable,
                            ^
./Libraries/SocketLib/SocketLibErrors.h:40:23: warning: code should be clang-formatted [-Wclang-format-violations]
        ENetworkReset,
                      ^
./Libraries/SocketLib/SocketLibErrors.h:41:26: warning: code should be clang-formatted [-Wclang-format-violations]
        EHostUnreachable,
                         ^
./Libraries/SocketLib/SocketLibErrors.h:42:19: warning: code should be clang-formatted [-Wclang-format-violations]
        EHostDown,
                  ^
./Libraries/SocketLib/SocketLibErrors.h:43:28: warning: code should be clang-formatted [-Wclang-format-violations]
        EConnectionAborted,
                           ^
./Libraries/SocketLib/SocketLibErrors.h:44:26: warning: code should be clang-formatted [-Wclang-format-violations]
        EConnectionReset,
                         ^
./Libraries/SocketLib/SocketLibErrors.h:45:30: warning: code should be clang-formatted [-Wclang-format-violations]
        EOperationWouldBlock,
                             ^
./Libraries/SocketLib/SocketLibErrors.h:47:22: warning: code should be clang-formatted [-Wclang-format-violations]
        // DNS errors
                     ^
./Libraries/SocketLib/SocketLibErrors.h:48:22: warning: code should be clang-formatted [-Wclang-format-violations]
        EDNSNotFound,
                     ^
./Libraries/SocketLib/SocketLibErrors.h:49:19: warning: code should be clang-formatted [-Wclang-format-violations]
        EDNSError,
                  ^
./Libraries/SocketLib/SocketLibErrors.h:50:20: warning: code should be clang-formatted [-Wclang-format-violations]
        ENoDNSData,
                   ^
./Libraries/SocketLib/SocketLibErrors.h:52:79: warning: code should be clang-formatted [-Wclang-format-violations]
        // These errors are specific errors that should never or rarely occur.
                                                                              ^
./Libraries/SocketLib/SocketLibErrors.h:53:21: warning: code should be clang-formatted [-Wclang-format-violations]
        EInProgress,
                    ^
./Libraries/SocketLib/SocketLibErrors.h:54:22: warning: code should be clang-formatted [-Wclang-format-violations]
        EInterrupted,
                     ^
./Libraries/SocketLib/SocketLibErrors.h:55:23: warning: code should be clang-formatted [-Wclang-format-violations]
        EAccessDenied,
                      ^
./Libraries/SocketLib/SocketLibErrors.h:56:27: warning: code should be clang-formatted [-Wclang-format-violations]
        EInvalidParameter,
                          ^
./Libraries/SocketLib/SocketLibErrors.h:57:36: warning: code should be clang-formatted [-Wclang-format-violations]
        EAddressFamilyNotSupported,
                                   ^
./Libraries/SocketLib/SocketLibErrors.h:58:37: warning: code should be clang-formatted [-Wclang-format-violations]
        EProtocolFamilyNotSupported,
                                    ^
./Libraries/SocketLib/SocketLibErrors.h:59:31: warning: code should be clang-formatted [-Wclang-format-violations]
        EProtocolNotSupported,
                              ^
./Libraries/SocketLib/SocketLibErrors.h:60:39: warning: code should be clang-formatted [-Wclang-format-violations]
        EProtocolNotSupportedBySocket,
                                      ^
./Libraries/SocketLib/SocketLibErrors.h:61:32: warning: code should be clang-formatted [-Wclang-format-violations]
        EOperationNotSupported,
                               ^
./Libraries/SocketLib/SocketLibErrors.h:62:28: warning: code should be clang-formatted [-Wclang-format-violations]
        EInvalidSocketType,
                           ^
./Libraries/SocketLib/SocketLibErrors.h:63:24: warning: code should be clang-formatted [-Wclang-format-violations]
        EInvalidSocket,
                       ^
./Libraries/SocketLib/SocketLibErrors.h:64:26: warning: code should be clang-formatted [-Wclang-format-violations]
        EAddressRequired,
                         ^
./Libraries/SocketLib/SocketLibErrors.h:65:25: warning: code should be clang-formatted [-Wclang-format-violations]
        EMessageTooLong,
                        ^
./Libraries/SocketLib/SocketLibErrors.h:66:28: warning: code should be clang-formatted [-Wclang-format-violations]
        EBadProtocolOption,
                           ^
./Libraries/SocketLib/SocketLibErrors.h:67:23: warning: code should be clang-formatted [-Wclang-format-violations]
        EAddressInUse,
                      ^
./Libraries/SocketLib/SocketLibErrors.h:68:19: warning: code should be clang-formatted [-Wclang-format-violations]
        ETimedOut,
                  ^
./Libraries/SocketLib/SocketLibErrors.h:69:19: warning: code should be clang-formatted [-Wclang-format-violations]
        EShutDown,
                  ^
./Libraries/SocketLib/SocketLibErrors.h:72:39: warning: code should be clang-formatted [-Wclang-format-violations]
        // auxilliary socketlib errors
                                      ^
./Libraries/SocketLib/SocketLibErrors.h:73:29: warning: code should be clang-formatted [-Wclang-format-violations]
        ESocketLimitReached,
                            ^
./Libraries/SocketLib/SocketLibErrors.h:74:23: warning: code should be clang-formatted [-Wclang-format-violations]
        ENotAvailable,
                      ^
./Libraries/SocketLib/SocketLibErrors.h:75:26: warning: code should be clang-formatted [-Wclang-format-violations]
        EConnectionClosed
                         ^
./Libraries/SocketLib/SocketLibErrors.h:76:7: warning: code should be clang-formatted [-Wclang-format-violations]
    };
      ^
./Libraries/SocketLib/SocketLibErrors.h:79:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibErrors.h:80:74: warning: code should be clang-formatted [-Wclang-format-violations]
    // Description: This translates error codes from the native platoform
                                                                         ^
./Libraries/SocketLib/SocketLibErrors.h:81:53: warning: code should be clang-formatted [-Wclang-format-violations]
    //              format into the SocketLib format
                                                    ^
./Libraries/SocketLib/SocketLibErrors.h:82:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibErrors.h:83:26: warning: code should be clang-formatted [-Wclang-format-violations]
    Error TranslateError( int p_error, bool p_errno );
                         ^
./Libraries/SocketLib/SocketLibErrors.h:83:52: warning: code should be clang-formatted [-Wclang-format-violations]
    Error TranslateError( int p_error, bool p_errno );
                                                   ^
./Libraries/SocketLib/SocketLibErrors.h:83:55: warning: code should be clang-formatted [-Wclang-format-violations]
    Error TranslateError( int p_error, bool p_errno );
                                                      ^
./Libraries/SocketLib/SocketLibErrors.h:88:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibErrors.h:89:74: warning: code should be clang-formatted [-Wclang-format-violations]
    // Description: This function acts as a simple wrapper for retrieving
                                                                         ^
./Libraries/SocketLib/SocketLibErrors.h:90:65: warning: code should be clang-formatted [-Wclang-format-violations]
    //              socket library errors from errno or h_errno.
                                                                ^
./Libraries/SocketLib/SocketLibErrors.h:91:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibErrors.h:92:20: warning: code should be clang-formatted [-Wclang-format-violations]
    Error GetError( bool p_errno = true );
                   ^
./Libraries/SocketLib/SocketLibErrors.h:92:40: warning: code should be clang-formatted [-Wclang-format-violations]
    Error GetError( bool p_errno = true );
                                       ^
./Libraries/SocketLib/SocketLibErrors.h:92:43: warning: code should be clang-formatted [-Wclang-format-violations]
    Error GetError( bool p_errno = true );
                                          ^
./Libraries/SocketLib/SocketLibErrors.h:96:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibErrors.h:97:30: warning: code should be clang-formatted [-Wclang-format-violations]
    // Type:        Exception
                             ^
./Libraries/SocketLib/SocketLibErrors.h:98:78: warning: code should be clang-formatted [-Wclang-format-violations]
    // Purpose:     A generic socket exception class that holds an error, and
                                                                             ^
./Libraries/SocketLib/SocketLibErrors.h:99:80: warning: code should be clang-formatted [-Wclang-format-violations]
    //              an optional text string describing the error in more detail
                                                                               ^
./Libraries/SocketLib/SocketLibErrors.h:100:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibErrors.h:101:44: warning: code should be clang-formatted [-Wclang-format-violations]
    class Exception : public std::exception
                                           ^
./Libraries/SocketLib/SocketLibErrors.h:102:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/SocketLibErrors.h:103:12: warning: code should be clang-formatted [-Wclang-format-violations]
    public:
           ^
./Libraries/SocketLib/SocketLibErrors.h:104:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibErrors.h:105:34: warning: code should be clang-formatted [-Wclang-format-violations]
        // Function:    Exception
                                 ^
./Libraries/SocketLib/SocketLibErrors.h:106:75: warning: code should be clang-formatted [-Wclang-format-violations]
        // Purpose:     To initialize the socket exception with a specific
                                                                          ^
./Libraries/SocketLib/SocketLibErrors.h:107:36: warning: code should be clang-formatted [-Wclang-format-violations]
        //              error code.
                                   ^
./Libraries/SocketLib/SocketLibErrors.h:108:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibErrors.h:109:19: warning: code should be clang-formatted [-Wclang-format-violations]
        Exception( Error p_code );
                  ^
./Libraries/SocketLib/SocketLibErrors.h:109:32: warning: code should be clang-formatted [-Wclang-format-violations]
        Exception( Error p_code );
                               ^
./Libraries/SocketLib/SocketLibErrors.h:109:35: warning: code should be clang-formatted [-Wclang-format-violations]
        Exception( Error p_code );
                                  ^
./Libraries/SocketLib/SocketLibErrors.h:111:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibErrors.h:112:30: warning: code should be clang-formatted [-Wclang-format-violations]
        // Function:    Error
                             ^
./Libraries/SocketLib/SocketLibErrors.h:113:66: warning: code should be clang-formatted [-Wclang-format-violations]
        // Purpose:     To retrieve the error code of the socket.
                                                                 ^
./Libraries/SocketLib/SocketLibErrors.h:114:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibErrors.h:115:27: warning: code should be clang-formatted [-Wclang-format-violations]
        Error ErrorCode();
                          ^
./Libraries/SocketLib/SocketLibErrors.h:117:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibErrors.h:118:35: warning: code should be clang-formatted [-Wclang-format-violations]
        // Function:    PrintError
                                  ^
./Libraries/SocketLib/SocketLibErrors.h:119:60: warning: code should be clang-formatted [-Wclang-format-violations]
        // Purpose:     Print the error message to a string
                                                           ^
./Libraries/SocketLib/SocketLibErrors.h:120:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibErrors.h:121:34: warning: code should be clang-formatted [-Wclang-format-violations]
        std::string PrintError();
                                 ^
./Libraries/SocketLib/SocketLibErrors.h:124:15: warning: code should be clang-formatted [-Wclang-format-violations]
    protected:
              ^
./Libraries/SocketLib/SocketLibErrors.h:125:22: warning: code should be clang-formatted [-Wclang-format-violations]
        Error m_code;
                     ^
./Libraries/SocketLib/SocketLibErrors.h:126:7: warning: code should be clang-formatted [-Wclang-format-violations]
    };
      ^
./Libraries/SocketLib/SocketLibErrors.h:130:29: warning: code should be clang-formatted [-Wclang-format-violations]
} // end namespace SocketLib
                            ^
./Libraries/SocketLib/SocketLibSocket.h:5:47: warning: code should be clang-formatted [-Wclang-format-violations]
// socket classes: Basic, Data, and Listening.
                                              ^
./Libraries/SocketLib/SocketLibSocket.h:14:1: warning: code should be clang-formatted [-Wclang-format-violations]
#include <cstring>
^
./Libraries/SocketLib/SocketLibSocket.h:20:20: warning: code should be clang-formatted [-Wclang-format-violations]
namespace SocketLib
                   ^
./Libraries/SocketLib/SocketLibSocket.h:21:2: warning: code should be clang-formatted [-Wclang-format-violations]
{
 ^
./Libraries/SocketLib/SocketLibSocket.h:23:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:24:27: warning: code should be clang-formatted [-Wclang-format-violations]
    // Class:       Socket
                          ^
./Libraries/SocketLib/SocketLibSocket.h:25:75: warning: code should be clang-formatted [-Wclang-format-violations]
    // Purpose:     A very basic socket base class that will give the user
                                                                          ^
./Libraries/SocketLib/SocketLibSocket.h:26:77: warning: code should be clang-formatted [-Wclang-format-violations]
    //              the ability to get port and IP information, but not much
                                                                            ^
./Libraries/SocketLib/SocketLibSocket.h:27:26: warning: code should be clang-formatted [-Wclang-format-violations]
    //              else. 
                         ^
./Libraries/SocketLib/SocketLibSocket.h:28:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:29:17: warning: code should be clang-formatted [-Wclang-format-violations]
    class Socket
                ^
./Libraries/SocketLib/SocketLibSocket.h:30:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/SocketLibSocket.h:31:12: warning: code should be clang-formatted [-Wclang-format-violations]
    public:
           ^
./Libraries/SocketLib/SocketLibSocket.h:32:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:33:32: warning: code should be clang-formatted [-Wclang-format-violations]
        // Function:    GetSock
                               ^
./Libraries/SocketLib/SocketLibSocket.h:34:70: warning: code should be clang-formatted [-Wclang-format-violations]
        // Purpose:     this function returns the internal API socket 
                                                                     ^
./Libraries/SocketLib/SocketLibSocket.h:35:80: warning: code should be clang-formatted [-Wclang-format-violations]
        //              representation. Used by classes and functions that need
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:36:78: warning: code should be clang-formatted [-Wclang-format-violations]
        //              to interface directly with the BSD Sockets or Winsock
                                                                             ^
./Libraries/SocketLib/SocketLibSocket.h:37:35: warning: code should be clang-formatted [-Wclang-format-violations]
        //              libraries.
                                  ^
./Libraries/SocketLib/SocketLibSocket.h:38:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:39:36: warning: code should be clang-formatted [-Wclang-format-violations]
        inline sock GetSock() const
                                   ^
./Libraries/SocketLib/SocketLibSocket.h:40:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/SocketLibSocket.h:41:27: warning: code should be clang-formatted [-Wclang-format-violations]
            return m_sock;
                          ^
./Libraries/SocketLib/SocketLibSocket.h:42:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/SocketLibSocket.h:45:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:46:37: warning: code should be clang-formatted [-Wclang-format-violations]
        // Function:    GetLocalPort
                                    ^
./Libraries/SocketLib/SocketLibSocket.h:47:58: warning: code should be clang-formatted [-Wclang-format-violations]
        // Purpose:     gets the local port of the socket
                                                         ^
./Libraries/SocketLib/SocketLibSocket.h:48:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:49:41: warning: code should be clang-formatted [-Wclang-format-violations]
        inline port GetLocalPort() const
                                        ^
./Libraries/SocketLib/SocketLibSocket.h:50:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/SocketLibSocket.h:51:26: warning: code should be clang-formatted [-Wclang-format-violations]
            return ntohs( m_localinfo.sin_port );
                         ^
./Libraries/SocketLib/SocketLibSocket.h:51:47: warning: code should be clang-formatted [-Wclang-format-violations]
            return ntohs( m_localinfo.sin_port );
                                              ^
./Libraries/SocketLib/SocketLibSocket.h:51:50: warning: code should be clang-formatted [-Wclang-format-violations]
            return ntohs( m_localinfo.sin_port );
                                                 ^
./Libraries/SocketLib/SocketLibSocket.h:52:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/SocketLibSocket.h:54:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:55:40: warning: code should be clang-formatted [-Wclang-format-violations]
        // Function:    GetLocalAddress
                                       ^
./Libraries/SocketLib/SocketLibSocket.h:56:61: warning: code should be clang-formatted [-Wclang-format-violations]
        // Purpose:     gets the local address of the socket
                                                            ^
./Libraries/SocketLib/SocketLibSocket.h:57:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:58:49: warning: code should be clang-formatted [-Wclang-format-violations]
        inline ipaddress GetLocalAddress() const
                                                ^
./Libraries/SocketLib/SocketLibSocket.h:59:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/SocketLibSocket.h:60:48: warning: code should be clang-formatted [-Wclang-format-violations]
            return m_localinfo.sin_addr.s_addr;
                                               ^
./Libraries/SocketLib/SocketLibSocket.h:61:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/SocketLibSocket.h:63:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:64:30: warning: code should be clang-formatted [-Wclang-format-violations]
        // Function:    Close
                             ^
./Libraries/SocketLib/SocketLibSocket.h:65:43: warning: code should be clang-formatted [-Wclang-format-violations]
        // Purpose:     closes the socket.
                                          ^
./Libraries/SocketLib/SocketLibSocket.h:66:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:67:22: warning: code should be clang-formatted [-Wclang-format-violations]
        void Close();
                     ^
./Libraries/SocketLib/SocketLibSocket.h:69:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:70:36: warning: code should be clang-formatted [-Wclang-format-violations]
        // Function:    SetBlocking
                                   ^
./Libraries/SocketLib/SocketLibSocket.h:71:68: warning: code should be clang-formatted [-Wclang-format-violations]
        // Purpose:     sets whether the socket is blocking or not.
                                                                   ^
./Libraries/SocketLib/SocketLibSocket.h:72:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:73:26: warning: code should be clang-formatted [-Wclang-format-violations]
        void SetBlocking( bool p_blockmode );
                         ^
./Libraries/SocketLib/SocketLibSocket.h:73:43: warning: code should be clang-formatted [-Wclang-format-violations]
        void SetBlocking( bool p_blockmode );
                                          ^
./Libraries/SocketLib/SocketLibSocket.h:73:46: warning: code should be clang-formatted [-Wclang-format-violations]
        void SetBlocking( bool p_blockmode );
                                             ^
./Libraries/SocketLib/SocketLibSocket.h:77:15: warning: code should be clang-formatted [-Wclang-format-violations]
    protected:
              ^
./Libraries/SocketLib/SocketLibSocket.h:78:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:79:31: warning: code should be clang-formatted [-Wclang-format-violations]
        // Function:    Socket
                              ^
./Libraries/SocketLib/SocketLibSocket.h:80:73: warning: code should be clang-formatted [-Wclang-format-violations]
        // Purpose:     hidden constructor, meant to prevent people from
                                                                        ^
./Libraries/SocketLib/SocketLibSocket.h:81:77: warning: code should be clang-formatted [-Wclang-format-violations]
        //              instantiating this class. You should be using direct
                                                                            ^
./Libraries/SocketLib/SocketLibSocket.h:82:71: warning: code should be clang-formatted [-Wclang-format-violations]
        //              implementations of this class instead, such as 
                                                                      ^
./Libraries/SocketLib/SocketLibSocket.h:83:56: warning: code should be clang-formatted [-Wclang-format-violations]
        //              ListeningSocket and DataSocket.
                                                       ^
./Libraries/SocketLib/SocketLibSocket.h:84:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:85:16: warning: code should be clang-formatted [-Wclang-format-violations]
        Socket( sock p_socket = -1 );
               ^
./Libraries/SocketLib/SocketLibSocket.h:85:35: warning: code should be clang-formatted [-Wclang-format-violations]
        Socket( sock p_socket = -1 );
                                  ^
./Libraries/SocketLib/SocketLibSocket.h:85:38: warning: code should be clang-formatted [-Wclang-format-violations]
        Socket( sock p_socket = -1 );
                                     ^
./Libraries/SocketLib/SocketLibSocket.h:88:21: warning: code should be clang-formatted [-Wclang-format-violations]
        sock m_sock;                    // this is the underlying representation
                    ^
./Libraries/SocketLib/SocketLibSocket.h:88:81: warning: code should be clang-formatted [-Wclang-format-violations]
        sock m_sock;                    // this is the underlying representation
                                                                                ^
./Libraries/SocketLib/SocketLibSocket.h:89:65: warning: code should be clang-formatted [-Wclang-format-violations]
                                        // of the actual socket.
                                                                ^
./Libraries/SocketLib/SocketLibSocket.h:91:76: warning: code should be clang-formatted [-Wclang-format-violations]
        struct sockaddr_in m_localinfo; // structure containing information
                                                                           ^
./Libraries/SocketLib/SocketLibSocket.h:92:70: warning: code should be clang-formatted [-Wclang-format-violations]
                                        // about the local connection
                                                                     ^
./Libraries/SocketLib/SocketLibSocket.h:94:27: warning: code should be clang-formatted [-Wclang-format-violations]
        bool m_isblocking;              // this tells whether the socket is
                          ^
./Libraries/SocketLib/SocketLibSocket.h:94:76: warning: code should be clang-formatted [-Wclang-format-violations]
        bool m_isblocking;              // this tells whether the socket is
                                                                           ^
./Libraries/SocketLib/SocketLibSocket.h:95:60: warning: code should be clang-formatted [-Wclang-format-violations]
                                        // blocking or not.
                                                           ^
./Libraries/SocketLib/SocketLibSocket.h:96:7: warning: code should be clang-formatted [-Wclang-format-violations]
    };
      ^
./Libraries/SocketLib/SocketLibSocket.h:101:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:102:31: warning: code should be clang-formatted [-Wclang-format-violations]
    // Class:       DataSocket
                              ^
./Libraries/SocketLib/SocketLibSocket.h:103:75: warning: code should be clang-formatted [-Wclang-format-violations]
    // Purpose:     A variation of the BasicSocket base class that handles
                                                                          ^
./Libraries/SocketLib/SocketLibSocket.h:104:45: warning: code should be clang-formatted [-Wclang-format-violations]
    //              TCP/IP data connections.
                                            ^
./Libraries/SocketLib/SocketLibSocket.h:105:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:106:37: warning: code should be clang-formatted [-Wclang-format-violations]
    class DataSocket : public Socket
                                    ^
./Libraries/SocketLib/SocketLibSocket.h:107:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/SocketLibSocket.h:108:12: warning: code should be clang-formatted [-Wclang-format-violations]
    public:
           ^
./Libraries/SocketLib/SocketLibSocket.h:109:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:110:35: warning: code should be clang-formatted [-Wclang-format-violations]
        // Function:    DataSocket
                                  ^
./Libraries/SocketLib/SocketLibSocket.h:111:72: warning: code should be clang-formatted [-Wclang-format-violations]
        // Purpose:     Constructs the data socket with optional values
                                                                       ^
./Libraries/SocketLib/SocketLibSocket.h:112:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:113:20: warning: code should be clang-formatted [-Wclang-format-violations]
        DataSocket( sock p_socket = -1 );
                   ^
./Libraries/SocketLib/SocketLibSocket.h:113:39: warning: code should be clang-formatted [-Wclang-format-violations]
        DataSocket( sock p_socket = -1 );
                                      ^
./Libraries/SocketLib/SocketLibSocket.h:113:42: warning: code should be clang-formatted [-Wclang-format-violations]
        DataSocket( sock p_socket = -1 );
                                         ^
./Libraries/SocketLib/SocketLibSocket.h:115:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:116:41: warning: code should be clang-formatted [-Wclang-format-violations]
        // Function:    GetRemoteAddress
                                        ^
./Libraries/SocketLib/SocketLibSocket.h:117:63: warning: code should be clang-formatted [-Wclang-format-violations]
        // Purpose:     get the IP address of the remote host.
                                                              ^
./Libraries/SocketLib/SocketLibSocket.h:118:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:119:50: warning: code should be clang-formatted [-Wclang-format-violations]
        inline ipaddress GetRemoteAddress() const
                                                 ^
./Libraries/SocketLib/SocketLibSocket.h:120:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/SocketLibSocket.h:121:49: warning: code should be clang-formatted [-Wclang-format-violations]
            return m_remoteinfo.sin_addr.s_addr;
                                                ^
./Libraries/SocketLib/SocketLibSocket.h:122:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/SocketLibSocket.h:125:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:126:38: warning: code should be clang-formatted [-Wclang-format-violations]
        // Function:    GetRemotePort
                                     ^
./Libraries/SocketLib/SocketLibSocket.h:127:59: warning: code should be clang-formatted [-Wclang-format-violations]
        // Purpose:     gets the remote port of the socket
                                                          ^
./Libraries/SocketLib/SocketLibSocket.h:128:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:129:42: warning: code should be clang-formatted [-Wclang-format-violations]
        inline port GetRemotePort() const
                                         ^
./Libraries/SocketLib/SocketLibSocket.h:130:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/SocketLibSocket.h:131:26: warning: code should be clang-formatted [-Wclang-format-violations]
            return ntohs( m_remoteinfo.sin_port );
                         ^
./Libraries/SocketLib/SocketLibSocket.h:131:48: warning: code should be clang-formatted [-Wclang-format-violations]
            return ntohs( m_remoteinfo.sin_port );
                                               ^
./Libraries/SocketLib/SocketLibSocket.h:131:51: warning: code should be clang-formatted [-Wclang-format-violations]
            return ntohs( m_remoteinfo.sin_port );
                                                  ^
./Libraries/SocketLib/SocketLibSocket.h:132:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/SocketLibSocket.h:135:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:136:36: warning: code should be clang-formatted [-Wclang-format-violations]
        // Function:    IsConnected
                                   ^
./Libraries/SocketLib/SocketLibSocket.h:137:70: warning: code should be clang-formatted [-Wclang-format-violations]
        // Purpose:     Determines if the socket is connected or not.
                                                                     ^
./Libraries/SocketLib/SocketLibSocket.h:138:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:139:40: warning: code should be clang-formatted [-Wclang-format-violations]
        inline bool IsConnected() const
                                       ^
./Libraries/SocketLib/SocketLibSocket.h:140:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/SocketLibSocket.h:141:32: warning: code should be clang-formatted [-Wclang-format-violations]
            return m_connected;
                               ^
./Libraries/SocketLib/SocketLibSocket.h:142:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/SocketLibSocket.h:145:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:146:32: warning: code should be clang-formatted [-Wclang-format-violations]
        // Function:    Connect
                               ^
./Libraries/SocketLib/SocketLibSocket.h:147:79: warning: code should be clang-formatted [-Wclang-format-violations]
        // Purpose:     Connects this socket to another socket. This will fail
                                                                              ^
./Libraries/SocketLib/SocketLibSocket.h:148:74: warning: code should be clang-formatted [-Wclang-format-violations]
        //              if the socket is already connected, or the server
                                                                         ^
./Libraries/SocketLib/SocketLibSocket.h:149:48: warning: code should be clang-formatted [-Wclang-format-violations]
        //              rejects the connection.
                                               ^
./Libraries/SocketLib/SocketLibSocket.h:150:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:151:22: warning: code should be clang-formatted [-Wclang-format-violations]
        void Connect( ipaddress p_addr, port p_port );
                     ^
./Libraries/SocketLib/SocketLibSocket.h:151:52: warning: code should be clang-formatted [-Wclang-format-violations]
        void Connect( ipaddress p_addr, port p_port );
                                                   ^
./Libraries/SocketLib/SocketLibSocket.h:151:55: warning: code should be clang-formatted [-Wclang-format-violations]
        void Connect( ipaddress p_addr, port p_port );
                                                      ^
./Libraries/SocketLib/SocketLibSocket.h:153:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:154:29: warning: code should be clang-formatted [-Wclang-format-violations]
        // Function:    Send
                            ^
./Libraries/SocketLib/SocketLibSocket.h:155:73: warning: code should be clang-formatted [-Wclang-format-violations]
        // Purpose:     Attempts to send data, and returns the number of
                                                                        ^
./Libraries/SocketLib/SocketLibSocket.h:156:38: warning: code should be clang-formatted [-Wclang-format-violations]
        //              of bytes sent
                                     ^
./Libraries/SocketLib/SocketLibSocket.h:157:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:158:18: warning: code should be clang-formatted [-Wclang-format-violations]
        int Send( const char* p_buffer, int p_size );
                 ^
./Libraries/SocketLib/SocketLibSocket.h:158:29: warning: code should be clang-formatted [-Wclang-format-violations]
        int Send( const char* p_buffer, int p_size );
                            ^
./Libraries/SocketLib/SocketLibSocket.h:158:30: warning: code should be clang-formatted [-Wclang-format-violations]
        int Send( const char* p_buffer, int p_size );
                             ^
./Libraries/SocketLib/SocketLibSocket.h:158:51: warning: code should be clang-formatted [-Wclang-format-violations]
        int Send( const char* p_buffer, int p_size );
                                                  ^
./Libraries/SocketLib/SocketLibSocket.h:158:54: warning: code should be clang-formatted [-Wclang-format-violations]
        int Send( const char* p_buffer, int p_size );
                                                     ^
./Libraries/SocketLib/SocketLibSocket.h:160:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:161:32: warning: code should be clang-formatted [-Wclang-format-violations]
        // Function:    Receive
                               ^
./Libraries/SocketLib/SocketLibSocket.h:162:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // Purpose:     Attempts to receive data from a socket, and returns the
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:163:49: warning: code should be clang-formatted [-Wclang-format-violations]
        //              amount of data received.
                                                ^
./Libraries/SocketLib/SocketLibSocket.h:164:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:165:21: warning: code should be clang-formatted [-Wclang-format-violations]
        int Receive( char* p_buffer, int p_size );
                    ^
./Libraries/SocketLib/SocketLibSocket.h:165:26: warning: code should be clang-formatted [-Wclang-format-violations]
        int Receive( char* p_buffer, int p_size );
                         ^
./Libraries/SocketLib/SocketLibSocket.h:165:27: warning: code should be clang-formatted [-Wclang-format-violations]
        int Receive( char* p_buffer, int p_size );
                          ^
./Libraries/SocketLib/SocketLibSocket.h:165:48: warning: code should be clang-formatted [-Wclang-format-violations]
        int Receive( char* p_buffer, int p_size );
                                               ^
./Libraries/SocketLib/SocketLibSocket.h:165:51: warning: code should be clang-formatted [-Wclang-format-violations]
        int Receive( char* p_buffer, int p_size );
                                                  ^
./Libraries/SocketLib/SocketLibSocket.h:167:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:168:30: warning: code should be clang-formatted [-Wclang-format-violations]
        // Function:    Close
                             ^
./Libraries/SocketLib/SocketLibSocket.h:169:43: warning: code should be clang-formatted [-Wclang-format-violations]
        // Purpose:     closes the socket.
                                          ^
./Libraries/SocketLib/SocketLibSocket.h:170:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:171:22: warning: code should be clang-formatted [-Wclang-format-violations]
        void Close();
                     ^
./Libraries/SocketLib/SocketLibSocket.h:173:15: warning: code should be clang-formatted [-Wclang-format-violations]
    protected:
              ^
./Libraries/SocketLib/SocketLibSocket.h:175:26: warning: code should be clang-formatted [-Wclang-format-violations]
        bool m_connected;               // is the socket connected?
                         ^
./Libraries/SocketLib/SocketLibSocket.h:175:68: warning: code should be clang-formatted [-Wclang-format-violations]
        bool m_connected;               // is the socket connected?
                                                                   ^
./Libraries/SocketLib/SocketLibSocket.h:177:41: warning: code should be clang-formatted [-Wclang-format-violations]
        struct sockaddr_in m_remoteinfo;// structure containing information
                                        ^
./Libraries/SocketLib/SocketLibSocket.h:177:76: warning: code should be clang-formatted [-Wclang-format-violations]
        struct sockaddr_in m_remoteinfo;// structure containing information
                                                                           ^
./Libraries/SocketLib/SocketLibSocket.h:178:39: warning: code should be clang-formatted [-Wclang-format-violations]
        // about the remote connection
                                      ^
./Libraries/SocketLib/SocketLibSocket.h:180:7: warning: code should be clang-formatted [-Wclang-format-violations]
    };
      ^
./Libraries/SocketLib/SocketLibSocket.h:184:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:185:36: warning: code should be clang-formatted [-Wclang-format-violations]
    // Class:       ListeningSocket
                                   ^
./Libraries/SocketLib/SocketLibSocket.h:186:75: warning: code should be clang-formatted [-Wclang-format-violations]
    // Purpose:     A variation of the BasicSocket base class that handles
                                                                          ^
./Libraries/SocketLib/SocketLibSocket.h:187:58: warning: code should be clang-formatted [-Wclang-format-violations]
    //              incomming TCP/IP connection requests.
                                                         ^
./Libraries/SocketLib/SocketLibSocket.h:188:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:189:42: warning: code should be clang-formatted [-Wclang-format-violations]
    class ListeningSocket : public Socket
                                         ^
./Libraries/SocketLib/SocketLibSocket.h:190:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/SocketLibSocket.h:191:12: warning: code should be clang-formatted [-Wclang-format-violations]
    public:
           ^
./Libraries/SocketLib/SocketLibSocket.h:193:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:194:40: warning: code should be clang-formatted [-Wclang-format-violations]
        // Function:    ListeningSocket
                                       ^
./Libraries/SocketLib/SocketLibSocket.h:195:79: warning: code should be clang-formatted [-Wclang-format-violations]
        // Purpose:     Constructor. Constructs the socket with initial values
                                                                              ^
./Libraries/SocketLib/SocketLibSocket.h:196:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:197:27: warning: code should be clang-formatted [-Wclang-format-violations]
        ListeningSocket();
                          ^
./Libraries/SocketLib/SocketLibSocket.h:199:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:200:31: warning: code should be clang-formatted [-Wclang-format-violations]
        // Function:    Listen
                              ^
./Libraries/SocketLib/SocketLibSocket.h:201:74: warning: code should be clang-formatted [-Wclang-format-violations]
        // Purpose:     this function will tell the socket to listen on a 
                                                                         ^
./Libraries/SocketLib/SocketLibSocket.h:202:37: warning: code should be clang-formatted [-Wclang-format-violations]
        //              certain port 
                                    ^
./Libraries/SocketLib/SocketLibSocket.h:203:73: warning: code should be clang-formatted [-Wclang-format-violations]
        // p_port:      This is the port that the socket will listen on.
                                                                        ^
./Libraries/SocketLib/SocketLibSocket.h:204:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:205:21: warning: code should be clang-formatted [-Wclang-format-violations]
        void Listen( port p_port );
                    ^
./Libraries/SocketLib/SocketLibSocket.h:205:33: warning: code should be clang-formatted [-Wclang-format-violations]
        void Listen( port p_port );
                                ^
./Libraries/SocketLib/SocketLibSocket.h:205:36: warning: code should be clang-formatted [-Wclang-format-violations]
        void Listen( port p_port );
                                   ^
./Libraries/SocketLib/SocketLibSocket.h:207:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:208:31: warning: code should be clang-formatted [-Wclang-format-violations]
        // Function:    Accept
                              ^
./Libraries/SocketLib/SocketLibSocket.h:209:72: warning: code should be clang-formatted [-Wclang-format-violations]
        // Purpose:     This is a blocking function that will accept an 
                                                                       ^
./Libraries/SocketLib/SocketLibSocket.h:210:80: warning: code should be clang-formatted [-Wclang-format-violations]
        //              incomming connection and return a data socket with info
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:211:50: warning: code should be clang-formatted [-Wclang-format-violations]
        //              about the new connection.
                                                 ^
./Libraries/SocketLib/SocketLibSocket.h:212:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:213:29: warning: code should be clang-formatted [-Wclang-format-violations]
        DataSocket Accept();
                            ^
./Libraries/SocketLib/SocketLibSocket.h:215:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:216:36: warning: code should be clang-formatted [-Wclang-format-violations]
        // Function:    IsListening
                                   ^
./Libraries/SocketLib/SocketLibSocket.h:217:70: warning: code should be clang-formatted [-Wclang-format-violations]
        // Purpose:     Determines if the socket is listening or not.
                                                                     ^
./Libraries/SocketLib/SocketLibSocket.h:218:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:219:40: warning: code should be clang-formatted [-Wclang-format-violations]
        inline bool IsListening() const
                                       ^
./Libraries/SocketLib/SocketLibSocket.h:220:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/SocketLibSocket.h:221:32: warning: code should be clang-formatted [-Wclang-format-violations]
            return m_listening;
                               ^
./Libraries/SocketLib/SocketLibSocket.h:222:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/SocketLibSocket.h:225:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:226:30: warning: code should be clang-formatted [-Wclang-format-violations]
        // Function:    Close
                             ^
./Libraries/SocketLib/SocketLibSocket.h:227:43: warning: code should be clang-formatted [-Wclang-format-violations]
        // Purpose:     closes the socket.
                                          ^
./Libraries/SocketLib/SocketLibSocket.h:228:80: warning: code should be clang-formatted [-Wclang-format-violations]
        // ====================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSocket.h:229:22: warning: code should be clang-formatted [-Wclang-format-violations]
        void Close();
                     ^
./Libraries/SocketLib/SocketLibSocket.h:231:15: warning: code should be clang-formatted [-Wclang-format-violations]
    protected:
              ^
./Libraries/SocketLib/SocketLibSocket.h:232:26: warning: code should be clang-formatted [-Wclang-format-violations]
        bool m_listening;               // is the socket listening?
                         ^
./Libraries/SocketLib/SocketLibSocket.h:232:68: warning: code should be clang-formatted [-Wclang-format-violations]
        bool m_listening;               // is the socket listening?
                                                                   ^
./Libraries/SocketLib/SocketLibSocket.h:234:7: warning: code should be clang-formatted [-Wclang-format-violations]
    };
      ^
./Libraries/SocketLib/SocketLibSocket.h:237:2: warning: code should be clang-formatted [-Wclang-format-violations]
}   // end namespace SocketLib
 ^
./Libraries/SocketLib/SocketLibSocket.h:237:31: warning: code should be clang-formatted [-Wclang-format-violations]
}   // end namespace SocketLib
                              ^
./Libraries/SocketLib/SocketLibSystem.h:5:39: warning: code should be clang-formatted [-Wclang-format-violations]
// that aren't related to any classes.
                                      ^
./Libraries/SocketLib/SocketLibSystem.h:10:26: warning: code should be clang-formatted [-Wclang-format-violations]
#define SOCKETLIBSYSTEM_H
                         ^
./Libraries/SocketLib/SocketLibSystem.h:16:1: warning: code should be clang-formatted [-Wclang-format-violations]
#include <string>
^
./Libraries/SocketLib/SocketLibSystem.h:20:20: warning: code should be clang-formatted [-Wclang-format-violations]
namespace SocketLib
                   ^
./Libraries/SocketLib/SocketLibSystem.h:21:2: warning: code should be clang-formatted [-Wclang-format-violations]
{
 ^
./Libraries/SocketLib/SocketLibSystem.h:23:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSystem.h:24:33: warning: code should be clang-formatted [-Wclang-format-violations]
    // Function:    GetIPAddress
                                ^
./Libraries/SocketLib/SocketLibSystem.h:25:72: warning: code should be clang-formatted [-Wclang-format-violations]
    // Purpose:     To get the IP address of the string as an ipaddress
                                                                       ^
./Libraries/SocketLib/SocketLibSystem.h:26:76: warning: code should be clang-formatted [-Wclang-format-violations]
    //              structure. Throws an exception if the address cannot be
                                                                           ^
./Libraries/SocketLib/SocketLibSystem.h:27:31: warning: code should be clang-formatted [-Wclang-format-violations]
    //              converted.
                              ^
./Libraries/SocketLib/SocketLibSystem.h:28:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSystem.h:29:32: warning: code should be clang-formatted [-Wclang-format-violations]
        ipaddress GetIPAddress( const std::string p_address );
                               ^
./Libraries/SocketLib/SocketLibSystem.h:29:60: warning: code should be clang-formatted [-Wclang-format-violations]
        ipaddress GetIPAddress( const std::string p_address );
                                                           ^
./Libraries/SocketLib/SocketLibSystem.h:29:63: warning: code should be clang-formatted [-Wclang-format-violations]
        ipaddress GetIPAddress( const std::string p_address );
                                                              ^
./Libraries/SocketLib/SocketLibSystem.h:32:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSystem.h:33:32: warning: code should be clang-formatted [-Wclang-format-violations]
    // Function:    GetIPString
                               ^
./Libraries/SocketLib/SocketLibSystem.h:34:77: warning: code should be clang-formatted [-Wclang-format-violations]
    // Purpose:     Converts an ipaddress structure to a string in numerical
                                                                            ^
./Libraries/SocketLib/SocketLibSystem.h:35:28: warning: code should be clang-formatted [-Wclang-format-violations]
    //              format.
                           ^
./Libraries/SocketLib/SocketLibSystem.h:36:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSystem.h:37:29: warning: code should be clang-formatted [-Wclang-format-violations]
    std::string GetIPString( ipaddress p_address );
                            ^
./Libraries/SocketLib/SocketLibSystem.h:37:49: warning: code should be clang-formatted [-Wclang-format-violations]
    std::string GetIPString( ipaddress p_address );
                                                ^
./Libraries/SocketLib/SocketLibSystem.h:37:52: warning: code should be clang-formatted [-Wclang-format-violations]
    std::string GetIPString( ipaddress p_address );
                                                   ^
./Libraries/SocketLib/SocketLibSystem.h:40:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSystem.h:41:38: warning: code should be clang-formatted [-Wclang-format-violations]
    // Function:    GetHostNameString
                                     ^
./Libraries/SocketLib/SocketLibSystem.h:42:70: warning: code should be clang-formatted [-Wclang-format-violations]
    // Purpose:     Converts an ipaddress structure to a string using
                                                                     ^
./Libraries/SocketLib/SocketLibSystem.h:43:56: warning: code should be clang-formatted [-Wclang-format-violations]
    //              reverse-DNS lookup. This may block.
                                                       ^
./Libraries/SocketLib/SocketLibSystem.h:44:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSystem.h:45:35: warning: code should be clang-formatted [-Wclang-format-violations]
    std::string GetHostNameString( ipaddress p_address );
                                  ^
./Libraries/SocketLib/SocketLibSystem.h:45:55: warning: code should be clang-formatted [-Wclang-format-violations]
    std::string GetHostNameString( ipaddress p_address );
                                                      ^
./Libraries/SocketLib/SocketLibSystem.h:45:58: warning: code should be clang-formatted [-Wclang-format-violations]
    std::string GetHostNameString( ipaddress p_address );
                                                         ^
./Libraries/SocketLib/SocketLibSystem.h:48:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSystem.h:49:32: warning: code should be clang-formatted [-Wclang-format-violations]
    // Function:    IsIPAddress
                               ^
./Libraries/SocketLib/SocketLibSystem.h:50:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // Purpose:     determines if a string contains a pure numerical IP address
                                                                               ^
./Libraries/SocketLib/SocketLibSystem.h:51:73: warning: code should be clang-formatted [-Wclang-format-violations]
    //              (returns true) or a DNS'able address (returns false)
                                                                        ^
./Libraries/SocketLib/SocketLibSystem.h:52:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibSystem.h:53:22: warning: code should be clang-formatted [-Wclang-format-violations]
    bool IsIPAddress( const std::string p_address );
                     ^
./Libraries/SocketLib/SocketLibSystem.h:53:50: warning: code should be clang-formatted [-Wclang-format-violations]
    bool IsIPAddress( const std::string p_address );
                                                 ^
./Libraries/SocketLib/SocketLibSystem.h:53:53: warning: code should be clang-formatted [-Wclang-format-violations]
    bool IsIPAddress( const std::string p_address );
                                                    ^
./Libraries/SocketLib/SocketLibSystem.h:57:2: warning: code should be clang-formatted [-Wclang-format-violations]
}
 ^
./Libraries/SocketLib/SocketLibSystem.h:60:7: warning: code should be clang-formatted [-Wclang-format-violations]
#endif
      ^
./Libraries/SocketLib/SocketLibTypes.h:4:64: warning: code should be clang-formatted [-Wclang-format-violations]
// SocketLibTypes.h - This File contains all of the basic types
                                                               ^
./Libraries/SocketLib/SocketLibTypes.h:8:25: warning: code should be clang-formatted [-Wclang-format-violations]
#define SOCKETLIBTYPES_H
                        ^
./Libraries/SocketLib/SocketLibTypes.h:14:13: warning: code should be clang-formatted [-Wclang-format-violations]
#ifdef WIN32                // windows 95 and above
            ^
./Libraries/SocketLib/SocketLibTypes.h:14:52: warning: code should be clang-formatted [-Wclang-format-violations]
#ifdef WIN32                // windows 95 and above
                                                   ^
./Libraries/SocketLib/SocketLibTypes.h:18:22: warning: code should be clang-formatted [-Wclang-format-violations]
    #ifndef socklen_t
                     ^
./Libraries/SocketLib/SocketLibTypes.h:19:31: warning: code should be clang-formatted [-Wclang-format-violations]
        typedef int socklen_t;
                              ^
./Libraries/SocketLib/SocketLibTypes.h:22:6: warning: code should be clang-formatted [-Wclang-format-violations]
#else                       // UNIX/Linux
     ^
./Libraries/SocketLib/SocketLibTypes.h:22:42: warning: code should be clang-formatted [-Wclang-format-violations]
#else                       // UNIX/Linux
                                         ^
./Libraries/SocketLib/SocketLibTypes.h:23:27: warning: code should be clang-formatted [-Wclang-format-violations]
    #include <sys/types.h>      // header containing all basic data types and
                          ^
./Libraries/SocketLib/SocketLibTypes.h:23:78: warning: code should be clang-formatted [-Wclang-format-violations]
    #include <sys/types.h>      // header containing all basic data types and
                                                                             ^
./Libraries/SocketLib/SocketLibTypes.h:24:44: warning: code should be clang-formatted [-Wclang-format-violations]
                                // typedefs
                                           ^
./Libraries/SocketLib/SocketLibTypes.h:25:28: warning: code should be clang-formatted [-Wclang-format-violations]
    #include <sys/socket.h>     // header containing socket data types and
                           ^
./Libraries/SocketLib/SocketLibTypes.h:25:75: warning: code should be clang-formatted [-Wclang-format-violations]
    #include <sys/socket.h>     // header containing socket data types and
                                                                          ^
./Libraries/SocketLib/SocketLibTypes.h:26:45: warning: code should be clang-formatted [-Wclang-format-violations]
                                // functions
                                            ^
./Libraries/SocketLib/SocketLibTypes.h:33:7: warning: code should be clang-formatted [-Wclang-format-violations]
#endif
      ^
./Libraries/SocketLib/SocketLibTypes.h:37:20: warning: code should be clang-formatted [-Wclang-format-violations]
namespace SocketLib
                   ^
./Libraries/SocketLib/SocketLibTypes.h:38:2: warning: code should be clang-formatted [-Wclang-format-violations]
{
 ^
./Libraries/SocketLib/SocketLibTypes.h:39:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibTypes.h:40:29: warning: code should be clang-formatted [-Wclang-format-violations]
    //  Globals and Typedefs
                            ^
./Libraries/SocketLib/SocketLibTypes.h:41:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibTypes.h:42:17: warning: code should be clang-formatted [-Wclang-format-violations]
    #ifdef WIN32                // windows 95 and above
                ^
./Libraries/SocketLib/SocketLibTypes.h:42:56: warning: code should be clang-formatted [-Wclang-format-violations]
    #ifdef WIN32                // windows 95 and above
                                                       ^
./Libraries/SocketLib/SocketLibTypes.h:44:29: warning: code should be clang-formatted [-Wclang-format-violations]
        typedef SOCKET sock;        // Although sockets are int's on unix, 
                            ^
./Libraries/SocketLib/SocketLibTypes.h:44:75: warning: code should be clang-formatted [-Wclang-format-violations]
        typedef SOCKET sock;        // Although sockets are int's on unix, 
                                                                          ^
./Libraries/SocketLib/SocketLibTypes.h:45:72: warning: code should be clang-formatted [-Wclang-format-violations]
                                    // windows uses it's own typedef of
                                                                       ^
./Libraries/SocketLib/SocketLibTypes.h:46:77: warning: code should be clang-formatted [-Wclang-format-violations]
                                    // SOCKET to represent them. If you look
                                                                            ^
./Libraries/SocketLib/SocketLibTypes.h:47:79: warning: code should be clang-formatted [-Wclang-format-violations]
                                    // in the Winsock2 source code, you'll see
                                                                              ^
./Libraries/SocketLib/SocketLibTypes.h:48:78: warning: code should be clang-formatted [-Wclang-format-violations]
                                    // that it is just a typedef for int, but
                                                                             ^
./Libraries/SocketLib/SocketLibTypes.h:49:79: warning: code should be clang-formatted [-Wclang-format-violations]
                                    // there is absolutely no garuntee that it
                                                                              ^
./Libraries/SocketLib/SocketLibTypes.h:50:72: warning: code should be clang-formatted [-Wclang-format-violations]
                                    // won't change in a later version.
                                                                       ^
./Libraries/SocketLib/SocketLibTypes.h:51:79: warning: code should be clang-formatted [-Wclang-format-violations]
                                    // therefore, in order to avoid confusion,
                                                                              ^
./Libraries/SocketLib/SocketLibTypes.h:52:79: warning: code should be clang-formatted [-Wclang-format-violations]
                                    // this library will create it's own basic
                                                                              ^
./Libraries/SocketLib/SocketLibTypes.h:53:65: warning: code should be clang-formatted [-Wclang-format-violations]
                                    // socket descriptor typedef
                                                                ^
./Libraries/SocketLib/SocketLibTypes.h:56:10: warning: code should be clang-formatted [-Wclang-format-violations]
    #else                       // UNIX/Linux
         ^
./Libraries/SocketLib/SocketLibTypes.h:56:46: warning: code should be clang-formatted [-Wclang-format-violations]
    #else                       // UNIX/Linux
                                             ^
./Libraries/SocketLib/SocketLibTypes.h:57:26: warning: code should be clang-formatted [-Wclang-format-violations]
        typedef int sock;           // see the description above.
                         ^
./Libraries/SocketLib/SocketLibTypes.h:57:66: warning: code should be clang-formatted [-Wclang-format-violations]
        typedef int sock;           // see the description above.
                                                                 ^
./Libraries/SocketLib/SocketLibTypes.h:59:11: warning: code should be clang-formatted [-Wclang-format-violations]
    #endif
          ^
./Libraries/SocketLib/SocketLibTypes.h:61:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibTypes.h:62:75: warning: code should be clang-formatted [-Wclang-format-violations]
    //  Ports will be in host byte order, but IP addresses in network byte 
                                                                          ^
./Libraries/SocketLib/SocketLibTypes.h:63:76: warning: code should be clang-formatted [-Wclang-format-violations]
    //  order. It's easier this way; ports are usually accessed as numbers,
                                                                           ^
./Libraries/SocketLib/SocketLibTypes.h:64:75: warning: code should be clang-formatted [-Wclang-format-violations]
    //  but IP addresses are better accessed through the string functions.
                                                                          ^
./Libraries/SocketLib/SocketLibTypes.h:65:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ========================================================================
                                                                               ^
./Libraries/SocketLib/SocketLibTypes.h:66:37: warning: code should be clang-formatted [-Wclang-format-violations]
    typedef unsigned short int port;        // define the port type.
                                    ^
./Libraries/SocketLib/SocketLibTypes.h:66:69: warning: code should be clang-formatted [-Wclang-format-violations]
    typedef unsigned short int port;        // define the port type.
                                                                    ^
./Libraries/SocketLib/SocketLibTypes.h:67:41: warning: code should be clang-formatted [-Wclang-format-violations]
    typedef unsigned long int ipaddress;    // an IP address for IPv4
                                        ^
./Libraries/SocketLib/SocketLibTypes.h:67:70: warning: code should be clang-formatted [-Wclang-format-violations]
    typedef unsigned long int ipaddress;    // an IP address for IPv4
                                                                     ^
./Libraries/SocketLib/SocketLibTypes.h:70:2: warning: code should be clang-formatted [-Wclang-format-violations]
}   // end namespace SocketLib
 ^
./Libraries/SocketLib/SocketLibTypes.h:70:31: warning: code should be clang-formatted [-Wclang-format-violations]
}   // end namespace SocketLib
                              ^
./Libraries/SocketLib/SocketSet.h:9:20: warning: code should be clang-formatted [-Wclang-format-violations]
#define SOCKETSET_H
                   ^
./Libraries/SocketLib/SocketSet.h:17:20: warning: code should be clang-formatted [-Wclang-format-violations]
namespace SocketLib
                   ^
./Libraries/SocketLib/SocketSet.h:18:2: warning: code should be clang-formatted [-Wclang-format-violations]
{
 ^
./Libraries/SocketLib/SocketSet.h:20:32: warning: code should be clang-formatted [-Wclang-format-violations]
    const int MAX = FD_SETSIZE;
                               ^
./Libraries/SocketLib/SocketSet.h:22:20: warning: code should be clang-formatted [-Wclang-format-violations]
    class SocketSet
                   ^
./Libraries/SocketLib/SocketSet.h:23:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/SocketSet.h:24:12: warning: code should be clang-formatted [-Wclang-format-violations]
    public:
           ^
./Libraries/SocketLib/SocketSet.h:25:21: warning: code should be clang-formatted [-Wclang-format-violations]
        SocketSet();
                    ^
./Libraries/SocketLib/SocketSet.h:26:24: warning: code should be clang-formatted [-Wclang-format-violations]
        void AddSocket( const Socket& p_sock );
                       ^
./Libraries/SocketLib/SocketSet.h:26:37: warning: code should be clang-formatted [-Wclang-format-violations]
        void AddSocket( const Socket& p_sock );
                                    ^
./Libraries/SocketLib/SocketSet.h:26:38: warning: code should be clang-formatted [-Wclang-format-violations]
        void AddSocket( const Socket& p_sock );
                                     ^
./Libraries/SocketLib/SocketSet.h:26:45: warning: code should be clang-formatted [-Wclang-format-violations]
        void AddSocket( const Socket& p_sock );
                                            ^
./Libraries/SocketLib/SocketSet.h:26:48: warning: code should be clang-formatted [-Wclang-format-violations]
        void AddSocket( const Socket& p_sock );
                                               ^
./Libraries/SocketLib/SocketSet.h:27:27: warning: code should be clang-formatted [-Wclang-format-violations]
        void RemoveSocket( const Socket& p_sock );
                          ^
./Libraries/SocketLib/SocketSet.h:27:40: warning: code should be clang-formatted [-Wclang-format-violations]
        void RemoveSocket( const Socket& p_sock );
                                       ^
./Libraries/SocketLib/SocketSet.h:27:41: warning: code should be clang-formatted [-Wclang-format-violations]
        void RemoveSocket( const Socket& p_sock );
                                        ^
./Libraries/SocketLib/SocketSet.h:27:48: warning: code should be clang-formatted [-Wclang-format-violations]
        void RemoveSocket( const Socket& p_sock );
                                               ^
./Libraries/SocketLib/SocketSet.h:27:51: warning: code should be clang-formatted [-Wclang-format-violations]
        void RemoveSocket( const Socket& p_sock );
                                                  ^
./Libraries/SocketLib/SocketSet.h:29:25: warning: code should be clang-formatted [-Wclang-format-violations]
        inline int Poll( long p_time = 0 )
                        ^
./Libraries/SocketLib/SocketSet.h:29:41: warning: code should be clang-formatted [-Wclang-format-violations]
        inline int Poll( long p_time = 0 )
                                        ^
./Libraries/SocketLib/SocketSet.h:29:43: warning: code should be clang-formatted [-Wclang-format-violations]
        inline int Poll( long p_time = 0 )
                                          ^
./Libraries/SocketLib/SocketSet.h:30:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/SocketSet.h:31:76: warning: code should be clang-formatted [-Wclang-format-violations]
            // this is the time value structure. It will determine how long
                                                                           ^
./Libraries/SocketLib/SocketSet.h:32:46: warning: code should be clang-formatted [-Wclang-format-violations]
            // the select function will wait.
                                             ^
./Libraries/SocketLib/SocketSet.h:33:33: warning: code should be clang-formatted [-Wclang-format-violations]
            struct timeval t = { 0, p_time * 1000 };
                                ^
./Libraries/SocketLib/SocketSet.h:33:50: warning: code should be clang-formatted [-Wclang-format-violations]
            struct timeval t = { 0, p_time * 1000 };
                                                 ^
./Libraries/SocketLib/SocketSet.h:33:53: warning: code should be clang-formatted [-Wclang-format-violations]
            struct timeval t = { 0, p_time * 1000 };
                                                    ^
./Libraries/SocketLib/SocketSet.h:35:56: warning: code should be clang-formatted [-Wclang-format-violations]
            // copy the set over into the activity set.
                                                       ^
./Libraries/SocketLib/SocketSet.h:36:35: warning: code should be clang-formatted [-Wclang-format-violations]
            m_activityset = m_set;
                                  ^
./Libraries/SocketLib/SocketSet.h:38:48: warning: code should be clang-formatted [-Wclang-format-violations]
            // now run select() on the sockets.
                                               ^
./Libraries/SocketLib/SocketSet.h:39:25: warning: code should be clang-formatted [-Wclang-format-violations]
            #ifdef WIN32
                        ^
./Libraries/SocketLib/SocketSet.h:40:31: warning: code should be clang-formatted [-Wclang-format-violations]
                return select( 0, &m_activityset, 0, 0, &t );
                              ^
./Libraries/SocketLib/SocketSet.h:40:59: warning: code should be clang-formatted [-Wclang-format-violations]
                return select( 0, &m_activityset, 0, 0, &t );
                                                          ^
./Libraries/SocketLib/SocketSet.h:40:62: warning: code should be clang-formatted [-Wclang-format-violations]
                return select( 0, &m_activityset, 0, 0, &t );
                                                             ^
./Libraries/SocketLib/SocketSet.h:41:18: warning: code should be clang-formatted [-Wclang-format-violations]
            #else
                 ^
./Libraries/SocketLib/SocketSet.h:42:19: warning: code should be clang-formatted [-Wclang-format-violations]
                if( m_socketdescs.size() == 0 ) return 0;
                  ^
./Libraries/SocketLib/SocketSet.h:42:20: warning: code should be clang-formatted [-Wclang-format-violations]
                if( m_socketdescs.size() == 0 ) return 0;
                   ^
./Libraries/SocketLib/SocketSet.h:42:46: warning: code should be clang-formatted [-Wclang-format-violations]
                if( m_socketdescs.size() == 0 ) return 0;
                                             ^
./Libraries/SocketLib/SocketSet.h:42:48: warning: code should be clang-formatted [-Wclang-format-violations]
                if( m_socketdescs.size() == 0 ) return 0;
                                               ^
./Libraries/SocketLib/SocketSet.h:42:58: warning: code should be clang-formatted [-Wclang-format-violations]
                if( m_socketdescs.size() == 0 ) return 0;
                                                         ^
./Libraries/SocketLib/SocketSet.h:43:31: warning: code should be clang-formatted [-Wclang-format-violations]
                return select( *(m_socketdescs.rbegin()) + 1, &m_activityset, 0, 0, &t );
                              ^
./Libraries/SocketLib/SocketSet.h:43:87: warning: code should be clang-formatted [-Wclang-format-violations]
                return select( *(m_socketdescs.rbegin()) + 1, &m_activityset, 0, 0, &t );
                                                                                      ^
./Libraries/SocketLib/SocketSet.h:43:90: warning: code should be clang-formatted [-Wclang-format-violations]
                return select( *(m_socketdescs.rbegin()) + 1, &m_activityset, 0, 0, &t );
                                                                                         ^
./Libraries/SocketLib/SocketSet.h:44:19: warning: code should be clang-formatted [-Wclang-format-violations]
            #endif
                  ^
./Libraries/SocketLib/SocketSet.h:45:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/SocketSet.h:47:33: warning: code should be clang-formatted [-Wclang-format-violations]
        inline bool HasActivity( const Socket& p_sock )
                                ^
./Libraries/SocketLib/SocketSet.h:47:46: warning: code should be clang-formatted [-Wclang-format-violations]
        inline bool HasActivity( const Socket& p_sock )
                                             ^
./Libraries/SocketLib/SocketSet.h:47:47: warning: code should be clang-formatted [-Wclang-format-violations]
        inline bool HasActivity( const Socket& p_sock )
                                              ^
./Libraries/SocketLib/SocketSet.h:47:54: warning: code should be clang-formatted [-Wclang-format-violations]
        inline bool HasActivity( const Socket& p_sock )
                                                     ^
./Libraries/SocketLib/SocketSet.h:47:56: warning: code should be clang-formatted [-Wclang-format-violations]
        inline bool HasActivity( const Socket& p_sock )
                                                       ^
./Libraries/SocketLib/SocketSet.h:48:10: warning: code should be clang-formatted [-Wclang-format-violations]
        {
         ^
./Libraries/SocketLib/SocketSet.h:49:29: warning: code should be clang-formatted [-Wclang-format-violations]
            return FD_ISSET( p_sock.GetSock(), &m_activityset ) != 0;
                            ^
./Libraries/SocketLib/SocketSet.h:49:62: warning: code should be clang-formatted [-Wclang-format-violations]
            return FD_ISSET( p_sock.GetSock(), &m_activityset ) != 0;
                                                             ^
./Libraries/SocketLib/SocketSet.h:49:70: warning: code should be clang-formatted [-Wclang-format-violations]
            return FD_ISSET( p_sock.GetSock(), &m_activityset ) != 0;
                                                                     ^
./Libraries/SocketLib/SocketSet.h:50:10: warning: code should be clang-formatted [-Wclang-format-violations]
        }
         ^
./Libraries/SocketLib/SocketSet.h:53:15: warning: code should be clang-formatted [-Wclang-format-violations]
    protected:
              ^
./Libraries/SocketLib/SocketSet.h:55:54: warning: code should be clang-formatted [-Wclang-format-violations]
        // a set representing the socket descriptors.
                                                     ^
./Libraries/SocketLib/SocketSet.h:56:22: warning: code should be clang-formatted [-Wclang-format-violations]
        fd_set m_set;
                     ^
./Libraries/SocketLib/SocketSet.h:58:79: warning: code should be clang-formatted [-Wclang-format-violations]
        // this set will represent all the sockets that have activity on them.
                                                                              ^
./Libraries/SocketLib/SocketSet.h:59:30: warning: code should be clang-formatted [-Wclang-format-violations]
        fd_set m_activityset;
                             ^
./Libraries/SocketLib/SocketSet.h:61:76: warning: code should be clang-formatted [-Wclang-format-violations]
        // this is only used for linux, since select() requires the largest
                                                                           ^
./Libraries/SocketLib/SocketSet.h:62:47: warning: code should be clang-formatted [-Wclang-format-violations]
        // descriptor +1 passed into it. BLAH!
                                              ^
./Libraries/SocketLib/SocketSet.h:63:22: warning: code should be clang-formatted [-Wclang-format-violations]
        #ifndef WIN32
                     ^
./Libraries/SocketLib/SocketSet.h:64:42: warning: code should be clang-formatted [-Wclang-format-violations]
            std::set<sock> m_socketdescs;
                                         ^
./Libraries/SocketLib/SocketSet.h:65:15: warning: code should be clang-formatted [-Wclang-format-violations]
        #endif
              ^
./Libraries/SocketLib/SocketSet.h:68:2: warning: code should be clang-formatted [-Wclang-format-violations]
}   // end namespace SocketLib
 ^
./Libraries/SocketLib/SocketSet.h:68:31: warning: code should be clang-formatted [-Wclang-format-violations]
}   // end namespace SocketLib
                              ^
./Libraries/SocketLib/Telnet.h:4:78: warning: code should be clang-formatted [-Wclang-format-violations]
// Telnet.h - This is the header for the telnet policy class; it receives raw 
                                                                             ^
./Libraries/SocketLib/Telnet.h:5:73: warning: code should be clang-formatted [-Wclang-format-violations]
//            data from a connection and strips out or takes care of any 
                                                                        ^
./Libraries/SocketLib/Telnet.h:6:29: warning: code should be clang-formatted [-Wclang-format-violations]
//            command codes.
                            ^
./Libraries/SocketLib/Telnet.h:12:1: warning: code should be clang-formatted [-Wclang-format-violations]
#include <string>
^
./Libraries/SocketLib/Telnet.h:17:20: warning: code should be clang-formatted [-Wclang-format-violations]
namespace SocketLib
                   ^
./Libraries/SocketLib/Telnet.h:47:43: warning: code should be clang-formatted [-Wclang-format-violations]
const std::string newline = "\r\n\x1B[0m";
                                          ^
./Libraries/SocketLib/Telnet.h:50:13: warning: code should be clang-formatted [-Wclang-format-violations]
class Telnet
            ^
./Libraries/SocketLib/Telnet.h:53:8: warning: code should be clang-formatted [-Wclang-format-violations]
public:
       ^
./Libraries/SocketLib/Telnet.h:54:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/Telnet.h:55:62: warning: code should be clang-formatted [-Wclang-format-violations]
    //  this is the handler type used for the telnet protocol
                                                             ^
./Libraries/SocketLib/Telnet.h:56:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/Telnet.h:57:60: warning: code should be clang-formatted [-Wclang-format-violations]
    typedef ConnectionHandler<Telnet, std::string> handler;
                                                           ^
./Libraries/SocketLib/Telnet.h:59:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/Telnet.h:60:74: warning: code should be clang-formatted [-Wclang-format-violations]
    //  Translates raw byte data into telnet data, and may send it out to
                                                                         ^
./Libraries/SocketLib/Telnet.h:61:50: warning: code should be clang-formatted [-Wclang-format-violations]
    //  the connection's current protocol handler
                                                 ^
./Libraries/SocketLib/Telnet.h:62:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/Telnet.h:63:20: warning: code should be clang-formatted [-Wclang-format-violations]
    void Translate( Connection<Telnet>& p_conn, char* p_buffer, int p_size );
                   ^
./Libraries/SocketLib/Telnet.h:63:39: warning: code should be clang-formatted [-Wclang-format-violations]
    void Translate( Connection<Telnet>& p_conn, char* p_buffer, int p_size );
                                      ^
./Libraries/SocketLib/Telnet.h:63:40: warning: code should be clang-formatted [-Wclang-format-violations]
    void Translate( Connection<Telnet>& p_conn, char* p_buffer, int p_size );
                                       ^
./Libraries/SocketLib/Telnet.h:63:53: warning: code should be clang-formatted [-Wclang-format-violations]
    void Translate( Connection<Telnet>& p_conn, char* p_buffer, int p_size );
                                                    ^
./Libraries/SocketLib/Telnet.h:63:54: warning: code should be clang-formatted [-Wclang-format-violations]
    void Translate( Connection<Telnet>& p_conn, char* p_buffer, int p_size );
                                                     ^
./Libraries/SocketLib/Telnet.h:63:75: warning: code should be clang-formatted [-Wclang-format-violations]
    void Translate( Connection<Telnet>& p_conn, char* p_buffer, int p_size );
                                                                          ^
./Libraries/SocketLib/Telnet.h:63:78: warning: code should be clang-formatted [-Wclang-format-violations]
    void Translate( Connection<Telnet>& p_conn, char* p_buffer, int p_size );
                                                                             ^
./Libraries/SocketLib/Telnet.h:65:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/Telnet.h:66:81: warning: code should be clang-formatted [-Wclang-format-violations]
    //  This sends a plain text string to the connection, doing any translations
                                                                                ^
./Libraries/SocketLib/Telnet.h:67:23: warning: code should be clang-formatted [-Wclang-format-violations]
    //  if neccessary.
                      ^
./Libraries/SocketLib/Telnet.h:68:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/Telnet.h:69:21: warning: code should be clang-formatted [-Wclang-format-violations]
    void SendString( Connection<Telnet>& p_conn, std::string p_string );
                    ^
./Libraries/SocketLib/Telnet.h:69:40: warning: code should be clang-formatted [-Wclang-format-violations]
    void SendString( Connection<Telnet>& p_conn, std::string p_string );
                                       ^
./Libraries/SocketLib/Telnet.h:69:41: warning: code should be clang-formatted [-Wclang-format-violations]
    void SendString( Connection<Telnet>& p_conn, std::string p_string );
                                        ^
./Libraries/SocketLib/Telnet.h:69:70: warning: code should be clang-formatted [-Wclang-format-violations]
    void SendString( Connection<Telnet>& p_conn, std::string p_string );
                                                                     ^
./Libraries/SocketLib/Telnet.h:69:73: warning: code should be clang-formatted [-Wclang-format-violations]
    void SendString( Connection<Telnet>& p_conn, std::string p_string );
                                                                        ^
./Libraries/SocketLib/Telnet.h:71:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/Telnet.h:72:38: warning: code should be clang-formatted [-Wclang-format-violations]
    //  Constructs the telnet policy.
                                     ^
./Libraries/SocketLib/Telnet.h:73:80: warning: code should be clang-formatted [-Wclang-format-violations]
    // ------------------------------------------------------------------------
                                                                               ^
./Libraries/SocketLib/Telnet.h:74:20: warning: code should be clang-formatted [-Wclang-format-violations]
    inline Telnet()
                   ^
./Libraries/SocketLib/Telnet.h:75:6: warning: code should be clang-formatted [-Wclang-format-violations]
    {
     ^
./Libraries/SocketLib/Telnet.h:76:26: warning: code should be clang-formatted [-Wclang-format-violations]
        m_buffersize = 0;
                         ^
./Libraries/SocketLib/Telnet.h:77:6: warning: code should be clang-formatted [-Wclang-format-violations]
    }
     ^
./Libraries/SocketLib/Telnet.h:79:26: warning: code should be clang-formatted [-Wclang-format-violations]
    inline int Buffered()   { return m_buffersize; }
                         ^
./Libraries/SocketLib/Telnet.h:81:11: warning: code should be clang-formatted [-Wclang-format-violations]
protected:
          ^
./Libraries/SocketLib/Telnet.h:83:74: warning: code should be clang-formatted [-Wclang-format-violations]
    // This is the buffer that will contain all the processed telnet data
                                                                         ^
./Libraries/SocketLib/Telnet.h:84:31: warning: code should be clang-formatted [-Wclang-format-violations]
    char m_buffer[BUFFERSIZE];
                              ^
./Libraries/SocketLib/Telnet.h:86:3: warning: code should be clang-formatted [-Wclang-format-violations]
};
  ^
./Libraries/SocketLib/Telnet.h:89:2: warning: code should be clang-formatted [-Wclang-format-violations]
}   // end namespace SocketLib
 ^
